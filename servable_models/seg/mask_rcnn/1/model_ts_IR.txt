module __torch__.detectron2.export.flatten.TracingAdapter {
  parameters {
  }
  attributes {
    training = True
    _is_full_backward_hook = None
    model = <__torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN object at 0x561907968880>
  }
  methods {
    method forward {
      graph(%self.1 : __torch__.detectron2.export.flatten.TracingAdapter,
            %860 : Float(3, 1067, 800, strides=[1, 2400, 3], requires_grad=0, device=cpu)):
        %model : __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN = prim::GetAttr[name="model"](%self.1)
        %roi_heads : __torch__.detectron2.modeling.roi_heads.roi_heads.StandardROIHeads = prim::GetAttr[name="roi_heads"](%model)
        %model.7 : __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN = prim::GetAttr[name="model"](%self.1)
        %proposal_generator : __torch__.detectron2.modeling.proposal_generator.rpn.RPN = prim::GetAttr[name="proposal_generator"](%model.7)
        %model.5 : __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN = prim::GetAttr[name="model"](%self.1)
        %backbone : __torch__.detectron2.modeling.backbone.fpn.FPN = prim::GetAttr[name="backbone"](%model.5)
        %model.3 : __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN = prim::GetAttr[name="model"](%self.1)
        %pixel_std : Tensor = prim::GetAttr[name="pixel_std"](%model.3)
        %model.1 : __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN = prim::GetAttr[name="model"](%self.1)
        %pixel_mean : Tensor = prim::GetAttr[name="pixel_mean"](%model.1)
        %861 : Function = prim::Constant[name="move_device_like"]()
        %x.1 : Tensor = prim::CallFunction(%861, %860, %pixel_mean)
        %863 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/meta_arch/rcnn.py:228:0
        %864 : Float(3, 1067, 800, strides=[1, 2400, 3], requires_grad=0, device=cuda:0) = aten::sub(%x.1, %pixel_mean, %863) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/meta_arch/rcnn.py:228:0
        %t : Float(3, 1067, 800, strides=[1, 2400, 3], requires_grad=0, device=cuda:0) = aten::div(%864, %pixel_std) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/meta_arch/rcnn.py:228:0
        %888 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:87:0
        %889 : int = aten::size(%t, %888) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:87:0
        %890 : Long(device=cpu) = prim::NumToTensor(%889)
        %900 : int = prim::Constant[value=2]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:87:0
        %901 : int = aten::size(%t, %900) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:87:0
        %902 : Long(device=cpu) = prim::NumToTensor(%901)
        %903 : Tensor[] = prim::ListConstruct(%890, %902)
        %904 : int = prim::Constant[value=0]() # export_model.py:40:0
        %905 : Long(2, strides=[1], requires_grad=0, device=cpu) = aten::stack(%903, %904) # export_model.py:40:0
        %906 : int = prim::Constant[value=4]() # export_model.py:40:0
        %907 : int = prim::Constant[value=0]() # export_model.py:40:0
        %908 : Device = prim::Constant[value="cuda"]() # export_model.py:40:0
        %909 : NoneType = prim::Constant()
        %910 : bool = prim::Constant[value=0]() # export_model.py:40:0
        %911 : bool = prim::Constant[value=0]() # export_model.py:40:0
        %912 : NoneType = prim::Constant()
        %image_size : Long(2, strides=[1], requires_grad=0, device=cuda:0) = aten::to(%905, %906, %907, %908, %909, %910, %911, %912) # export_model.py:40:0
        %914 : Tensor[] = prim::ListConstruct(%image_size)
        %915 : int = prim::Constant[value=0]() # export_model.py:40:0
        %916 : Long(1, 2, strides=[2, 1], requires_grad=0, device=cuda:0) = aten::stack(%914, %915) # export_model.py:40:0
        %917 : int = prim::Constant[value=4]() # export_model.py:40:0
        %918 : int = prim::Constant[value=0]() # export_model.py:40:0
        %919 : Device = prim::Constant[value="cuda"]() # export_model.py:40:0
        %920 : NoneType = prim::Constant()
        %921 : bool = prim::Constant[value=0]() # export_model.py:40:0
        %922 : bool = prim::Constant[value=0]() # export_model.py:40:0
        %923 : NoneType = prim::Constant()
        %924 : Long(1, 2, strides=[2, 1], requires_grad=0, device=cuda:0) = aten::to(%916, %917, %918, %919, %920, %921, %922, %923) # export_model.py:40:0
        %925 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:89:0
        %926 : bool = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:89:0
        %max_size.1 : Long(2, strides=[1], requires_grad=0, device=cuda:0), %928 : Long(2, strides=[1], requires_grad=0, device=cuda:0) = aten::max(%924, %925, %926) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:89:0
        %929 : Long(requires_grad=0, device=cpu) = prim::Constant[value={31}]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %930 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %931 : Long(2, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%max_size.1, %929, %930) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %932 : Long(requires_grad=0, device=cpu) = prim::Constant[value={32}]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %933 : str = prim::Constant[value="floor"]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %934 : Long(2, strides=[1], requires_grad=0, device=cuda:0) = aten::div(%931, %932, %933) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %935 : Long(requires_grad=0, device=cpu) = prim::Constant[value={32}]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %max_size : Long(2, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%934, %935) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:101:0
        %937 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %938 : int = prim::Constant[value=-1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %939 : Long(requires_grad=0, device=cuda:0) = aten::select(%max_size, %937, %938) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %940 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %941 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %942 : Long(requires_grad=0, device=cuda:0) = aten::select(%image_size, %940, %941) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %943 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %944 : Long(requires_grad=0, device=cuda:0) = aten::sub(%939, %942, %943) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %953 : int = aten::Int(%944)
        %945 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %946 : int = prim::Constant[value=-2]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %947 : Long(requires_grad=0, device=cuda:0) = aten::select(%max_size, %945, %946) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %948 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %949 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %950 : Long(requires_grad=0, device=cuda:0) = aten::select(%image_size, %948, %949) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %951 : int = prim::Constant[value=1]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %952 : Long(requires_grad=0, device=cuda:0) = aten::sub(%947, %950, %951) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:114:0
        %954 : int = aten::Int(%952)
        %955 : int = prim::Constant[value=0]() # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:4364:0
        %956 : int = prim::Constant[value=0]() # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:4364:0
        %957 : int[] = prim::ListConstruct(%955, %953, %956, %954)
        %958 : float = prim::Constant[value=0.]() # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:4364:0
        %959 : Float(3, 1088, 800, strides=[870400, 800, 1], requires_grad=0, device=cuda:0) = aten::constant_pad_nd(%t, %957, %958) # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:4364:0
        %960 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:115:0
        %batched_imgs : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze_(%959, %960) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:115:0
        %962 : int = prim::Constant[value=0]() # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:129:0
        %x.3 : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0) = aten::contiguous(%batched_imgs, %962) # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/image_list.py:129:0
        %7273 : (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%backbone, %x.3)
        %7233 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0), %7234 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0), %7235 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0), %7236 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7237 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7238 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7239 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7240 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0), %7241 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7242 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), %7243 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%7273)
        %7274 : Tensor = prim::CallMethod[name="forward"](%proposal_generator, %7233, %7234, %7235, %7236, %7237, %7238, %7239, %7240, %7241, %image_size)
        %7275 : (Tensor, Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%roi_heads, %7233, %7274, %7234, %7235, %7242, %image_size, %7243)
        %7269 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0), %7270 : Long(52, strides=[2], requires_grad=0, device=cuda:0), %7271 : Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0), %7272 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%7275)
        %6271 : (Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Long(52, strides=[2], requires_grad=0, device=cuda:0), Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0), Float(52, strides=[1], requires_grad=0, device=cuda:0), Long(2, strides=[1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%7269, %7270, %7271, %7272, %image_size)
        return (%6271)
  
    }
  }
  submodules {
    module __torch__.detectron2.modeling.meta_arch.rcnn.GeneralizedRCNN {
      parameters {
      }
      attributes {
        pixel_mean = ...
        pixel_std = ...
        training = False
        _is_full_backward_hook = None
        backbone = <__torch__.detectron2.modeling.backbone.fpn.FPN object at 0x561907942b20>
        proposal_generator = <__torch__.detectron2.modeling.proposal_generator.rpn.RPN object at 0x5619079dc9e0>
        roi_heads = <__torch__.detectron2.modeling.roi_heads.roi_heads.StandardROIHeads object at 0x561907967390>
      }
      methods {
      }
      submodules {
        module __torch__.detectron2.modeling.backbone.fpn.FPN {
          parameters {
          }
          attributes {
            training = False
            _is_full_backward_hook = None
            fpn_lateral2 = <__torch__.detectron2.layers.wrappers.Conv2d object at 0x561907d64610>
            fpn_output2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_0.Conv2d object at 0x561909c00f70>
            fpn_lateral3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_1.Conv2d object at 0x561909bfcef0>
            fpn_output3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_2.Conv2d object at 0x561909bf5db0>
            fpn_lateral4 = <__torch__.detectron2.layers.wrappers.___torch_mangle_3.Conv2d object at 0x561909bf44f0>
            fpn_output4 = <__torch__.detectron2.layers.wrappers.___torch_mangle_4.Conv2d object at 0x561907d652b0>
            fpn_lateral5 = <__torch__.detectron2.layers.wrappers.___torch_mangle_5.Conv2d object at 0x561909bf6190>
            fpn_output5 = <__torch__.detectron2.layers.wrappers.___torch_mangle_6.Conv2d object at 0x561909bf48d0>
            top_block = <__torch__.detectron2.modeling.backbone.fpn.LastLevelMaxPool object at 0x5619087cd790>
            bottom_up = <__torch__.detectron2.modeling.backbone.resnet.ResNet object at 0x561907941760>
          }
          methods {
            method forward {
              graph(%self.3 : __torch__.detectron2.modeling.backbone.fpn.FPN,
                    %x.3 : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0)):
                %top_block : __torch__.detectron2.modeling.backbone.fpn.LastLevelMaxPool = prim::GetAttr[name="top_block"](%self.3)
                %fpn_output2 : __torch__.detectron2.layers.wrappers.___torch_mangle_0.Conv2d = prim::GetAttr[name="fpn_output2"](%self.3)
                %fpn_lateral2 : __torch__.detectron2.layers.wrappers.Conv2d = prim::GetAttr[name="fpn_lateral2"](%self.3)
                %fpn_output3 : __torch__.detectron2.layers.wrappers.___torch_mangle_2.Conv2d = prim::GetAttr[name="fpn_output3"](%self.3)
                %fpn_lateral3 : __torch__.detectron2.layers.wrappers.___torch_mangle_1.Conv2d = prim::GetAttr[name="fpn_lateral3"](%self.3)
                %fpn_output4 : __torch__.detectron2.layers.wrappers.___torch_mangle_4.Conv2d = prim::GetAttr[name="fpn_output4"](%self.3)
                %fpn_lateral4 : __torch__.detectron2.layers.wrappers.___torch_mangle_3.Conv2d = prim::GetAttr[name="fpn_lateral4"](%self.3)
                %fpn_output5 : __torch__.detectron2.layers.wrappers.___torch_mangle_6.Conv2d = prim::GetAttr[name="fpn_output5"](%self.3)
                %fpn_lateral5 : __torch__.detectron2.layers.wrappers.___torch_mangle_5.Conv2d = prim::GetAttr[name="fpn_lateral5"](%self.3)
                %bottom_up : __torch__.detectron2.modeling.backbone.resnet.ResNet = prim::GetAttr[name="bottom_up"](%self.3)
                %48 : (Tensor, Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%bottom_up, %x.3)
                %13 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0), %14 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0), %15 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0), %16 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%48)
                %49 : Tensor = prim::CallMethod[name="forward"](%fpn_lateral5, %13)
                %50 : Tensor = prim::CallMethod[name="forward"](%fpn_output5, %49)
                %19 : NoneType = prim::Constant(), scope: __module.model.backbone
                %20 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %21 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %22 : float[] = prim::ListConstruct(%20, %21), scope: __module.model.backbone
                %top_down_features.1 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::upsample_nearest2d(%49, %19, %22), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %51 : Tensor = prim::CallMethod[name="forward"](%fpn_lateral4, %14)
                %25 : int = prim::Constant[value=1](), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %x.107 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add(%51, %top_down_features.1, %25), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %52 : Tensor = prim::CallMethod[name="forward"](%fpn_output4, %x.107)
                %28 : NoneType = prim::Constant(), scope: __module.model.backbone
                %29 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %30 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %31 : float[] = prim::ListConstruct(%29, %30), scope: __module.model.backbone
                %top_down_features.3 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::upsample_nearest2d(%x.107, %28, %31), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %53 : Tensor = prim::CallMethod[name="forward"](%fpn_lateral3, %15)
                %34 : int = prim::Constant[value=1](), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %x.109 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::add(%53, %top_down_features.3, %34), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %54 : Tensor = prim::CallMethod[name="forward"](%fpn_output3, %x.109)
                %37 : NoneType = prim::Constant(), scope: __module.model.backbone
                %38 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %39 : float = prim::Constant[value=2.](), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %40 : float[] = prim::ListConstruct(%38, %39), scope: __module.model.backbone
                %top_down_features : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::upsample_nearest2d(%x.109, %37, %40), scope: __module.model.backbone # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:3891:0
                %55 : Tensor = prim::CallMethod[name="forward"](%fpn_lateral2, %16)
                %43 : int = prim::Constant[value=1](), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %x.111 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::add(%55, %top_down_features, %43), scope: __module.model.backbone # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/fpn.py:155:0
                %56 : Tensor = prim::CallMethod[name="forward"](%fpn_output2, %x.111)
                %57 : Tensor = prim::CallMethod[name="forward"](%top_block, %50)
                %47 : (Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0), Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0), Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%56, %54, %52, %50, %50, %50, %50, %57, %50, %50, %50)
                return (%47)
          
            }
          }
          submodules {
            module __torch__.detectron2.layers.wrappers.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.273 : __torch__.detectron2.layers.wrappers.Conv2d,
                        %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                    %bias.229 : Tensor = prim::GetAttr[name="bias"](%self.273)
                    %weight.335 : Tensor = prim::GetAttr[name="weight"](%self.273)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2
                    %7 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %lateral_features : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.335, %bias.229, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_lateral2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%lateral_features)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_0.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.275 : __torch__.detectron2.layers.wrappers.___torch_mangle_0.Conv2d,
                        %x.111 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                    %bias.231 : Tensor = prim::GetAttr[name="bias"](%self.275)
                    %weight.337 : Tensor = prim::GetAttr[name="weight"](%self.275)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_output2
                    %7 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_output2
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_output2
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_output2
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %feature_map.1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.111, %weight.337, %bias.231, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_output2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%feature_map.1)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_1.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.269 : __torch__.detectron2.layers.wrappers.___torch_mangle_1.Conv2d,
                        %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                    %bias.225 : Tensor = prim::GetAttr[name="bias"](%self.269)
                    %weight.331 : Tensor = prim::GetAttr[name="weight"](%self.269)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3
                    %7 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %lateral_features.3 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.331, %bias.225, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_lateral3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%lateral_features.3)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_2.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.271 : __torch__.detectron2.layers.wrappers.___torch_mangle_2.Conv2d,
                        %x.109 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                    %bias.227 : Tensor = prim::GetAttr[name="bias"](%self.271)
                    %weight.333 : Tensor = prim::GetAttr[name="weight"](%self.271)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_output3
                    %7 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_output3
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_output3
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_output3
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %feature_map.3 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.109, %weight.333, %bias.227, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_output3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%feature_map.3)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_3.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.265 : __torch__.detectron2.layers.wrappers.___torch_mangle_3.Conv2d,
                        %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                    %bias.221 : Tensor = prim::GetAttr[name="bias"](%self.265)
                    %weight.327 : Tensor = prim::GetAttr[name="weight"](%self.265)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4
                    %7 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %lateral_features.1 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.327, %bias.221, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_lateral4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%lateral_features.1)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_4.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.267 : __torch__.detectron2.layers.wrappers.___torch_mangle_4.Conv2d,
                        %x.107 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                    %bias.223 : Tensor = prim::GetAttr[name="bias"](%self.267)
                    %weight.329 : Tensor = prim::GetAttr[name="weight"](%self.267)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_output4
                    %7 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_output4
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_output4
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_output4
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %feature_map.5 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.107, %weight.329, %bias.223, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_output4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%feature_map.5)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_5.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.261 : __torch__.detectron2.layers.wrappers.___torch_mangle_5.Conv2d,
                        %1 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                    %bias.217 : Tensor = prim::GetAttr[name="bias"](%self.261)
                    %weight.323 : Tensor = prim::GetAttr[name="weight"](%self.261)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5
                    %7 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %x.105 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.323, %bias.217, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_lateral5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%x.105)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.layers.wrappers.___torch_mangle_6.Conv2d {
              parameters {
                weight = ...
                bias = ...
              }
              attributes {
                weight = ...
                bias = ...
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.263 : __torch__.detectron2.layers.wrappers.___torch_mangle_6.Conv2d,
                        %1 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                    %bias.219 : Tensor = prim::GetAttr[name="bias"](%self.263)
                    %weight.325 : Tensor = prim::GetAttr[name="weight"](%self.263)
                    %4 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.backbone/__module.model.backbone.fpn_output5
                    %7 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.backbone/__module.model.backbone.fpn_output5
                    %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.backbone/__module.model.backbone.fpn_output5
                    %13 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %14 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.fpn_output5
                    %17 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %18 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %20 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    %input.109 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.325, %bias.219, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.backbone/__module.model.backbone.fpn_output5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                    return (%input.109)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.modeling.backbone.fpn.LastLevelMaxPool {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
              }
              methods {
                method forward {
                  graph(%self.277 : __torch__.detectron2.modeling.backbone.fpn.LastLevelMaxPool,
                        %1 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                    %2 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %3 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %4 : int[] = prim::ListConstruct(%2, %3), scope: __module.model.backbone/__module.model.backbone.top_block
                    %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.top_block
                    %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.top_block
                    %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.top_block
                    %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    %feature_map : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::max_pool2d(%1, %4, %7, %10, %13, %14), scope: __module.model.backbone/__module.model.backbone.top_block # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                    return (%feature_map)
              
                }
              }
              submodules {
              }
            }
            module __torch__.detectron2.modeling.backbone.resnet.ResNet {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                stem = <__torch__.detectron2.modeling.backbone.resnet.BasicStem object at 0x5619079491a0>
                res2 = <__torch__.torch.nn.modules.container.Sequential object at 0x56190b6cd280>
                res3 = <__torch__.torch.nn.modules.container.___torch_mangle_60.Sequential object at 0x56190b6be120>
                res4 = <__torch__.torch.nn.modules.container.___torch_mangle_105.Sequential object at 0x5619079b57a0>
                res5 = <__torch__.torch.nn.modules.container.___torch_mangle_129.Sequential object at 0x56190793fcb0>
              }
              methods {
                method forward {
                  graph(%self.5 : __torch__.detectron2.modeling.backbone.resnet.ResNet,
                        %x.3 : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0)):
                    %res5 : __torch__.torch.nn.modules.container.___torch_mangle_129.Sequential = prim::GetAttr[name="res5"](%self.5)
                    %res4 : __torch__.torch.nn.modules.container.___torch_mangle_105.Sequential = prim::GetAttr[name="res4"](%self.5)
                    %res3 : __torch__.torch.nn.modules.container.___torch_mangle_60.Sequential = prim::GetAttr[name="res3"](%self.5)
                    %res2 : __torch__.torch.nn.modules.container.Sequential = prim::GetAttr[name="res2"](%self.5)
                    %stem : __torch__.detectron2.modeling.backbone.resnet.BasicStem = prim::GetAttr[name="stem"](%self.5)
                    %13 : Tensor = prim::CallMethod[name="forward"](%stem, %x.3)
                    %14 : Tensor = prim::CallMethod[name="forward"](%res2, %13)
                    %15 : Tensor = prim::CallMethod[name="forward"](%res3, %14)
                    %16 : Tensor = prim::CallMethod[name="forward"](%res4, %15)
                    %17 : Tensor = prim::CallMethod[name="forward"](%res5, %16)
                    %12 : (Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0), Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0), Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%17, %16, %15, %14)
                    return (%12)
              
                }
              }
              submodules {
                module __torch__.detectron2.modeling.backbone.resnet.BasicStem {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_7.Conv2d object at 0x561907949120>
                  }
                  methods {
                    method forward {
                      graph(%self.7 : __torch__.detectron2.modeling.backbone.resnet.BasicStem,
                            %x.3 : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0)):
                        %conv1.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_7.Conv2d = prim::GetAttr[name="conv1"](%self.7)
                        %19 : Tensor = prim::CallMethod[name="forward"](%conv1.1, %x.3)
                        %input.3 : Float(1, 64, 544, 400, strides=[13926400, 217600, 400, 1], requires_grad=0, device=cuda:0) = aten::relu_(%19), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:357:0
                        %5 : int = prim::Constant[value=3](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %6 : int = prim::Constant[value=3](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem
                        %8 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %9 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem
                        %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem
                        %14 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %15 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem
                        %17 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        %x.7 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::max_pool2d(%input.3, %7, %10, %13, %16, %17), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:797:0
                        return (%x.7)
                  
                    }
                  }
                  submodules {
                    module __torch__.detectron2.layers.wrappers.___torch_mangle_7.Conv2d {
                      parameters {
                        weight = ...
                      }
                      attributes {
                        weight = ...
                        training = False
                        _is_full_backward_hook = None
                        norm = <__torch__.detectron2.layers.batch_norm.FrozenBatchNorm2d object at 0x56190ab25120>
                      }
                      methods {
                        method forward {
                          graph(%self.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_7.Conv2d,
                                %x.3 : Float(1, 3, 1088, 800, strides=[2611200, 870400, 800, 1], requires_grad=0, device=cuda:0)):
                            %norm.1 : __torch__.detectron2.layers.batch_norm.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.9)
                            %weight.111 : Tensor = prim::GetAttr[name="weight"](%self.9)
                            %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1
                            %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1
                            %8 : int = prim::Constant[value=3](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %9 : int = prim::Constant[value=3](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1
                            %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1
                            %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1
                            %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %input.1 : Float(1, 64, 544, 400, strides=[13926400, 217600, 400, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.3, %weight.111, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                            %25 : Tensor = prim::CallMethod[name="forward"](%norm.1, %input.1)
                            return (%25)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.batch_norm.FrozenBatchNorm2d {
                          parameters {
                          }
                          attributes {
                            weight = ...
                            bias = ...
                            running_mean = ...
                            running_var = ...
                            training = False
                            _is_full_backward_hook = None
                          }
                          methods {
                            method forward {
                              graph(%self.11 : __torch__.detectron2.layers.batch_norm.FrozenBatchNorm2d,
                                    %input.1 : Float(1, 64, 544, 400, strides=[13926400, 217600, 400, 1], requires_grad=0, device=cuda:0)):
                                %running_var.107 : Tensor = prim::GetAttr[name="running_var"](%self.11)
                                %running_mean.107 : Tensor = prim::GetAttr[name="running_mean"](%self.11)
                                %bias.111 : Tensor = prim::GetAttr[name="bias"](%self.11)
                                %weight.113 : Tensor = prim::GetAttr[name="weight"](%self.11)
                                %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1/__module.model.backbone.bottom_up.stem.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1/__module.model.backbone.bottom_up.stem.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1/__module.model.backbone.bottom_up.stem.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1/__module.model.backbone.bottom_up.stem.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                %x.5 : Float(1, 64, 544, 400, strides=[13926400, 217600, 400, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.1, %weight.113, %bias.111, %running_mean.107, %running_var.107, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.stem/__module.model.backbone.bottom_up.stem.conv1/__module.model.backbone.bottom_up.stem.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                return (%x.5)
                          
                            }
                          }
                          submodules {
                          }
                        }
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.container.Sequential {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.modeling.backbone.resnet.BottleneckBlock object at 0x5619087cb610>
                    1 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_22.BottleneckBlock object at 0x56190ab1f4c0>
                    2 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_29.BottleneckBlock object at 0x56190acb5eb0>
                  }
                  methods {
                    method forward {
                      graph(%self.13 : __torch__.torch.nn.modules.container.Sequential,
                            %1 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                        %_2.1 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_29.BottleneckBlock = prim::GetAttr[name="2"](%self.13)
                        %_1.1 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_22.BottleneckBlock = prim::GetAttr[name="1"](%self.13)
                        %_0.1 : __torch__.detectron2.modeling.backbone.resnet.BottleneckBlock = prim::GetAttr[name="0"](%self.13)
                        %8 : Tensor = prim::CallMethod[name="forward"](%_0.1, %1)
                        %9 : Tensor = prim::CallMethod[name="forward"](%_1.1, %8)
                        %10 : Tensor = prim::CallMethod[name="forward"](%_2.1, %9)
                        return (%10)
                  
                    }
                  }
                  submodules {
                    module __torch__.detectron2.modeling.backbone.resnet.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        shortcut = <__torch__.detectron2.layers.wrappers.___torch_mangle_9.Conv2d object at 0x5619094a1ff0>
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_11.Conv2d object at 0x561909c01290>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_13.Conv2d object at 0x561909c10200>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_15.Conv2d object at 0x561909bfd230>
                      }
                      methods {
                        method forward {
                          graph(%self.15 : __torch__.detectron2.modeling.backbone.resnet.BottleneckBlock,
                                %1 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %shortcut.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_9.Conv2d = prim::GetAttr[name="shortcut"](%self.15)
                            %conv3.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_15.Conv2d = prim::GetAttr[name="conv3"](%self.15)
                            %conv2.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_13.Conv2d = prim::GetAttr[name="conv2"](%self.15)
                            %conv1.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_11.Conv2d = prim::GetAttr[name="conv1"](%self.15)
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv1.3, %1)
                            %x.9 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %16 : Tensor = prim::CallMethod[name="forward"](%conv2.1, %x.9)
                            %x.11 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %17 : Tensor = prim::CallMethod[name="forward"](%conv3.1, %x.11)
                            %18 : Tensor = prim::CallMethod[name="forward"](%shortcut.9, %1)
                            %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.7 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::add_(%17, %18, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.13 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.7), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.13)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_9.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_8.FrozenBatchNorm2d object at 0x5619db7aa220>
                          }
                          methods {
                            method forward {
                              graph(%self.29 : __torch__.detectron2.layers.wrappers.___torch_mangle_9.Conv2d,
                                    %1 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.9 : __torch__.detectron2.layers.batch_norm.___torch_mangle_8.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.29)
                                %weight.127 : Tensor = prim::GetAttr[name="weight"](%self.29)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.11 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.127, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.9, %input.11)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_8.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.31 : __torch__.detectron2.layers.batch_norm.___torch_mangle_8.FrozenBatchNorm2d,
                                        %input.11 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.115 : Tensor = prim::GetAttr[name="running_var"](%self.31)
                                    %running_mean.115 : Tensor = prim::GetAttr[name="running_mean"](%self.31)
                                    %bias.119 : Tensor = prim::GetAttr[name="bias"](%self.31)
                                    %weight.129 : Tensor = prim::GetAttr[name="weight"](%self.31)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut/__module.model.backbone.bottom_up.res2.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut/__module.model.backbone.bottom_up.res2.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut/__module.model.backbone.bottom_up.res2.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut/__module.model.backbone.bottom_up.res2.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %shortcut.1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.11, %weight.129, %bias.119, %running_mean.115, %running_var.115, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.shortcut/__module.model.backbone.bottom_up.res2.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%shortcut.1)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_11.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_10.FrozenBatchNorm2d object at 0x5619094a2070>
                          }
                          methods {
                            method forward {
                              graph(%self.17 : __torch__.detectron2.layers.wrappers.___torch_mangle_11.Conv2d,
                                    %1 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.3 : __torch__.detectron2.layers.batch_norm.___torch_mangle_10.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.17)
                                %weight.115 : Tensor = prim::GetAttr[name="weight"](%self.17)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.5 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.115, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.3, %input.5)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_10.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.19 : __torch__.detectron2.layers.batch_norm.___torch_mangle_10.FrozenBatchNorm2d,
                                        %input.5 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.109 : Tensor = prim::GetAttr[name="running_var"](%self.19)
                                    %running_mean.109 : Tensor = prim::GetAttr[name="running_mean"](%self.19)
                                    %bias.113 : Tensor = prim::GetAttr[name="bias"](%self.19)
                                    %weight.117 : Tensor = prim::GetAttr[name="weight"](%self.19)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1/__module.model.backbone.bottom_up.res2.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1/__module.model.backbone.bottom_up.res2.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1/__module.model.backbone.bottom_up.res2.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1/__module.model.backbone.bottom_up.res2.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.1 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.5, %weight.117, %bias.113, %running_mean.109, %running_var.109, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv1/__module.model.backbone.bottom_up.res2.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.1)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_13.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_12.FrozenBatchNorm2d object at 0x561909c02280>
                          }
                          methods {
                            method forward {
                              graph(%self.21 : __torch__.detectron2.layers.wrappers.___torch_mangle_13.Conv2d,
                                    %x.9 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.5 : __torch__.detectron2.layers.batch_norm.___torch_mangle_12.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.21)
                                %weight.119 : Tensor = prim::GetAttr[name="weight"](%self.21)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.7 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.9, %weight.119, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.5, %input.7)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_12.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.23 : __torch__.detectron2.layers.batch_norm.___torch_mangle_12.FrozenBatchNorm2d,
                                        %input.7 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.111 : Tensor = prim::GetAttr[name="running_var"](%self.23)
                                    %running_mean.111 : Tensor = prim::GetAttr[name="running_mean"](%self.23)
                                    %bias.115 : Tensor = prim::GetAttr[name="bias"](%self.23)
                                    %weight.121 : Tensor = prim::GetAttr[name="weight"](%self.23)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2/__module.model.backbone.bottom_up.res2.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2/__module.model.backbone.bottom_up.res2.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2/__module.model.backbone.bottom_up.res2.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2/__module.model.backbone.bottom_up.res2.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.3 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.7, %weight.121, %bias.115, %running_mean.111, %running_var.111, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv2/__module.model.backbone.bottom_up.res2.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.3)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_15.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_14.FrozenBatchNorm2d object at 0x5619db7ac970>
                          }
                          methods {
                            method forward {
                              graph(%self.25 : __torch__.detectron2.layers.wrappers.___torch_mangle_15.Conv2d,
                                    %x.11 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.7 : __torch__.detectron2.layers.batch_norm.___torch_mangle_14.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.25)
                                %weight.123 : Tensor = prim::GetAttr[name="weight"](%self.25)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.9 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.11, %weight.123, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.7, %input.9)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_14.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.27 : __torch__.detectron2.layers.batch_norm.___torch_mangle_14.FrozenBatchNorm2d,
                                        %input.9 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.113 : Tensor = prim::GetAttr[name="running_var"](%self.27)
                                    %running_mean.113 : Tensor = prim::GetAttr[name="running_mean"](%self.27)
                                    %bias.117 : Tensor = prim::GetAttr[name="bias"](%self.27)
                                    %weight.125 : Tensor = prim::GetAttr[name="weight"](%self.27)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3/__module.model.backbone.bottom_up.res2.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3/__module.model.backbone.bottom_up.res2.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3/__module.model.backbone.bottom_up.res2.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3/__module.model.backbone.bottom_up.res2.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.5 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.9, %weight.125, %bias.117, %running_mean.113, %running_var.113, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.0/__module.model.backbone.bottom_up.res2.0.conv3/__module.model.backbone.bottom_up.res2.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.5)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_22.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_17.Conv2d object at 0x561909c04110>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_19.Conv2d object at 0x561909c07b30>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_21.Conv2d object at 0x561909c13100>
                      }
                      methods {
                        method forward {
                          graph(%self.33 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_22.BottleneckBlock,
                                %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %conv3.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_21.Conv2d = prim::GetAttr[name="conv3"](%self.33)
                            %conv2.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_19.Conv2d = prim::GetAttr[name="conv2"](%self.33)
                            %conv1.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_17.Conv2d = prim::GetAttr[name="conv1"](%self.33)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.5, %1)
                            %x.15 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.3, %x.15)
                            %x.17 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.3, %x.17)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.15 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.19 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.19)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_17.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_16.FrozenBatchNorm2d object at 0x561909c13db0>
                          }
                          methods {
                            method forward {
                              graph(%self.35 : __torch__.detectron2.layers.wrappers.___torch_mangle_17.Conv2d,
                                    %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.11 : __torch__.detectron2.layers.batch_norm.___torch_mangle_16.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.35)
                                %weight.131 : Tensor = prim::GetAttr[name="weight"](%self.35)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.13 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.131, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.11, %input.13)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_16.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.37 : __torch__.detectron2.layers.batch_norm.___torch_mangle_16.FrozenBatchNorm2d,
                                        %input.13 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.117 : Tensor = prim::GetAttr[name="running_var"](%self.37)
                                    %running_mean.117 : Tensor = prim::GetAttr[name="running_mean"](%self.37)
                                    %bias.121 : Tensor = prim::GetAttr[name="bias"](%self.37)
                                    %weight.133 : Tensor = prim::GetAttr[name="weight"](%self.37)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1/__module.model.backbone.bottom_up.res2.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1/__module.model.backbone.bottom_up.res2.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1/__module.model.backbone.bottom_up.res2.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1/__module.model.backbone.bottom_up.res2.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.9 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.13, %weight.133, %bias.121, %running_mean.117, %running_var.117, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv1/__module.model.backbone.bottom_up.res2.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.9)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_19.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_18.FrozenBatchNorm2d object at 0x561909c04190>
                          }
                          methods {
                            method forward {
                              graph(%self.39 : __torch__.detectron2.layers.wrappers.___torch_mangle_19.Conv2d,
                                    %x.15 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.13 : __torch__.detectron2.layers.batch_norm.___torch_mangle_18.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.39)
                                %weight.135 : Tensor = prim::GetAttr[name="weight"](%self.39)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.15 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.15, %weight.135, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.13, %input.15)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_18.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.41 : __torch__.detectron2.layers.batch_norm.___torch_mangle_18.FrozenBatchNorm2d,
                                        %input.15 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.119 : Tensor = prim::GetAttr[name="running_var"](%self.41)
                                    %running_mean.119 : Tensor = prim::GetAttr[name="running_mean"](%self.41)
                                    %bias.123 : Tensor = prim::GetAttr[name="bias"](%self.41)
                                    %weight.137 : Tensor = prim::GetAttr[name="weight"](%self.41)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2/__module.model.backbone.bottom_up.res2.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2/__module.model.backbone.bottom_up.res2.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2/__module.model.backbone.bottom_up.res2.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2/__module.model.backbone.bottom_up.res2.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.11 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.15, %weight.137, %bias.123, %running_mean.119, %running_var.119, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv2/__module.model.backbone.bottom_up.res2.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.11)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_21.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_20.FrozenBatchNorm2d object at 0x561909c12080>
                          }
                          methods {
                            method forward {
                              graph(%self.43 : __torch__.detectron2.layers.wrappers.___torch_mangle_21.Conv2d,
                                    %x.17 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.15 : __torch__.detectron2.layers.batch_norm.___torch_mangle_20.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.43)
                                %weight.139 : Tensor = prim::GetAttr[name="weight"](%self.43)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.17 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.17, %weight.139, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.15, %input.17)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_20.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.45 : __torch__.detectron2.layers.batch_norm.___torch_mangle_20.FrozenBatchNorm2d,
                                        %input.17 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.121 : Tensor = prim::GetAttr[name="running_var"](%self.45)
                                    %running_mean.121 : Tensor = prim::GetAttr[name="running_mean"](%self.45)
                                    %bias.125 : Tensor = prim::GetAttr[name="bias"](%self.45)
                                    %weight.141 : Tensor = prim::GetAttr[name="weight"](%self.45)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3/__module.model.backbone.bottom_up.res2.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3/__module.model.backbone.bottom_up.res2.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3/__module.model.backbone.bottom_up.res2.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3/__module.model.backbone.bottom_up.res2.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.13 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.17, %weight.141, %bias.125, %running_mean.121, %running_var.121, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.1/__module.model.backbone.bottom_up.res2.1.conv3/__module.model.backbone.bottom_up.res2.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.13)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_29.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_24.Conv2d object at 0x56190bf900b0>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_26.Conv2d object at 0x5619079ae9c0>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_28.Conv2d object at 0x5619079b1f50>
                      }
                      methods {
                        method forward {
                          graph(%self.47 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_29.BottleneckBlock,
                                %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %conv3.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_28.Conv2d = prim::GetAttr[name="conv3"](%self.47)
                            %conv2.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_26.Conv2d = prim::GetAttr[name="conv2"](%self.47)
                            %conv1.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_24.Conv2d = prim::GetAttr[name="conv1"](%self.47)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.7, %1)
                            %x.21 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.5, %x.21)
                            %x.23 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.5, %x.23)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.23 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.25 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.23), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.25)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_24.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_23.FrozenBatchNorm2d object at 0x56190bf8fe90>
                          }
                          methods {
                            method forward {
                              graph(%self.49 : __torch__.detectron2.layers.wrappers.___torch_mangle_24.Conv2d,
                                    %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.17 : __torch__.detectron2.layers.batch_norm.___torch_mangle_23.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.49)
                                %weight.143 : Tensor = prim::GetAttr[name="weight"](%self.49)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.19 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.143, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.17, %input.19)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_23.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.51 : __torch__.detectron2.layers.batch_norm.___torch_mangle_23.FrozenBatchNorm2d,
                                        %input.19 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.123 : Tensor = prim::GetAttr[name="running_var"](%self.51)
                                    %running_mean.123 : Tensor = prim::GetAttr[name="running_mean"](%self.51)
                                    %bias.127 : Tensor = prim::GetAttr[name="bias"](%self.51)
                                    %weight.145 : Tensor = prim::GetAttr[name="weight"](%self.51)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1/__module.model.backbone.bottom_up.res2.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1/__module.model.backbone.bottom_up.res2.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1/__module.model.backbone.bottom_up.res2.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1/__module.model.backbone.bottom_up.res2.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.17 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.19, %weight.145, %bias.127, %running_mean.123, %running_var.123, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv1/__module.model.backbone.bottom_up.res2.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.17)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_26.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_25.FrozenBatchNorm2d object at 0x56190bf90130>
                          }
                          methods {
                            method forward {
                              graph(%self.53 : __torch__.detectron2.layers.wrappers.___torch_mangle_26.Conv2d,
                                    %x.21 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.19 : __torch__.detectron2.layers.batch_norm.___torch_mangle_25.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.53)
                                %weight.147 : Tensor = prim::GetAttr[name="weight"](%self.53)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.21 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.21, %weight.147, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.19, %input.21)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_25.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.55 : __torch__.detectron2.layers.batch_norm.___torch_mangle_25.FrozenBatchNorm2d,
                                        %input.21 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.125 : Tensor = prim::GetAttr[name="running_var"](%self.55)
                                    %running_mean.125 : Tensor = prim::GetAttr[name="running_mean"](%self.55)
                                    %bias.129 : Tensor = prim::GetAttr[name="bias"](%self.55)
                                    %weight.149 : Tensor = prim::GetAttr[name="weight"](%self.55)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2/__module.model.backbone.bottom_up.res2.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2/__module.model.backbone.bottom_up.res2.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2/__module.model.backbone.bottom_up.res2.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2/__module.model.backbone.bottom_up.res2.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.19 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.21, %weight.149, %bias.129, %running_mean.125, %running_var.125, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv2/__module.model.backbone.bottom_up.res2.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.19)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_28.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_27.FrozenBatchNorm2d object at 0x5619079b0ed0>
                          }
                          methods {
                            method forward {
                              graph(%self.57 : __torch__.detectron2.layers.wrappers.___torch_mangle_28.Conv2d,
                                    %x.23 : Float(1, 64, 272, 200, strides=[3481600, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.21 : __torch__.detectron2.layers.batch_norm.___torch_mangle_27.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.57)
                                %weight.151 : Tensor = prim::GetAttr[name="weight"](%self.57)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.23 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.23, %weight.151, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.21, %input.23)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_27.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.59 : __torch__.detectron2.layers.batch_norm.___torch_mangle_27.FrozenBatchNorm2d,
                                        %input.23 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.127 : Tensor = prim::GetAttr[name="running_var"](%self.59)
                                    %running_mean.127 : Tensor = prim::GetAttr[name="running_mean"](%self.59)
                                    %bias.131 : Tensor = prim::GetAttr[name="bias"](%self.59)
                                    %weight.153 : Tensor = prim::GetAttr[name="weight"](%self.59)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3/__module.model.backbone.bottom_up.res2.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3/__module.model.backbone.bottom_up.res2.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3/__module.model.backbone.bottom_up.res2.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3/__module.model.backbone.bottom_up.res2.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.21 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.23, %weight.153, %bias.131, %running_mean.127, %running_var.127, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res2/__module.model.backbone.bottom_up.res2.2/__module.model.backbone.bottom_up.res2.2.conv3/__module.model.backbone.bottom_up.res2.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.21)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.container.___torch_mangle_60.Sequential {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_38.BottleneckBlock object at 0x561906bc8f40>
                    1 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_45.BottleneckBlock object at 0x561907a9f550>
                    2 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_52.BottleneckBlock object at 0x561907991ae0>
                    3 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_59.BottleneckBlock object at 0x56190799e0f0>
                  }
                  methods {
                    method forward {
                      graph(%self.61 : __torch__.torch.nn.modules.container.___torch_mangle_60.Sequential,
                            %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                        %_3.1 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_59.BottleneckBlock = prim::GetAttr[name="3"](%self.61)
                        %_2.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_52.BottleneckBlock = prim::GetAttr[name="2"](%self.61)
                        %_1.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_45.BottleneckBlock = prim::GetAttr[name="1"](%self.61)
                        %_0.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_38.BottleneckBlock = prim::GetAttr[name="0"](%self.61)
                        %10 : Tensor = prim::CallMethod[name="forward"](%_0.3, %1)
                        %11 : Tensor = prim::CallMethod[name="forward"](%_1.3, %10)
                        %12 : Tensor = prim::CallMethod[name="forward"](%_2.3, %11)
                        %13 : Tensor = prim::CallMethod[name="forward"](%_3.1, %12)
                        return (%13)
                  
                    }
                  }
                  submodules {
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_38.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        shortcut = <__torch__.detectron2.layers.wrappers.___torch_mangle_31.Conv2d object at 0x561907aa7ef0>
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_33.Conv2d object at 0x561907aa8ff0>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_35.Conv2d object at 0x56190792ea80>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_37.Conv2d object at 0x561907931150>
                      }
                      methods {
                        method forward {
                          graph(%self.63 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_38.BottleneckBlock,
                                %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %shortcut.11 : __torch__.detectron2.layers.wrappers.___torch_mangle_31.Conv2d = prim::GetAttr[name="shortcut"](%self.63)
                            %conv3.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_37.Conv2d = prim::GetAttr[name="conv3"](%self.63)
                            %conv2.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_35.Conv2d = prim::GetAttr[name="conv2"](%self.63)
                            %conv1.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_33.Conv2d = prim::GetAttr[name="conv1"](%self.63)
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv1.9, %1)
                            %x.27 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %16 : Tensor = prim::CallMethod[name="forward"](%conv2.7, %x.27)
                            %x.29 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %17 : Tensor = prim::CallMethod[name="forward"](%conv3.7, %x.29)
                            %18 : Tensor = prim::CallMethod[name="forward"](%shortcut.11, %1)
                            %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.31 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::add_(%17, %18, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.31 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.31), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.31)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_31.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_30.FrozenBatchNorm2d object at 0x561907aa7cd0>
                          }
                          methods {
                            method forward {
                              graph(%self.77 : __torch__.detectron2.layers.wrappers.___torch_mangle_31.Conv2d,
                                    %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.29 : __torch__.detectron2.layers.batch_norm.___torch_mangle_30.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.77)
                                %weight.167 : Tensor = prim::GetAttr[name="weight"](%self.77)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.31 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.167, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.29, %input.31)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_30.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.79 : __torch__.detectron2.layers.batch_norm.___torch_mangle_30.FrozenBatchNorm2d,
                                        %input.31 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.135 : Tensor = prim::GetAttr[name="running_var"](%self.79)
                                    %running_mean.135 : Tensor = prim::GetAttr[name="running_mean"](%self.79)
                                    %bias.139 : Tensor = prim::GetAttr[name="bias"](%self.79)
                                    %weight.169 : Tensor = prim::GetAttr[name="weight"](%self.79)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut/__module.model.backbone.bottom_up.res3.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut/__module.model.backbone.bottom_up.res3.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut/__module.model.backbone.bottom_up.res3.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut/__module.model.backbone.bottom_up.res3.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %shortcut.3 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.31, %weight.169, %bias.139, %running_mean.135, %running_var.135, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.shortcut/__module.model.backbone.bottom_up.res3.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%shortcut.3)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_33.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_32.FrozenBatchNorm2d object at 0x561907aa7f70>
                          }
                          methods {
                            method forward {
                              graph(%self.65 : __torch__.detectron2.layers.wrappers.___torch_mangle_33.Conv2d,
                                    %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                                %norm.23 : __torch__.detectron2.layers.batch_norm.___torch_mangle_32.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.65)
                                %weight.155 : Tensor = prim::GetAttr[name="weight"](%self.65)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.25 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.155, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.23, %input.25)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_32.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.67 : __torch__.detectron2.layers.batch_norm.___torch_mangle_32.FrozenBatchNorm2d,
                                        %input.25 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.129 : Tensor = prim::GetAttr[name="running_var"](%self.67)
                                    %running_mean.129 : Tensor = prim::GetAttr[name="running_mean"](%self.67)
                                    %bias.133 : Tensor = prim::GetAttr[name="bias"](%self.67)
                                    %weight.157 : Tensor = prim::GetAttr[name="weight"](%self.67)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1/__module.model.backbone.bottom_up.res3.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1/__module.model.backbone.bottom_up.res3.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1/__module.model.backbone.bottom_up.res3.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1/__module.model.backbone.bottom_up.res3.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.25 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.25, %weight.157, %bias.133, %running_mean.129, %running_var.129, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv1/__module.model.backbone.bottom_up.res3.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.25)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_35.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_34.FrozenBatchNorm2d object at 0x561907aab520>
                          }
                          methods {
                            method forward {
                              graph(%self.69 : __torch__.detectron2.layers.wrappers.___torch_mangle_35.Conv2d,
                                    %x.27 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.25 : __torch__.detectron2.layers.batch_norm.___torch_mangle_34.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.69)
                                %weight.159 : Tensor = prim::GetAttr[name="weight"](%self.69)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.27 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.27, %weight.159, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.25, %input.27)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_34.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.71 : __torch__.detectron2.layers.batch_norm.___torch_mangle_34.FrozenBatchNorm2d,
                                        %input.27 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.131 : Tensor = prim::GetAttr[name="running_var"](%self.71)
                                    %running_mean.131 : Tensor = prim::GetAttr[name="running_mean"](%self.71)
                                    %bias.135 : Tensor = prim::GetAttr[name="bias"](%self.71)
                                    %weight.161 : Tensor = prim::GetAttr[name="weight"](%self.71)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2/__module.model.backbone.bottom_up.res3.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2/__module.model.backbone.bottom_up.res3.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2/__module.model.backbone.bottom_up.res3.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2/__module.model.backbone.bottom_up.res3.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.27 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.27, %weight.161, %bias.135, %running_mean.131, %running_var.131, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv2/__module.model.backbone.bottom_up.res3.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.27)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_37.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_36.FrozenBatchNorm2d object at 0x5619079300d0>
                          }
                          methods {
                            method forward {
                              graph(%self.73 : __torch__.detectron2.layers.wrappers.___torch_mangle_37.Conv2d,
                                    %x.29 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.27 : __torch__.detectron2.layers.batch_norm.___torch_mangle_36.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.73)
                                %weight.163 : Tensor = prim::GetAttr[name="weight"](%self.73)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.29 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.29, %weight.163, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.27, %input.29)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_36.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.75 : __torch__.detectron2.layers.batch_norm.___torch_mangle_36.FrozenBatchNorm2d,
                                        %input.29 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.133 : Tensor = prim::GetAttr[name="running_var"](%self.75)
                                    %running_mean.133 : Tensor = prim::GetAttr[name="running_mean"](%self.75)
                                    %bias.137 : Tensor = prim::GetAttr[name="bias"](%self.75)
                                    %weight.165 : Tensor = prim::GetAttr[name="weight"](%self.75)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3/__module.model.backbone.bottom_up.res3.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3/__module.model.backbone.bottom_up.res3.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3/__module.model.backbone.bottom_up.res3.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3/__module.model.backbone.bottom_up.res3.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.29 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.29, %weight.165, %bias.137, %running_mean.133, %running_var.133, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.0/__module.model.backbone.bottom_up.res3.0.conv3/__module.model.backbone.bottom_up.res3.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.29)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_45.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_40.Conv2d object at 0x561907aa2490>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_42.Conv2d object at 0x561907aa35c0>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_44.Conv2d object at 0x561907aa6b70>
                      }
                      methods {
                        method forward {
                          graph(%self.81 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_45.BottleneckBlock,
                                %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %conv3.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_44.Conv2d = prim::GetAttr[name="conv3"](%self.81)
                            %conv2.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_42.Conv2d = prim::GetAttr[name="conv2"](%self.81)
                            %conv1.11 : __torch__.detectron2.layers.wrappers.___torch_mangle_40.Conv2d = prim::GetAttr[name="conv1"](%self.81)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.11, %1)
                            %x.33 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.9, %x.33)
                            %x.35 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.9, %x.35)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.39 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.37 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.39), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.37)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_40.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_39.FrozenBatchNorm2d object at 0x561907aa2200>
                          }
                          methods {
                            method forward {
                              graph(%self.83 : __torch__.detectron2.layers.wrappers.___torch_mangle_40.Conv2d,
                                    %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.31 : __torch__.detectron2.layers.batch_norm.___torch_mangle_39.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.83)
                                %weight.171 : Tensor = prim::GetAttr[name="weight"](%self.83)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.33 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.171, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.31, %input.33)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_39.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.85 : __torch__.detectron2.layers.batch_norm.___torch_mangle_39.FrozenBatchNorm2d,
                                        %input.33 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.137 : Tensor = prim::GetAttr[name="running_var"](%self.85)
                                    %running_mean.137 : Tensor = prim::GetAttr[name="running_mean"](%self.85)
                                    %bias.141 : Tensor = prim::GetAttr[name="bias"](%self.85)
                                    %weight.173 : Tensor = prim::GetAttr[name="weight"](%self.85)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1/__module.model.backbone.bottom_up.res3.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1/__module.model.backbone.bottom_up.res3.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1/__module.model.backbone.bottom_up.res3.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1/__module.model.backbone.bottom_up.res3.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.33 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.33, %weight.173, %bias.141, %running_mean.137, %running_var.137, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv1/__module.model.backbone.bottom_up.res3.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.33)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_42.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_41.FrozenBatchNorm2d object at 0x561907aa2510>
                          }
                          methods {
                            method forward {
                              graph(%self.87 : __torch__.detectron2.layers.wrappers.___torch_mangle_42.Conv2d,
                                    %x.33 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.33 : __torch__.detectron2.layers.batch_norm.___torch_mangle_41.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.87)
                                %weight.175 : Tensor = prim::GetAttr[name="weight"](%self.87)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.35 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.33, %weight.175, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.33, %input.35)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_41.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.89 : __torch__.detectron2.layers.batch_norm.___torch_mangle_41.FrozenBatchNorm2d,
                                        %input.35 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.139 : Tensor = prim::GetAttr[name="running_var"](%self.89)
                                    %running_mean.139 : Tensor = prim::GetAttr[name="running_mean"](%self.89)
                                    %bias.143 : Tensor = prim::GetAttr[name="bias"](%self.89)
                                    %weight.177 : Tensor = prim::GetAttr[name="weight"](%self.89)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2/__module.model.backbone.bottom_up.res3.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2/__module.model.backbone.bottom_up.res3.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2/__module.model.backbone.bottom_up.res3.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2/__module.model.backbone.bottom_up.res3.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.35 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.35, %weight.177, %bias.143, %running_mean.139, %running_var.139, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv2/__module.model.backbone.bottom_up.res3.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.35)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_44.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_43.FrozenBatchNorm2d object at 0x561907aa5af0>
                          }
                          methods {
                            method forward {
                              graph(%self.91 : __torch__.detectron2.layers.wrappers.___torch_mangle_44.Conv2d,
                                    %x.35 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.35 : __torch__.detectron2.layers.batch_norm.___torch_mangle_43.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.91)
                                %weight.179 : Tensor = prim::GetAttr[name="weight"](%self.91)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.37 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.35, %weight.179, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.35, %input.37)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_43.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.93 : __torch__.detectron2.layers.batch_norm.___torch_mangle_43.FrozenBatchNorm2d,
                                        %input.37 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.141 : Tensor = prim::GetAttr[name="running_var"](%self.93)
                                    %running_mean.141 : Tensor = prim::GetAttr[name="running_mean"](%self.93)
                                    %bias.145 : Tensor = prim::GetAttr[name="bias"](%self.93)
                                    %weight.181 : Tensor = prim::GetAttr[name="weight"](%self.93)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3/__module.model.backbone.bottom_up.res3.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3/__module.model.backbone.bottom_up.res3.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3/__module.model.backbone.bottom_up.res3.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3/__module.model.backbone.bottom_up.res3.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.37 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.37, %weight.181, %bias.145, %running_mean.141, %running_var.141, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.1/__module.model.backbone.bottom_up.res3.1.conv3/__module.model.backbone.bottom_up.res3.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.37)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_52.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_47.Conv2d object at 0x56190bf86950>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_49.Conv2d object at 0x56190bf87a50>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_51.Conv2d object at 0x56190bf8b000>
                      }
                      methods {
                        method forward {
                          graph(%self.95 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_52.BottleneckBlock,
                                %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %conv3.11 : __torch__.detectron2.layers.wrappers.___torch_mangle_51.Conv2d = prim::GetAttr[name="conv3"](%self.95)
                            %conv2.11 : __torch__.detectron2.layers.wrappers.___torch_mangle_49.Conv2d = prim::GetAttr[name="conv2"](%self.95)
                            %conv1.13 : __torch__.detectron2.layers.wrappers.___torch_mangle_47.Conv2d = prim::GetAttr[name="conv1"](%self.95)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.13, %1)
                            %x.39 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.11, %x.39)
                            %x.41 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.11, %x.41)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.47 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.43 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.47), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.43)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_47.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_46.FrozenBatchNorm2d object at 0x561907aa1b00>
                          }
                          methods {
                            method forward {
                              graph(%self.97 : __torch__.detectron2.layers.wrappers.___torch_mangle_47.Conv2d,
                                    %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.37 : __torch__.detectron2.layers.batch_norm.___torch_mangle_46.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.97)
                                %weight.183 : Tensor = prim::GetAttr[name="weight"](%self.97)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.39 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.183, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.37, %input.39)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_46.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.99 : __torch__.detectron2.layers.batch_norm.___torch_mangle_46.FrozenBatchNorm2d,
                                        %input.39 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.143 : Tensor = prim::GetAttr[name="running_var"](%self.99)
                                    %running_mean.143 : Tensor = prim::GetAttr[name="running_mean"](%self.99)
                                    %bias.147 : Tensor = prim::GetAttr[name="bias"](%self.99)
                                    %weight.185 : Tensor = prim::GetAttr[name="weight"](%self.99)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1/__module.model.backbone.bottom_up.res3.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1/__module.model.backbone.bottom_up.res3.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1/__module.model.backbone.bottom_up.res3.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1/__module.model.backbone.bottom_up.res3.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.41 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.39, %weight.185, %bias.147, %running_mean.143, %running_var.143, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv1/__module.model.backbone.bottom_up.res3.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.41)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_49.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_48.FrozenBatchNorm2d object at 0x56190bf869d0>
                          }
                          methods {
                            method forward {
                              graph(%self.101 : __torch__.detectron2.layers.wrappers.___torch_mangle_49.Conv2d,
                                    %x.39 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.39 : __torch__.detectron2.layers.batch_norm.___torch_mangle_48.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.101)
                                %weight.187 : Tensor = prim::GetAttr[name="weight"](%self.101)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.41 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.39, %weight.187, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.39, %input.41)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_48.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.103 : __torch__.detectron2.layers.batch_norm.___torch_mangle_48.FrozenBatchNorm2d,
                                        %input.41 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.145 : Tensor = prim::GetAttr[name="running_var"](%self.103)
                                    %running_mean.145 : Tensor = prim::GetAttr[name="running_mean"](%self.103)
                                    %bias.149 : Tensor = prim::GetAttr[name="bias"](%self.103)
                                    %weight.189 : Tensor = prim::GetAttr[name="weight"](%self.103)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2/__module.model.backbone.bottom_up.res3.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2/__module.model.backbone.bottom_up.res3.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2/__module.model.backbone.bottom_up.res3.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2/__module.model.backbone.bottom_up.res3.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.43 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.41, %weight.189, %bias.149, %running_mean.145, %running_var.145, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv2/__module.model.backbone.bottom_up.res3.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.43)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_51.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_50.FrozenBatchNorm2d object at 0x56190bf89f80>
                          }
                          methods {
                            method forward {
                              graph(%self.105 : __torch__.detectron2.layers.wrappers.___torch_mangle_51.Conv2d,
                                    %x.41 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.41 : __torch__.detectron2.layers.batch_norm.___torch_mangle_50.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.105)
                                %weight.191 : Tensor = prim::GetAttr[name="weight"](%self.105)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.43 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.41, %weight.191, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.41, %input.43)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_50.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.107 : __torch__.detectron2.layers.batch_norm.___torch_mangle_50.FrozenBatchNorm2d,
                                        %input.43 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.147 : Tensor = prim::GetAttr[name="running_var"](%self.107)
                                    %running_mean.147 : Tensor = prim::GetAttr[name="running_mean"](%self.107)
                                    %bias.151 : Tensor = prim::GetAttr[name="bias"](%self.107)
                                    %weight.193 : Tensor = prim::GetAttr[name="weight"](%self.107)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3/__module.model.backbone.bottom_up.res3.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3/__module.model.backbone.bottom_up.res3.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3/__module.model.backbone.bottom_up.res3.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3/__module.model.backbone.bottom_up.res3.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.45 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.43, %weight.193, %bias.151, %running_mean.147, %running_var.147, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.2/__module.model.backbone.bottom_up.res3.2.conv3/__module.model.backbone.bottom_up.res3.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.45)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_59.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_54.Conv2d object at 0x561907995a40>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_56.Conv2d object at 0x561907996b40>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_58.Conv2d object at 0x56190799ab40>
                      }
                      methods {
                        method forward {
                          graph(%self.109 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_59.BottleneckBlock,
                                %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %conv3.13 : __torch__.detectron2.layers.wrappers.___torch_mangle_58.Conv2d = prim::GetAttr[name="conv3"](%self.109)
                            %conv2.13 : __torch__.detectron2.layers.wrappers.___torch_mangle_56.Conv2d = prim::GetAttr[name="conv2"](%self.109)
                            %conv1.15 : __torch__.detectron2.layers.wrappers.___torch_mangle_54.Conv2d = prim::GetAttr[name="conv1"](%self.109)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.15, %1)
                            %x.45 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.13, %x.45)
                            %x.47 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.13, %x.47)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.55 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.49 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.55), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.49)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_54.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_53.FrozenBatchNorm2d object at 0x561907995820>
                          }
                          methods {
                            method forward {
                              graph(%self.111 : __torch__.detectron2.layers.wrappers.___torch_mangle_54.Conv2d,
                                    %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.43 : __torch__.detectron2.layers.batch_norm.___torch_mangle_53.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.111)
                                %weight.195 : Tensor = prim::GetAttr[name="weight"](%self.111)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.45 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.195, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.43, %input.45)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_53.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.113 : __torch__.detectron2.layers.batch_norm.___torch_mangle_53.FrozenBatchNorm2d,
                                        %input.45 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.149 : Tensor = prim::GetAttr[name="running_var"](%self.113)
                                    %running_mean.149 : Tensor = prim::GetAttr[name="running_mean"](%self.113)
                                    %bias.153 : Tensor = prim::GetAttr[name="bias"](%self.113)
                                    %weight.197 : Tensor = prim::GetAttr[name="weight"](%self.113)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1/__module.model.backbone.bottom_up.res3.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1/__module.model.backbone.bottom_up.res3.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1/__module.model.backbone.bottom_up.res3.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1/__module.model.backbone.bottom_up.res3.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.49 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.45, %weight.197, %bias.153, %running_mean.149, %running_var.149, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv1/__module.model.backbone.bottom_up.res3.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.49)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_56.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_55.FrozenBatchNorm2d object at 0x561907995ac0>
                          }
                          methods {
                            method forward {
                              graph(%self.115 : __torch__.detectron2.layers.wrappers.___torch_mangle_56.Conv2d,
                                    %x.45 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.45 : __torch__.detectron2.layers.batch_norm.___torch_mangle_55.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.115)
                                %weight.199 : Tensor = prim::GetAttr[name="weight"](%self.115)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.47 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.45, %weight.199, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.45, %input.47)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_55.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.117 : __torch__.detectron2.layers.batch_norm.___torch_mangle_55.FrozenBatchNorm2d,
                                        %input.47 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.151 : Tensor = prim::GetAttr[name="running_var"](%self.117)
                                    %running_mean.151 : Tensor = prim::GetAttr[name="running_mean"](%self.117)
                                    %bias.155 : Tensor = prim::GetAttr[name="bias"](%self.117)
                                    %weight.201 : Tensor = prim::GetAttr[name="weight"](%self.117)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2/__module.model.backbone.bottom_up.res3.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2/__module.model.backbone.bottom_up.res3.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2/__module.model.backbone.bottom_up.res3.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2/__module.model.backbone.bottom_up.res3.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.51 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.47, %weight.201, %bias.155, %running_mean.151, %running_var.151, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv2/__module.model.backbone.bottom_up.res3.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.51)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_58.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_57.FrozenBatchNorm2d object at 0x561907999ac0>
                          }
                          methods {
                            method forward {
                              graph(%self.119 : __torch__.detectron2.layers.wrappers.___torch_mangle_58.Conv2d,
                                    %x.47 : Float(1, 128, 136, 100, strides=[1740800, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.47 : __torch__.detectron2.layers.batch_norm.___torch_mangle_57.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.119)
                                %weight.203 : Tensor = prim::GetAttr[name="weight"](%self.119)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.49 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.47, %weight.203, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.47, %input.49)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_57.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.121 : __torch__.detectron2.layers.batch_norm.___torch_mangle_57.FrozenBatchNorm2d,
                                        %input.49 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.153 : Tensor = prim::GetAttr[name="running_var"](%self.121)
                                    %running_mean.153 : Tensor = prim::GetAttr[name="running_mean"](%self.121)
                                    %bias.157 : Tensor = prim::GetAttr[name="bias"](%self.121)
                                    %weight.205 : Tensor = prim::GetAttr[name="weight"](%self.121)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3/__module.model.backbone.bottom_up.res3.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3/__module.model.backbone.bottom_up.res3.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3/__module.model.backbone.bottom_up.res3.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3/__module.model.backbone.bottom_up.res3.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.53 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.49, %weight.205, %bias.157, %running_mean.153, %running_var.153, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res3/__module.model.backbone.bottom_up.res3.3/__module.model.backbone.bottom_up.res3.3.conv3/__module.model.backbone.bottom_up.res3.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.53)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.container.___torch_mangle_105.Sequential {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_69.BottleneckBlock object at 0x561907a8d4f0>
                    1 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_76.BottleneckBlock object at 0x561907a9ae50>
                    2 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_83.BottleneckBlock object at 0x5619079a92b0>
                    3 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_90.BottleneckBlock object at 0x5619079850b0>
                    4 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_97.BottleneckBlock object at 0x5619079c7ae0>
                    5 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_104.BottleneckBlock object at 0x5619079d3650>
                  }
                  methods {
                    method forward {
                      graph(%self.123 : __torch__.torch.nn.modules.container.___torch_mangle_105.Sequential,
                            %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                        %_5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_104.BottleneckBlock = prim::GetAttr[name="5"](%self.123)
                        %_4.1 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_97.BottleneckBlock = prim::GetAttr[name="4"](%self.123)
                        %_3.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_90.BottleneckBlock = prim::GetAttr[name="3"](%self.123)
                        %_2.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_83.BottleneckBlock = prim::GetAttr[name="2"](%self.123)
                        %_1.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_76.BottleneckBlock = prim::GetAttr[name="1"](%self.123)
                        %_0.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_69.BottleneckBlock = prim::GetAttr[name="0"](%self.123)
                        %14 : Tensor = prim::CallMethod[name="forward"](%_0.5, %1)
                        %15 : Tensor = prim::CallMethod[name="forward"](%_1.5, %14)
                        %16 : Tensor = prim::CallMethod[name="forward"](%_2.5, %15)
                        %17 : Tensor = prim::CallMethod[name="forward"](%_3.3, %16)
                        %18 : Tensor = prim::CallMethod[name="forward"](%_4.1, %17)
                        %19 : Tensor = prim::CallMethod[name="forward"](%_5, %18)
                        return (%19)
                  
                    }
                  }
                  submodules {
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_69.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        shortcut = <__torch__.detectron2.layers.wrappers.___torch_mangle_62.Conv2d object at 0x56190b6c2030>
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_64.Conv2d object at 0x56190b6c3130>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_66.Conv2d object at 0x56190b6c66e0>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_68.Conv2d object at 0x56190b6c9c90>
                      }
                      methods {
                        method forward {
                          graph(%self.125 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_69.BottleneckBlock,
                                %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %shortcut.13 : __torch__.detectron2.layers.wrappers.___torch_mangle_62.Conv2d = prim::GetAttr[name="shortcut"](%self.125)
                            %conv3.15 : __torch__.detectron2.layers.wrappers.___torch_mangle_68.Conv2d = prim::GetAttr[name="conv3"](%self.125)
                            %conv2.15 : __torch__.detectron2.layers.wrappers.___torch_mangle_66.Conv2d = prim::GetAttr[name="conv2"](%self.125)
                            %conv1.17 : __torch__.detectron2.layers.wrappers.___torch_mangle_64.Conv2d = prim::GetAttr[name="conv1"](%self.125)
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv1.17, %1)
                            %x.51 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %16 : Tensor = prim::CallMethod[name="forward"](%conv2.15, %x.51)
                            %x.53 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %17 : Tensor = prim::CallMethod[name="forward"](%conv3.15, %x.53)
                            %18 : Tensor = prim::CallMethod[name="forward"](%shortcut.13, %1)
                            %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.63 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%17, %18, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.55 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.63), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.55)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_62.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_61.FrozenBatchNorm2d object at 0x56190b6c1da0>
                          }
                          methods {
                            method forward {
                              graph(%self.139 : __torch__.detectron2.layers.wrappers.___torch_mangle_62.Conv2d,
                                    %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.55 : __torch__.detectron2.layers.batch_norm.___torch_mangle_61.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.139)
                                %weight.219 : Tensor = prim::GetAttr[name="weight"](%self.139)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.57 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.219, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.55, %input.57)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_61.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.141 : __torch__.detectron2.layers.batch_norm.___torch_mangle_61.FrozenBatchNorm2d,
                                        %input.57 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.161 : Tensor = prim::GetAttr[name="running_var"](%self.141)
                                    %running_mean.161 : Tensor = prim::GetAttr[name="running_mean"](%self.141)
                                    %bias.165 : Tensor = prim::GetAttr[name="bias"](%self.141)
                                    %weight.221 : Tensor = prim::GetAttr[name="weight"](%self.141)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut/__module.model.backbone.bottom_up.res4.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut/__module.model.backbone.bottom_up.res4.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut/__module.model.backbone.bottom_up.res4.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut/__module.model.backbone.bottom_up.res4.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %shortcut.5 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.57, %weight.221, %bias.165, %running_mean.161, %running_var.161, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.shortcut/__module.model.backbone.bottom_up.res4.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%shortcut.5)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_64.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_63.FrozenBatchNorm2d object at 0x56190b6c20b0>
                          }
                          methods {
                            method forward {
                              graph(%self.127 : __torch__.detectron2.layers.wrappers.___torch_mangle_64.Conv2d,
                                    %1 : Float(1, 512, 136, 100, strides=[6963200, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                                %norm.49 : __torch__.detectron2.layers.batch_norm.___torch_mangle_63.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.127)
                                %weight.207 : Tensor = prim::GetAttr[name="weight"](%self.127)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.51 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.207, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.49, %input.51)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_63.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.129 : __torch__.detectron2.layers.batch_norm.___torch_mangle_63.FrozenBatchNorm2d,
                                        %input.51 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.155 : Tensor = prim::GetAttr[name="running_var"](%self.129)
                                    %running_mean.155 : Tensor = prim::GetAttr[name="running_mean"](%self.129)
                                    %bias.159 : Tensor = prim::GetAttr[name="bias"](%self.129)
                                    %weight.209 : Tensor = prim::GetAttr[name="weight"](%self.129)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1/__module.model.backbone.bottom_up.res4.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1/__module.model.backbone.bottom_up.res4.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1/__module.model.backbone.bottom_up.res4.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1/__module.model.backbone.bottom_up.res4.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.57 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.51, %weight.209, %bias.159, %running_mean.155, %running_var.155, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv1/__module.model.backbone.bottom_up.res4.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.57)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_66.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_65.FrozenBatchNorm2d object at 0x56190b6c5660>
                          }
                          methods {
                            method forward {
                              graph(%self.131 : __torch__.detectron2.layers.wrappers.___torch_mangle_66.Conv2d,
                                    %x.51 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.51 : __torch__.detectron2.layers.batch_norm.___torch_mangle_65.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.131)
                                %weight.211 : Tensor = prim::GetAttr[name="weight"](%self.131)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.53 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.51, %weight.211, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.51, %input.53)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_65.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.133 : __torch__.detectron2.layers.batch_norm.___torch_mangle_65.FrozenBatchNorm2d,
                                        %input.53 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.157 : Tensor = prim::GetAttr[name="running_var"](%self.133)
                                    %running_mean.157 : Tensor = prim::GetAttr[name="running_mean"](%self.133)
                                    %bias.161 : Tensor = prim::GetAttr[name="bias"](%self.133)
                                    %weight.213 : Tensor = prim::GetAttr[name="weight"](%self.133)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2/__module.model.backbone.bottom_up.res4.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2/__module.model.backbone.bottom_up.res4.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2/__module.model.backbone.bottom_up.res4.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2/__module.model.backbone.bottom_up.res4.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.59 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.53, %weight.213, %bias.161, %running_mean.157, %running_var.157, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv2/__module.model.backbone.bottom_up.res4.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.59)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_68.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_67.FrozenBatchNorm2d object at 0x56190b6c8c10>
                          }
                          methods {
                            method forward {
                              graph(%self.135 : __torch__.detectron2.layers.wrappers.___torch_mangle_68.Conv2d,
                                    %x.53 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.53 : __torch__.detectron2.layers.batch_norm.___torch_mangle_67.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.135)
                                %weight.215 : Tensor = prim::GetAttr[name="weight"](%self.135)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.55 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.53, %weight.215, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.53, %input.55)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_67.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.137 : __torch__.detectron2.layers.batch_norm.___torch_mangle_67.FrozenBatchNorm2d,
                                        %input.55 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.159 : Tensor = prim::GetAttr[name="running_var"](%self.137)
                                    %running_mean.159 : Tensor = prim::GetAttr[name="running_mean"](%self.137)
                                    %bias.163 : Tensor = prim::GetAttr[name="bias"](%self.137)
                                    %weight.217 : Tensor = prim::GetAttr[name="weight"](%self.137)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3/__module.model.backbone.bottom_up.res4.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3/__module.model.backbone.bottom_up.res4.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3/__module.model.backbone.bottom_up.res4.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3/__module.model.backbone.bottom_up.res4.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.61 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.55, %weight.217, %bias.163, %running_mean.159, %running_var.159, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.0/__module.model.backbone.bottom_up.res4.0.conv3/__module.model.backbone.bottom_up.res4.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.61)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_76.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_71.Conv2d object at 0x561907a919f0>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_73.Conv2d object at 0x561907a942f0>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_75.Conv2d object at 0x561907a978a0>
                      }
                      methods {
                        method forward {
                          graph(%self.143 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_76.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %conv3.17 : __torch__.detectron2.layers.wrappers.___torch_mangle_75.Conv2d = prim::GetAttr[name="conv3"](%self.143)
                            %conv2.17 : __torch__.detectron2.layers.wrappers.___torch_mangle_73.Conv2d = prim::GetAttr[name="conv2"](%self.143)
                            %conv1.19 : __torch__.detectron2.layers.wrappers.___torch_mangle_71.Conv2d = prim::GetAttr[name="conv1"](%self.143)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.19, %1)
                            %x.57 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.17, %x.57)
                            %x.59 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.17, %x.59)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.71 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.61 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.71), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.61)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_71.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_70.FrozenBatchNorm2d object at 0x561907a91760>
                          }
                          methods {
                            method forward {
                              graph(%self.145 : __torch__.detectron2.layers.wrappers.___torch_mangle_71.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.57 : __torch__.detectron2.layers.batch_norm.___torch_mangle_70.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.145)
                                %weight.223 : Tensor = prim::GetAttr[name="weight"](%self.145)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.59 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.223, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.57, %input.59)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_70.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.147 : __torch__.detectron2.layers.batch_norm.___torch_mangle_70.FrozenBatchNorm2d,
                                        %input.59 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.163 : Tensor = prim::GetAttr[name="running_var"](%self.147)
                                    %running_mean.163 : Tensor = prim::GetAttr[name="running_mean"](%self.147)
                                    %bias.167 : Tensor = prim::GetAttr[name="bias"](%self.147)
                                    %weight.225 : Tensor = prim::GetAttr[name="weight"](%self.147)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1/__module.model.backbone.bottom_up.res4.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1/__module.model.backbone.bottom_up.res4.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1/__module.model.backbone.bottom_up.res4.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1/__module.model.backbone.bottom_up.res4.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.65 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.59, %weight.225, %bias.167, %running_mean.163, %running_var.163, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv1/__module.model.backbone.bottom_up.res4.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.65)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_73.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_72.FrozenBatchNorm2d object at 0x561907a91a70>
                          }
                          methods {
                            method forward {
                              graph(%self.149 : __torch__.detectron2.layers.wrappers.___torch_mangle_73.Conv2d,
                                    %x.57 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.59 : __torch__.detectron2.layers.batch_norm.___torch_mangle_72.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.149)
                                %weight.227 : Tensor = prim::GetAttr[name="weight"](%self.149)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.61 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.57, %weight.227, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.59, %input.61)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_72.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.151 : __torch__.detectron2.layers.batch_norm.___torch_mangle_72.FrozenBatchNorm2d,
                                        %input.61 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.165 : Tensor = prim::GetAttr[name="running_var"](%self.151)
                                    %running_mean.165 : Tensor = prim::GetAttr[name="running_mean"](%self.151)
                                    %bias.169 : Tensor = prim::GetAttr[name="bias"](%self.151)
                                    %weight.229 : Tensor = prim::GetAttr[name="weight"](%self.151)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2/__module.model.backbone.bottom_up.res4.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2/__module.model.backbone.bottom_up.res4.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2/__module.model.backbone.bottom_up.res4.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2/__module.model.backbone.bottom_up.res4.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.67 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.61, %weight.229, %bias.169, %running_mean.165, %running_var.165, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv2/__module.model.backbone.bottom_up.res4.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.67)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_75.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_74.FrozenBatchNorm2d object at 0x561907a96820>
                          }
                          methods {
                            method forward {
                              graph(%self.153 : __torch__.detectron2.layers.wrappers.___torch_mangle_75.Conv2d,
                                    %x.59 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.61 : __torch__.detectron2.layers.batch_norm.___torch_mangle_74.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.153)
                                %weight.231 : Tensor = prim::GetAttr[name="weight"](%self.153)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.63 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.59, %weight.231, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.61, %input.63)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_74.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.155 : __torch__.detectron2.layers.batch_norm.___torch_mangle_74.FrozenBatchNorm2d,
                                        %input.63 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.167 : Tensor = prim::GetAttr[name="running_var"](%self.155)
                                    %running_mean.167 : Tensor = prim::GetAttr[name="running_mean"](%self.155)
                                    %bias.171 : Tensor = prim::GetAttr[name="bias"](%self.155)
                                    %weight.233 : Tensor = prim::GetAttr[name="weight"](%self.155)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3/__module.model.backbone.bottom_up.res4.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3/__module.model.backbone.bottom_up.res4.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3/__module.model.backbone.bottom_up.res4.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3/__module.model.backbone.bottom_up.res4.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.69 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.63, %weight.233, %bias.171, %running_mean.167, %running_var.167, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.1/__module.model.backbone.bottom_up.res4.1.conv3/__module.model.backbone.bottom_up.res4.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.69)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_83.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_78.Conv2d object at 0x5619079a1650>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_80.Conv2d object at 0x5619079a2750>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_82.Conv2d object at 0x5619079a5d00>
                      }
                      methods {
                        method forward {
                          graph(%self.157 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_83.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %conv3.19 : __torch__.detectron2.layers.wrappers.___torch_mangle_82.Conv2d = prim::GetAttr[name="conv3"](%self.157)
                            %conv2.19 : __torch__.detectron2.layers.wrappers.___torch_mangle_80.Conv2d = prim::GetAttr[name="conv2"](%self.157)
                            %conv1.21 : __torch__.detectron2.layers.wrappers.___torch_mangle_78.Conv2d = prim::GetAttr[name="conv1"](%self.157)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.21, %1)
                            %x.63 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.19, %x.63)
                            %x.65 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.19, %x.65)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.79 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.67 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.79), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.67)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_78.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_77.FrozenBatchNorm2d object at 0x5619079a1430>
                          }
                          methods {
                            method forward {
                              graph(%self.159 : __torch__.detectron2.layers.wrappers.___torch_mangle_78.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.63 : __torch__.detectron2.layers.batch_norm.___torch_mangle_77.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.159)
                                %weight.235 : Tensor = prim::GetAttr[name="weight"](%self.159)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.65 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.235, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.63, %input.65)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_77.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.161 : __torch__.detectron2.layers.batch_norm.___torch_mangle_77.FrozenBatchNorm2d,
                                        %input.65 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.169 : Tensor = prim::GetAttr[name="running_var"](%self.161)
                                    %running_mean.169 : Tensor = prim::GetAttr[name="running_mean"](%self.161)
                                    %bias.173 : Tensor = prim::GetAttr[name="bias"](%self.161)
                                    %weight.237 : Tensor = prim::GetAttr[name="weight"](%self.161)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1/__module.model.backbone.bottom_up.res4.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1/__module.model.backbone.bottom_up.res4.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1/__module.model.backbone.bottom_up.res4.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1/__module.model.backbone.bottom_up.res4.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.73 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.65, %weight.237, %bias.173, %running_mean.169, %running_var.169, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv1/__module.model.backbone.bottom_up.res4.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.73)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_80.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_79.FrozenBatchNorm2d object at 0x5619079a16d0>
                          }
                          methods {
                            method forward {
                              graph(%self.163 : __torch__.detectron2.layers.wrappers.___torch_mangle_80.Conv2d,
                                    %x.63 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.65 : __torch__.detectron2.layers.batch_norm.___torch_mangle_79.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.163)
                                %weight.239 : Tensor = prim::GetAttr[name="weight"](%self.163)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.67 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.63, %weight.239, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.65, %input.67)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_79.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.165 : __torch__.detectron2.layers.batch_norm.___torch_mangle_79.FrozenBatchNorm2d,
                                        %input.67 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.171 : Tensor = prim::GetAttr[name="running_var"](%self.165)
                                    %running_mean.171 : Tensor = prim::GetAttr[name="running_mean"](%self.165)
                                    %bias.175 : Tensor = prim::GetAttr[name="bias"](%self.165)
                                    %weight.241 : Tensor = prim::GetAttr[name="weight"](%self.165)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2/__module.model.backbone.bottom_up.res4.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2/__module.model.backbone.bottom_up.res4.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2/__module.model.backbone.bottom_up.res4.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2/__module.model.backbone.bottom_up.res4.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.75 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.67, %weight.241, %bias.175, %running_mean.171, %running_var.171, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv2/__module.model.backbone.bottom_up.res4.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.75)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_82.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_81.FrozenBatchNorm2d object at 0x5619079a4c80>
                          }
                          methods {
                            method forward {
                              graph(%self.167 : __torch__.detectron2.layers.wrappers.___torch_mangle_82.Conv2d,
                                    %x.65 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.67 : __torch__.detectron2.layers.batch_norm.___torch_mangle_81.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.167)
                                %weight.243 : Tensor = prim::GetAttr[name="weight"](%self.167)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.69 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.65, %weight.243, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.67, %input.69)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_81.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.169 : __torch__.detectron2.layers.batch_norm.___torch_mangle_81.FrozenBatchNorm2d,
                                        %input.69 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.173 : Tensor = prim::GetAttr[name="running_var"](%self.169)
                                    %running_mean.173 : Tensor = prim::GetAttr[name="running_mean"](%self.169)
                                    %bias.177 : Tensor = prim::GetAttr[name="bias"](%self.169)
                                    %weight.245 : Tensor = prim::GetAttr[name="weight"](%self.169)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3/__module.model.backbone.bottom_up.res4.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3/__module.model.backbone.bottom_up.res4.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3/__module.model.backbone.bottom_up.res4.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3/__module.model.backbone.bottom_up.res4.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.77 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.69, %weight.245, %bias.177, %running_mean.173, %running_var.173, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.2/__module.model.backbone.bottom_up.res4.2.conv3/__module.model.backbone.bottom_up.res4.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.77)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_90.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_85.Conv2d object at 0x5619079ad210>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_87.Conv2d object at 0x5619079ae310>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_89.Conv2d object at 0x561907981b00>
                      }
                      methods {
                        method forward {
                          graph(%self.171 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_90.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %conv3.21 : __torch__.detectron2.layers.wrappers.___torch_mangle_89.Conv2d = prim::GetAttr[name="conv3"](%self.171)
                            %conv2.21 : __torch__.detectron2.layers.wrappers.___torch_mangle_87.Conv2d = prim::GetAttr[name="conv2"](%self.171)
                            %conv1.23 : __torch__.detectron2.layers.wrappers.___torch_mangle_85.Conv2d = prim::GetAttr[name="conv1"](%self.171)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.23, %1)
                            %x.69 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.21, %x.69)
                            %x.71 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.21, %x.71)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.87 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.73 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.87), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.73)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_85.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_84.FrozenBatchNorm2d object at 0x5619079acff0>
                          }
                          methods {
                            method forward {
                              graph(%self.173 : __torch__.detectron2.layers.wrappers.___torch_mangle_85.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.69 : __torch__.detectron2.layers.batch_norm.___torch_mangle_84.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.173)
                                %weight.247 : Tensor = prim::GetAttr[name="weight"](%self.173)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.71 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.247, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.69, %input.71)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_84.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.175 : __torch__.detectron2.layers.batch_norm.___torch_mangle_84.FrozenBatchNorm2d,
                                        %input.71 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.175 : Tensor = prim::GetAttr[name="running_var"](%self.175)
                                    %running_mean.175 : Tensor = prim::GetAttr[name="running_mean"](%self.175)
                                    %bias.179 : Tensor = prim::GetAttr[name="bias"](%self.175)
                                    %weight.249 : Tensor = prim::GetAttr[name="weight"](%self.175)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1/__module.model.backbone.bottom_up.res4.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1/__module.model.backbone.bottom_up.res4.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1/__module.model.backbone.bottom_up.res4.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1/__module.model.backbone.bottom_up.res4.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.81 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.71, %weight.249, %bias.179, %running_mean.175, %running_var.175, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv1/__module.model.backbone.bottom_up.res4.3.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.81)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_87.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_86.FrozenBatchNorm2d object at 0x5619079ad290>
                          }
                          methods {
                            method forward {
                              graph(%self.177 : __torch__.detectron2.layers.wrappers.___torch_mangle_87.Conv2d,
                                    %x.69 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.71 : __torch__.detectron2.layers.batch_norm.___torch_mangle_86.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.177)
                                %weight.251 : Tensor = prim::GetAttr[name="weight"](%self.177)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.73 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.69, %weight.251, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.71, %input.73)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_86.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.179 : __torch__.detectron2.layers.batch_norm.___torch_mangle_86.FrozenBatchNorm2d,
                                        %input.73 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.177 : Tensor = prim::GetAttr[name="running_var"](%self.179)
                                    %running_mean.177 : Tensor = prim::GetAttr[name="running_mean"](%self.179)
                                    %bias.181 : Tensor = prim::GetAttr[name="bias"](%self.179)
                                    %weight.253 : Tensor = prim::GetAttr[name="weight"](%self.179)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2/__module.model.backbone.bottom_up.res4.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2/__module.model.backbone.bottom_up.res4.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2/__module.model.backbone.bottom_up.res4.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2/__module.model.backbone.bottom_up.res4.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.83 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.73, %weight.253, %bias.181, %running_mean.177, %running_var.177, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv2/__module.model.backbone.bottom_up.res4.3.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.83)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_89.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_88.FrozenBatchNorm2d object at 0x561907980a80>
                          }
                          methods {
                            method forward {
                              graph(%self.181 : __torch__.detectron2.layers.wrappers.___torch_mangle_89.Conv2d,
                                    %x.71 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.73 : __torch__.detectron2.layers.batch_norm.___torch_mangle_88.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.181)
                                %weight.255 : Tensor = prim::GetAttr[name="weight"](%self.181)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.75 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.71, %weight.255, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.73, %input.75)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_88.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.183 : __torch__.detectron2.layers.batch_norm.___torch_mangle_88.FrozenBatchNorm2d,
                                        %input.75 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.179 : Tensor = prim::GetAttr[name="running_var"](%self.183)
                                    %running_mean.179 : Tensor = prim::GetAttr[name="running_mean"](%self.183)
                                    %bias.183 : Tensor = prim::GetAttr[name="bias"](%self.183)
                                    %weight.257 : Tensor = prim::GetAttr[name="weight"](%self.183)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3/__module.model.backbone.bottom_up.res4.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3/__module.model.backbone.bottom_up.res4.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3/__module.model.backbone.bottom_up.res4.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3/__module.model.backbone.bottom_up.res4.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.85 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.75, %weight.257, %bias.183, %running_mean.179, %running_var.179, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.3/__module.model.backbone.bottom_up.res4.3.conv3/__module.model.backbone.bottom_up.res4.3.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.85)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_97.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_92.Conv2d object at 0x56190798a900>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_94.Conv2d object at 0x56190798b990>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_96.Conv2d object at 0x5619079c4530>
                      }
                      methods {
                        method forward {
                          graph(%self.185 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_97.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %conv3.23 : __torch__.detectron2.layers.wrappers.___torch_mangle_96.Conv2d = prim::GetAttr[name="conv3"](%self.185)
                            %conv2.23 : __torch__.detectron2.layers.wrappers.___torch_mangle_94.Conv2d = prim::GetAttr[name="conv2"](%self.185)
                            %conv1.25 : __torch__.detectron2.layers.wrappers.___torch_mangle_92.Conv2d = prim::GetAttr[name="conv1"](%self.185)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.25, %1)
                            %x.75 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.23, %x.75)
                            %x.77 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.23, %x.77)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.95 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.79 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.95), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.79)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_92.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_91.FrozenBatchNorm2d object at 0x561909c07120>
                          }
                          methods {
                            method forward {
                              graph(%self.187 : __torch__.detectron2.layers.wrappers.___torch_mangle_92.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.75 : __torch__.detectron2.layers.batch_norm.___torch_mangle_91.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.187)
                                %weight.259 : Tensor = prim::GetAttr[name="weight"](%self.187)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.77 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.259, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.75, %input.77)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_91.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.189 : __torch__.detectron2.layers.batch_norm.___torch_mangle_91.FrozenBatchNorm2d,
                                        %input.77 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.181 : Tensor = prim::GetAttr[name="running_var"](%self.189)
                                    %running_mean.181 : Tensor = prim::GetAttr[name="running_mean"](%self.189)
                                    %bias.185 : Tensor = prim::GetAttr[name="bias"](%self.189)
                                    %weight.261 : Tensor = prim::GetAttr[name="weight"](%self.189)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1/__module.model.backbone.bottom_up.res4.4.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1/__module.model.backbone.bottom_up.res4.4.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1/__module.model.backbone.bottom_up.res4.4.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1/__module.model.backbone.bottom_up.res4.4.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.89 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.77, %weight.261, %bias.185, %running_mean.181, %running_var.181, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv1/__module.model.backbone.bottom_up.res4.4.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.89)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_94.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_93.FrozenBatchNorm2d object at 0x56190798a980>
                          }
                          methods {
                            method forward {
                              graph(%self.191 : __torch__.detectron2.layers.wrappers.___torch_mangle_94.Conv2d,
                                    %x.75 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.77 : __torch__.detectron2.layers.batch_norm.___torch_mangle_93.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.191)
                                %weight.263 : Tensor = prim::GetAttr[name="weight"](%self.191)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.79 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.75, %weight.263, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.77, %input.79)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_93.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.193 : __torch__.detectron2.layers.batch_norm.___torch_mangle_93.FrozenBatchNorm2d,
                                        %input.79 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.183 : Tensor = prim::GetAttr[name="running_var"](%self.193)
                                    %running_mean.183 : Tensor = prim::GetAttr[name="running_mean"](%self.193)
                                    %bias.187 : Tensor = prim::GetAttr[name="bias"](%self.193)
                                    %weight.265 : Tensor = prim::GetAttr[name="weight"](%self.193)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2/__module.model.backbone.bottom_up.res4.4.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2/__module.model.backbone.bottom_up.res4.4.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2/__module.model.backbone.bottom_up.res4.4.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2/__module.model.backbone.bottom_up.res4.4.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.91 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.79, %weight.265, %bias.187, %running_mean.183, %running_var.183, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv2/__module.model.backbone.bottom_up.res4.4.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.91)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_96.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_95.FrozenBatchNorm2d object at 0x56190798dec0>
                          }
                          methods {
                            method forward {
                              graph(%self.195 : __torch__.detectron2.layers.wrappers.___torch_mangle_96.Conv2d,
                                    %x.77 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.79 : __torch__.detectron2.layers.batch_norm.___torch_mangle_95.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.195)
                                %weight.267 : Tensor = prim::GetAttr[name="weight"](%self.195)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.81 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.77, %weight.267, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.79, %input.81)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_95.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.197 : __torch__.detectron2.layers.batch_norm.___torch_mangle_95.FrozenBatchNorm2d,
                                        %input.81 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.185 : Tensor = prim::GetAttr[name="running_var"](%self.197)
                                    %running_mean.185 : Tensor = prim::GetAttr[name="running_mean"](%self.197)
                                    %bias.189 : Tensor = prim::GetAttr[name="bias"](%self.197)
                                    %weight.269 : Tensor = prim::GetAttr[name="weight"](%self.197)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3/__module.model.backbone.bottom_up.res4.4.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3/__module.model.backbone.bottom_up.res4.4.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3/__module.model.backbone.bottom_up.res4.4.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3/__module.model.backbone.bottom_up.res4.4.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.93 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.81, %weight.269, %bias.189, %running_mean.185, %running_var.185, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.4/__module.model.backbone.bottom_up.res4.4.conv3/__module.model.backbone.bottom_up.res4.4.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.93)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_104.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_99.Conv2d object at 0x5619079cba40>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_101.Conv2d object at 0x5619079ccb40>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_103.Conv2d object at 0x5619079d0090>
                      }
                      methods {
                        method forward {
                          graph(%self.199 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_104.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %conv3.25 : __torch__.detectron2.layers.wrappers.___torch_mangle_103.Conv2d = prim::GetAttr[name="conv3"](%self.199)
                            %conv2.25 : __torch__.detectron2.layers.wrappers.___torch_mangle_101.Conv2d = prim::GetAttr[name="conv2"](%self.199)
                            %conv1.27 : __torch__.detectron2.layers.wrappers.___torch_mangle_99.Conv2d = prim::GetAttr[name="conv1"](%self.199)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.27, %1)
                            %x.81 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.25, %x.81)
                            %x.83 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.25, %x.83)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.103 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.85 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.103), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.85)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_99.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_98.FrozenBatchNorm2d object at 0x5619079cb820>
                          }
                          methods {
                            method forward {
                              graph(%self.201 : __torch__.detectron2.layers.wrappers.___torch_mangle_99.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.81 : __torch__.detectron2.layers.batch_norm.___torch_mangle_98.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.201)
                                %weight.271 : Tensor = prim::GetAttr[name="weight"](%self.201)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.83 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.271, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.81, %input.83)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_98.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.203 : __torch__.detectron2.layers.batch_norm.___torch_mangle_98.FrozenBatchNorm2d,
                                        %input.83 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.187 : Tensor = prim::GetAttr[name="running_var"](%self.203)
                                    %running_mean.187 : Tensor = prim::GetAttr[name="running_mean"](%self.203)
                                    %bias.191 : Tensor = prim::GetAttr[name="bias"](%self.203)
                                    %weight.273 : Tensor = prim::GetAttr[name="weight"](%self.203)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1/__module.model.backbone.bottom_up.res4.5.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1/__module.model.backbone.bottom_up.res4.5.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1/__module.model.backbone.bottom_up.res4.5.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1/__module.model.backbone.bottom_up.res4.5.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.97 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.83, %weight.273, %bias.191, %running_mean.187, %running_var.187, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv1/__module.model.backbone.bottom_up.res4.5.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.97)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_101.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_100.FrozenBatchNorm2d object at 0x5619079cbac0>
                          }
                          methods {
                            method forward {
                              graph(%self.205 : __torch__.detectron2.layers.wrappers.___torch_mangle_101.Conv2d,
                                    %x.81 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.83 : __torch__.detectron2.layers.batch_norm.___torch_mangle_100.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.205)
                                %weight.275 : Tensor = prim::GetAttr[name="weight"](%self.205)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.85 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.81, %weight.275, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.83, %input.85)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_100.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.207 : __torch__.detectron2.layers.batch_norm.___torch_mangle_100.FrozenBatchNorm2d,
                                        %input.85 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.189 : Tensor = prim::GetAttr[name="running_var"](%self.207)
                                    %running_mean.189 : Tensor = prim::GetAttr[name="running_mean"](%self.207)
                                    %bias.193 : Tensor = prim::GetAttr[name="bias"](%self.207)
                                    %weight.277 : Tensor = prim::GetAttr[name="weight"](%self.207)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2/__module.model.backbone.bottom_up.res4.5.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2/__module.model.backbone.bottom_up.res4.5.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2/__module.model.backbone.bottom_up.res4.5.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2/__module.model.backbone.bottom_up.res4.5.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.99 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.85, %weight.277, %bias.193, %running_mean.189, %running_var.189, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv2/__module.model.backbone.bottom_up.res4.5.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.99)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_103.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_102.FrozenBatchNorm2d object at 0x5619079cf070>
                          }
                          methods {
                            method forward {
                              graph(%self.209 : __torch__.detectron2.layers.wrappers.___torch_mangle_103.Conv2d,
                                    %x.83 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.85 : __torch__.detectron2.layers.batch_norm.___torch_mangle_102.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.209)
                                %weight.279 : Tensor = prim::GetAttr[name="weight"](%self.209)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.87 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.83, %weight.279, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.85, %input.87)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_102.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.211 : __torch__.detectron2.layers.batch_norm.___torch_mangle_102.FrozenBatchNorm2d,
                                        %input.87 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.191 : Tensor = prim::GetAttr[name="running_var"](%self.211)
                                    %running_mean.191 : Tensor = prim::GetAttr[name="running_mean"](%self.211)
                                    %bias.195 : Tensor = prim::GetAttr[name="bias"](%self.211)
                                    %weight.281 : Tensor = prim::GetAttr[name="weight"](%self.211)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3/__module.model.backbone.bottom_up.res4.5.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3/__module.model.backbone.bottom_up.res4.5.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3/__module.model.backbone.bottom_up.res4.5.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3/__module.model.backbone.bottom_up.res4.5.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.101 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.87, %weight.281, %bias.195, %running_mean.191, %running_var.191, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res4/__module.model.backbone.bottom_up.res4.5/__module.model.backbone.bottom_up.res4.5.conv3/__module.model.backbone.bottom_up.res4.5.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.101)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.container.___torch_mangle_129.Sequential {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_114.BottleneckBlock object at 0x5619079f9b90>
                    1 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_121.BottleneckBlock object at 0x561907a06100>
                    2 = <__torch__.detectron2.modeling.backbone.resnet.___torch_mangle_128.BottleneckBlock object at 0x56190793dae0>
                  }
                  methods {
                    method forward {
                      graph(%self.213 : __torch__.torch.nn.modules.container.___torch_mangle_129.Sequential,
                            %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                        %_2.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_128.BottleneckBlock = prim::GetAttr[name="2"](%self.213)
                        %_1.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_121.BottleneckBlock = prim::GetAttr[name="1"](%self.213)
                        %_0.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_114.BottleneckBlock = prim::GetAttr[name="0"](%self.213)
                        %8 : Tensor = prim::CallMethod[name="forward"](%_0.7, %1)
                        %9 : Tensor = prim::CallMethod[name="forward"](%_1.7, %8)
                        %10 : Tensor = prim::CallMethod[name="forward"](%_2.7, %9)
                        return (%10)
                  
                    }
                  }
                  submodules {
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_114.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        shortcut = <__torch__.detectron2.layers.wrappers.___torch_mangle_107.Conv2d object at 0x5619079b93c0>
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_109.Conv2d object at 0x5619079ba460>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_111.Conv2d object at 0x5619079bda20>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_113.Conv2d object at 0x5619079c0fe0>
                      }
                      methods {
                        method forward {
                          graph(%self.215 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_114.BottleneckBlock,
                                %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %shortcut : __torch__.detectron2.layers.wrappers.___torch_mangle_107.Conv2d = prim::GetAttr[name="shortcut"](%self.215)
                            %conv3.27 : __torch__.detectron2.layers.wrappers.___torch_mangle_113.Conv2d = prim::GetAttr[name="conv3"](%self.215)
                            %conv2.27 : __torch__.detectron2.layers.wrappers.___torch_mangle_111.Conv2d = prim::GetAttr[name="conv2"](%self.215)
                            %conv1.29 : __torch__.detectron2.layers.wrappers.___torch_mangle_109.Conv2d = prim::GetAttr[name="conv1"](%self.215)
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv1.29, %1)
                            %x.87 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%15), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %16 : Tensor = prim::CallMethod[name="forward"](%conv2.27, %x.87)
                            %x.89 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %17 : Tensor = prim::CallMethod[name="forward"](%conv3.27, %x.89)
                            %18 : Tensor = prim::CallMethod[name="forward"](%shortcut, %1)
                            %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.111 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::add_(%17, %18, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.91 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.111), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.91)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_107.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_106.FrozenBatchNorm2d object at 0x5619079b9130>
                          }
                          methods {
                            method forward {
                              graph(%self.229 : __torch__.detectron2.layers.wrappers.___torch_mangle_107.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.93 : __torch__.detectron2.layers.batch_norm.___torch_mangle_106.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.229)
                                %weight.295 : Tensor = prim::GetAttr[name="weight"](%self.229)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.95 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.295, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.93, %input.95)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_106.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.231 : __torch__.detectron2.layers.batch_norm.___torch_mangle_106.FrozenBatchNorm2d,
                                        %input.95 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.199 : Tensor = prim::GetAttr[name="running_var"](%self.231)
                                    %running_mean.199 : Tensor = prim::GetAttr[name="running_mean"](%self.231)
                                    %bias.203 : Tensor = prim::GetAttr[name="bias"](%self.231)
                                    %weight.297 : Tensor = prim::GetAttr[name="weight"](%self.231)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut/__module.model.backbone.bottom_up.res5.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut/__module.model.backbone.bottom_up.res5.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut/__module.model.backbone.bottom_up.res5.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut/__module.model.backbone.bottom_up.res5.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %shortcut.7 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.95, %weight.297, %bias.203, %running_mean.199, %running_var.199, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.shortcut/__module.model.backbone.bottom_up.res5.0.shortcut.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%shortcut.7)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_109.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_108.FrozenBatchNorm2d object at 0x5619079b9440>
                          }
                          methods {
                            method forward {
                              graph(%self.217 : __torch__.detectron2.layers.wrappers.___torch_mangle_109.Conv2d,
                                    %1 : Float(1, 1024, 68, 50, strides=[3481600, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                                %norm.87 : __torch__.detectron2.layers.batch_norm.___torch_mangle_108.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.217)
                                %weight.283 : Tensor = prim::GetAttr[name="weight"](%self.217)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1
                                %5 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=2](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.89 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.283, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.87, %input.89)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_108.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.219 : __torch__.detectron2.layers.batch_norm.___torch_mangle_108.FrozenBatchNorm2d,
                                        %input.89 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.193 : Tensor = prim::GetAttr[name="running_var"](%self.219)
                                    %running_mean.193 : Tensor = prim::GetAttr[name="running_mean"](%self.219)
                                    %bias.197 : Tensor = prim::GetAttr[name="bias"](%self.219)
                                    %weight.285 : Tensor = prim::GetAttr[name="weight"](%self.219)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1/__module.model.backbone.bottom_up.res5.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1/__module.model.backbone.bottom_up.res5.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1/__module.model.backbone.bottom_up.res5.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1/__module.model.backbone.bottom_up.res5.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.105 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.89, %weight.285, %bias.197, %running_mean.193, %running_var.193, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv1/__module.model.backbone.bottom_up.res5.0.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.105)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_111.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_110.FrozenBatchNorm2d object at 0x5619079bca00>
                          }
                          methods {
                            method forward {
                              graph(%self.221 : __torch__.detectron2.layers.wrappers.___torch_mangle_111.Conv2d,
                                    %x.87 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.89 : __torch__.detectron2.layers.batch_norm.___torch_mangle_110.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.221)
                                %weight.287 : Tensor = prim::GetAttr[name="weight"](%self.221)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.91 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.87, %weight.287, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.89, %input.91)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_110.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.223 : __torch__.detectron2.layers.batch_norm.___torch_mangle_110.FrozenBatchNorm2d,
                                        %input.91 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.195 : Tensor = prim::GetAttr[name="running_var"](%self.223)
                                    %running_mean.195 : Tensor = prim::GetAttr[name="running_mean"](%self.223)
                                    %bias.199 : Tensor = prim::GetAttr[name="bias"](%self.223)
                                    %weight.289 : Tensor = prim::GetAttr[name="weight"](%self.223)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2/__module.model.backbone.bottom_up.res5.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2/__module.model.backbone.bottom_up.res5.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2/__module.model.backbone.bottom_up.res5.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2/__module.model.backbone.bottom_up.res5.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.107 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.91, %weight.289, %bias.199, %running_mean.195, %running_var.195, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv2/__module.model.backbone.bottom_up.res5.0.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.107)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_113.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_112.FrozenBatchNorm2d object at 0x5619079bffc0>
                          }
                          methods {
                            method forward {
                              graph(%self.225 : __torch__.detectron2.layers.wrappers.___torch_mangle_113.Conv2d,
                                    %x.89 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.91 : __torch__.detectron2.layers.batch_norm.___torch_mangle_112.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.225)
                                %weight.291 : Tensor = prim::GetAttr[name="weight"](%self.225)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.93 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.89, %weight.291, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.91, %input.93)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_112.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.227 : __torch__.detectron2.layers.batch_norm.___torch_mangle_112.FrozenBatchNorm2d,
                                        %input.93 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.197 : Tensor = prim::GetAttr[name="running_var"](%self.227)
                                    %running_mean.197 : Tensor = prim::GetAttr[name="running_mean"](%self.227)
                                    %bias.201 : Tensor = prim::GetAttr[name="bias"](%self.227)
                                    %weight.293 : Tensor = prim::GetAttr[name="weight"](%self.227)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3/__module.model.backbone.bottom_up.res5.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3/__module.model.backbone.bottom_up.res5.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3/__module.model.backbone.bottom_up.res5.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3/__module.model.backbone.bottom_up.res5.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.109 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.93, %weight.293, %bias.201, %running_mean.197, %running_var.197, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.0/__module.model.backbone.bottom_up.res5.0.conv3/__module.model.backbone.bottom_up.res5.0.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.109)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_121.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_116.Conv2d object at 0x5619079fdbc0>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_118.Conv2d object at 0x5619079fec60>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_120.Conv2d object at 0x561907a02220>
                      }
                      methods {
                        method forward {
                          graph(%self.233 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_121.BottleneckBlock,
                                %1 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                            %conv3.29 : __torch__.detectron2.layers.wrappers.___torch_mangle_120.Conv2d = prim::GetAttr[name="conv3"](%self.233)
                            %conv2.29 : __torch__.detectron2.layers.wrappers.___torch_mangle_118.Conv2d = prim::GetAttr[name="conv2"](%self.233)
                            %conv1.31 : __torch__.detectron2.layers.wrappers.___torch_mangle_116.Conv2d = prim::GetAttr[name="conv1"](%self.233)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1.31, %1)
                            %x.93 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2.29, %x.93)
                            %x.95 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3.29, %x.95)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out.119 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.97 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out.119), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.97)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_116.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_115.FrozenBatchNorm2d object at 0x5619079fd930>
                          }
                          methods {
                            method forward {
                              graph(%self.235 : __torch__.detectron2.layers.wrappers.___torch_mangle_116.Conv2d,
                                    %1 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.95 : __torch__.detectron2.layers.batch_norm.___torch_mangle_115.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.235)
                                %weight.299 : Tensor = prim::GetAttr[name="weight"](%self.235)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.97 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.299, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.95, %input.97)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_115.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.237 : __torch__.detectron2.layers.batch_norm.___torch_mangle_115.FrozenBatchNorm2d,
                                        %input.97 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.201 : Tensor = prim::GetAttr[name="running_var"](%self.237)
                                    %running_mean.201 : Tensor = prim::GetAttr[name="running_mean"](%self.237)
                                    %bias.205 : Tensor = prim::GetAttr[name="bias"](%self.237)
                                    %weight.301 : Tensor = prim::GetAttr[name="weight"](%self.237)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1/__module.model.backbone.bottom_up.res5.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1/__module.model.backbone.bottom_up.res5.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1/__module.model.backbone.bottom_up.res5.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1/__module.model.backbone.bottom_up.res5.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.113 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.97, %weight.301, %bias.205, %running_mean.201, %running_var.201, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv1/__module.model.backbone.bottom_up.res5.1.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.113)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_118.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_117.FrozenBatchNorm2d object at 0x5619079fdc40>
                          }
                          methods {
                            method forward {
                              graph(%self.239 : __torch__.detectron2.layers.wrappers.___torch_mangle_118.Conv2d,
                                    %x.93 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.97 : __torch__.detectron2.layers.batch_norm.___torch_mangle_117.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.239)
                                %weight.303 : Tensor = prim::GetAttr[name="weight"](%self.239)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.99 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.93, %weight.303, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.97, %input.99)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_117.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.241 : __torch__.detectron2.layers.batch_norm.___torch_mangle_117.FrozenBatchNorm2d,
                                        %input.99 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.203 : Tensor = prim::GetAttr[name="running_var"](%self.241)
                                    %running_mean.203 : Tensor = prim::GetAttr[name="running_mean"](%self.241)
                                    %bias.207 : Tensor = prim::GetAttr[name="bias"](%self.241)
                                    %weight.305 : Tensor = prim::GetAttr[name="weight"](%self.241)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2/__module.model.backbone.bottom_up.res5.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2/__module.model.backbone.bottom_up.res5.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2/__module.model.backbone.bottom_up.res5.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2/__module.model.backbone.bottom_up.res5.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.115 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.99, %weight.305, %bias.207, %running_mean.203, %running_var.203, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv2/__module.model.backbone.bottom_up.res5.1.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.115)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_120.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_119.FrozenBatchNorm2d object at 0x561907a01200>
                          }
                          methods {
                            method forward {
                              graph(%self.243 : __torch__.detectron2.layers.wrappers.___torch_mangle_120.Conv2d,
                                    %x.95 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.99 : __torch__.detectron2.layers.batch_norm.___torch_mangle_119.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.243)
                                %weight.307 : Tensor = prim::GetAttr[name="weight"](%self.243)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.101 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.95, %weight.307, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.99, %input.101)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_119.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.245 : __torch__.detectron2.layers.batch_norm.___torch_mangle_119.FrozenBatchNorm2d,
                                        %input.101 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.205 : Tensor = prim::GetAttr[name="running_var"](%self.245)
                                    %running_mean.205 : Tensor = prim::GetAttr[name="running_mean"](%self.245)
                                    %bias.209 : Tensor = prim::GetAttr[name="bias"](%self.245)
                                    %weight.309 : Tensor = prim::GetAttr[name="weight"](%self.245)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3/__module.model.backbone.bottom_up.res5.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3/__module.model.backbone.bottom_up.res5.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3/__module.model.backbone.bottom_up.res5.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3/__module.model.backbone.bottom_up.res5.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.117 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.101, %weight.309, %bias.209, %running_mean.205, %running_var.205, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.1/__module.model.backbone.bottom_up.res5.1.conv3/__module.model.backbone.bottom_up.res5.1.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.117)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                    module __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_128.BottleneckBlock {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                        conv1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_123.Conv2d object at 0x561907935e80>
                        conv2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_125.Conv2d object at 0x561907936f60>
                        conv3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_127.Conv2d object at 0x56190793a520>
                      }
                      methods {
                        method forward {
                          graph(%self.247 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_128.BottleneckBlock,
                                %1 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                            %conv3 : __torch__.detectron2.layers.wrappers.___torch_mangle_127.Conv2d = prim::GetAttr[name="conv3"](%self.247)
                            %conv2 : __torch__.detectron2.layers.wrappers.___torch_mangle_125.Conv2d = prim::GetAttr[name="conv2"](%self.247)
                            %conv1 : __torch__.detectron2.layers.wrappers.___torch_mangle_123.Conv2d = prim::GetAttr[name="conv1"](%self.247)
                            %13 : Tensor = prim::CallMethod[name="forward"](%conv1, %1)
                            %x.99 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%13), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:196:0
                            %14 : Tensor = prim::CallMethod[name="forward"](%conv2, %x.99)
                            %x.101 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%14), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:199:0
                            %15 : Tensor = prim::CallMethod[name="forward"](%conv3, %x.101)
                            %10 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %out : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::add_(%15, %1, %10), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:208:0
                            %x.103 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu_(%out), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/backbone/resnet.py:209:0
                            return (%x.103)
                      
                        }
                      }
                      submodules {
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_123.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_122.FrozenBatchNorm2d object at 0x561907935da0>
                          }
                          methods {
                            method forward {
                              graph(%self.249 : __torch__.detectron2.layers.wrappers.___torch_mangle_123.Conv2d,
                                    %1 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.101 : __torch__.detectron2.layers.batch_norm.___torch_mangle_122.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.249)
                                %weight.311 : Tensor = prim::GetAttr[name="weight"](%self.249)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.103 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.311, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.101, %input.103)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_122.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.251 : __torch__.detectron2.layers.batch_norm.___torch_mangle_122.FrozenBatchNorm2d,
                                        %input.103 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.207 : Tensor = prim::GetAttr[name="running_var"](%self.251)
                                    %running_mean.207 : Tensor = prim::GetAttr[name="running_mean"](%self.251)
                                    %bias.211 : Tensor = prim::GetAttr[name="bias"](%self.251)
                                    %weight.313 : Tensor = prim::GetAttr[name="weight"](%self.251)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1/__module.model.backbone.bottom_up.res5.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1/__module.model.backbone.bottom_up.res5.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1/__module.model.backbone.bottom_up.res5.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1/__module.model.backbone.bottom_up.res5.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.121 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.103, %weight.313, %bias.211, %running_mean.207, %running_var.207, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv1/__module.model.backbone.bottom_up.res5.2.conv1.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.121)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_125.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_124.FrozenBatchNorm2d object at 0x561907935f00>
                          }
                          methods {
                            method forward {
                              graph(%self.253 : __torch__.detectron2.layers.wrappers.___torch_mangle_125.Conv2d,
                                    %x.99 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm.103 : __torch__.detectron2.layers.batch_norm.___torch_mangle_124.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.253)
                                %weight.315 : Tensor = prim::GetAttr[name="weight"](%self.253)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2
                                %8 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.105 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.99, %weight.315, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm.103, %input.105)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_124.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.255 : __torch__.detectron2.layers.batch_norm.___torch_mangle_124.FrozenBatchNorm2d,
                                        %input.105 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var.209 : Tensor = prim::GetAttr[name="running_var"](%self.255)
                                    %running_mean.209 : Tensor = prim::GetAttr[name="running_mean"](%self.255)
                                    %bias.213 : Tensor = prim::GetAttr[name="bias"](%self.255)
                                    %weight.317 : Tensor = prim::GetAttr[name="weight"](%self.255)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2/__module.model.backbone.bottom_up.res5.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2/__module.model.backbone.bottom_up.res5.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2/__module.model.backbone.bottom_up.res5.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2/__module.model.backbone.bottom_up.res5.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.123 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.105, %weight.317, %bias.213, %running_mean.209, %running_var.209, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv2/__module.model.backbone.bottom_up.res5.2.conv2.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.123)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                        module __torch__.detectron2.layers.wrappers.___torch_mangle_127.Conv2d {
                          parameters {
                            weight = ...
                          }
                          attributes {
                            weight = ...
                            training = False
                            _is_full_backward_hook = None
                            norm = <__torch__.detectron2.layers.batch_norm.___torch_mangle_126.FrozenBatchNorm2d object at 0x561907939500>
                          }
                          methods {
                            method forward {
                              graph(%self.257 : __torch__.detectron2.layers.wrappers.___torch_mangle_127.Conv2d,
                                    %x.101 : Float(1, 512, 34, 25, strides=[435200, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                %norm : __torch__.detectron2.layers.batch_norm.___torch_mangle_126.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%self.257)
                                %weight.319 : Tensor = prim::GetAttr[name="weight"](%self.257)
                                %4 : NoneType = prim::Constant(), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3
                                %5 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %6 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3
                                %8 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %9 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3
                                %11 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %12 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3
                                %14 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %15 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %16 : int = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3
                                %18 : int = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %19 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %20 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %21 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %22 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %input.107 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%x.101, %weight.319, %4, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                                %25 : Tensor = prim::CallMethod[name="forward"](%norm, %input.107)
                                return (%25)
                          
                            }
                          }
                          submodules {
                            module __torch__.detectron2.layers.batch_norm.___torch_mangle_126.FrozenBatchNorm2d {
                              parameters {
                              }
                              attributes {
                                weight = ...
                                bias = ...
                                running_mean = ...
                                running_var = ...
                                training = False
                                _is_full_backward_hook = None
                              }
                              methods {
                                method forward {
                                  graph(%self.259 : __torch__.detectron2.layers.batch_norm.___torch_mangle_126.FrozenBatchNorm2d,
                                        %input.107 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0)):
                                    %running_var : Tensor = prim::GetAttr[name="running_var"](%self.259)
                                    %running_mean : Tensor = prim::GetAttr[name="running_mean"](%self.259)
                                    %bias.215 : Tensor = prim::GetAttr[name="bias"](%self.259)
                                    %weight.321 : Tensor = prim::GetAttr[name="weight"](%self.259)
                                    %6 : bool = prim::Constant[value=0](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3/__module.model.backbone.bottom_up.res5.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %7 : float = prim::Constant[value=0.10000000000000001](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3/__module.model.backbone.bottom_up.res5.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %8 : float = prim::Constant[value=1.0000000000000001e-05](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3/__module.model.backbone.bottom_up.res5.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %9 : bool = prim::Constant[value=1](), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3/__module.model.backbone.bottom_up.res5.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    %out.125 : Float(1, 2048, 34, 25, strides=[1740800, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::batch_norm(%input.107, %weight.321, %bias.215, %running_mean, %running_var, %6, %7, %8, %9), scope: __module.model.backbone/__module.model.backbone.bottom_up/__module.model.backbone.bottom_up.res5/__module.model.backbone.bottom_up.res5.2/__module.model.backbone.bottom_up.res5.2.conv3/__module.model.backbone.bottom_up.res5.2.conv3.norm # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:2421:0
                                    return (%out.125)
                              
                                }
                              }
                              submodules {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        module __torch__.detectron2.modeling.proposal_generator.rpn.RPN {
          parameters {
          }
          attributes {
            training = False
            _is_full_backward_hook = None
            rpn_head = <__torch__.detectron2.modeling.proposal_generator.rpn.StandardRPNHead object at 0x5619079d7650>
            anchor_generator = <__torch__.detectron2.modeling.anchor_generator.DefaultAnchorGenerator object at 0x5619079dc960>
          }
          methods {
            method forward {
              graph(%self.279 : __torch__.detectron2.modeling.proposal_generator.rpn.RPN,
                    %4 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                    %5 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                    %6 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                    %7 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %8 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %9 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %10 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %11 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0),
                    %18 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %image_size : Long(2, strides=[1], requires_grad=0, device=cuda:0)):
                %rpn_head : __torch__.detectron2.modeling.proposal_generator.rpn.StandardRPNHead = prim::GetAttr[name="rpn_head"](%self.279)
                %anchor_generator : __torch__.detectron2.modeling.anchor_generator.DefaultAnchorGenerator = prim::GetAttr[name="anchor_generator"](%self.279)
                %1912 : (Tensor, Tensor, Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%anchor_generator, %4, %5, %6, %7, %8, %9, %10, %11)
                %12 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0), %13 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0), %14 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0), %15 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0), %16 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%1912)
                %1913 : (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, Tensor) = prim::CallMethod[name="forward"](%rpn_head, %4, %5, %6, %18, %11)
                %19 : Float(1, 3, 272, 200, strides=[163200, 54400, 200, 1], requires_grad=0, device=cuda:0), %20 : Float(1, 3, 136, 100, strides=[40800, 13600, 100, 1], requires_grad=0, device=cuda:0), %21 : Float(1, 3, 68, 50, strides=[10200, 3400, 50, 1], requires_grad=0, device=cuda:0), %22 : Float(1, 3, 34, 25, strides=[2550, 850, 25, 1], requires_grad=0, device=cuda:0), %23 : Float(1, 3, 17, 13, strides=[663, 221, 13, 1], requires_grad=0, device=cuda:0), %24 : Float(1, 12, 272, 200, strides=[652800, 54400, 200, 1], requires_grad=0, device=cuda:0), %25 : Float(1, 12, 136, 100, strides=[163200, 13600, 100, 1], requires_grad=0, device=cuda:0), %26 : Float(1, 12, 68, 50, strides=[40800, 3400, 50, 1], requires_grad=0, device=cuda:0), %27 : Float(1, 12, 34, 25, strides=[10200, 850, 25, 1], requires_grad=0, device=cuda:0), %28 : Float(1, 12, 17, 13, strides=[2652, 221, 13, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%1913)
                %29 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %30 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %31 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %32 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %33 : int[] = prim::ListConstruct(%29, %30, %31, %32), scope: __module.model.proposal_generator
                %34 : Float(1, 272, 200, 3, strides=[163200, 200, 1, 54400], requires_grad=0, device=cuda:0) = aten::permute(%19, %33), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %35 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %36 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %logits_i.1 : Float(1, 163200, strides=[163200, 1], requires_grad=0, device=cuda:0) = aten::flatten(%34, %35, %36), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %38 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %39 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %40 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %41 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %42 : int[] = prim::ListConstruct(%38, %39, %40, %41), scope: __module.model.proposal_generator
                %43 : Float(1, 136, 100, 3, strides=[40800, 100, 1, 13600], requires_grad=0, device=cuda:0) = aten::permute(%20, %42), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %44 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %45 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %logits_i.3 : Float(1, 40800, strides=[40800, 1], requires_grad=0, device=cuda:0) = aten::flatten(%43, %44, %45), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %47 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %48 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %49 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %50 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.model.proposal_generator
                %52 : Float(1, 68, 50, 3, strides=[10200, 50, 1, 3400], requires_grad=0, device=cuda:0) = aten::permute(%21, %51), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %53 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %54 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %logits_i.5 : Float(1, 10200, strides=[10200, 1], requires_grad=0, device=cuda:0) = aten::flatten(%52, %53, %54), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %56 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %57 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %58 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %59 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %60 : int[] = prim::ListConstruct(%56, %57, %58, %59), scope: __module.model.proposal_generator
                %61 : Float(1, 34, 25, 3, strides=[2550, 25, 1, 850], requires_grad=0, device=cuda:0) = aten::permute(%22, %60), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %62 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %63 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %logits_i.7 : Float(1, 2550, strides=[2550, 1], requires_grad=0, device=cuda:0) = aten::flatten(%61, %62, %63), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %65 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %66 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %67 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %68 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %69 : int[] = prim::ListConstruct(%65, %66, %67, %68), scope: __module.model.proposal_generator
                %70 : Float(1, 17, 13, 3, strides=[663, 13, 1, 221], requires_grad=0, device=cuda:0) = aten::permute(%23, %69), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %71 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %72 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %logits_i : Float(1, 663, strides=[663, 1], requires_grad=0, device=cuda:0) = aten::flatten(%70, %71, %72), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:458:0
                %74 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %75 : int = aten::size(%24, %74), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %76 : Long(device=cpu) = prim::NumToTensor(%75), scope: __module.model.proposal_generator
                %77 : int = aten::Int(%76), scope: __module.model.proposal_generator
                %93 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %94 : int = aten::size(%24, %93), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %95 : Long(device=cpu) = prim::NumToTensor(%94), scope: __module.model.proposal_generator
                %96 : int = aten::Int(%95), scope: __module.model.proposal_generator
                %109 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %110 : int = aten::size(%24, %109), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %111 : Long(device=cpu) = prim::NumToTensor(%110), scope: __module.model.proposal_generator
                %112 : int = aten::Int(%111), scope: __module.model.proposal_generator
                %113 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %114 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %115 : int[] = prim::ListConstruct(%77, %113, %114, %96, %112), scope: __module.model.proposal_generator
                %116 : Float(1, 3, 4, 272, 200, strides=[652800, 217600, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::view(%24, %115), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %117 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %118 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %119 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %120 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %121 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %122 : int[] = prim::ListConstruct(%117, %118, %119, %120, %121), scope: __module.model.proposal_generator
                %123 : Float(1, 272, 200, 3, 4, strides=[652800, 200, 1, 217600, 54400], requires_grad=0, device=cuda:0) = aten::permute(%116, %122), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %124 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %125 : int = prim::Constant[value=-2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %pred_anchor_deltas_i.1 : Float(1, 163200, 4, strides=[652800, 4, 1], requires_grad=0, device=cuda:0) = aten::flatten(%123, %124, %125), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %127 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %128 : int = aten::size(%25, %127), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %129 : Long(device=cpu) = prim::NumToTensor(%128), scope: __module.model.proposal_generator
                %130 : int = aten::Int(%129), scope: __module.model.proposal_generator
                %146 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %147 : int = aten::size(%25, %146), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %148 : Long(device=cpu) = prim::NumToTensor(%147), scope: __module.model.proposal_generator
                %149 : int = aten::Int(%148), scope: __module.model.proposal_generator
                %162 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %163 : int = aten::size(%25, %162), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %164 : Long(device=cpu) = prim::NumToTensor(%163), scope: __module.model.proposal_generator
                %165 : int = aten::Int(%164), scope: __module.model.proposal_generator
                %166 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %167 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %168 : int[] = prim::ListConstruct(%130, %166, %167, %149, %165), scope: __module.model.proposal_generator
                %169 : Float(1, 3, 4, 136, 100, strides=[163200, 54400, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::view(%25, %168), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %170 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %171 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %172 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %173 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %174 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %175 : int[] = prim::ListConstruct(%170, %171, %172, %173, %174), scope: __module.model.proposal_generator
                %176 : Float(1, 136, 100, 3, 4, strides=[163200, 100, 1, 54400, 13600], requires_grad=0, device=cuda:0) = aten::permute(%169, %175), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %177 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %178 : int = prim::Constant[value=-2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %pred_anchor_deltas_i.3 : Float(1, 40800, 4, strides=[163200, 4, 1], requires_grad=0, device=cuda:0) = aten::flatten(%176, %177, %178), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %180 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %181 : int = aten::size(%26, %180), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %182 : Long(device=cpu) = prim::NumToTensor(%181), scope: __module.model.proposal_generator
                %183 : int = aten::Int(%182), scope: __module.model.proposal_generator
                %199 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %200 : int = aten::size(%26, %199), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %201 : Long(device=cpu) = prim::NumToTensor(%200), scope: __module.model.proposal_generator
                %202 : int = aten::Int(%201), scope: __module.model.proposal_generator
                %215 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %216 : int = aten::size(%26, %215), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %217 : Long(device=cpu) = prim::NumToTensor(%216), scope: __module.model.proposal_generator
                %218 : int = aten::Int(%217), scope: __module.model.proposal_generator
                %219 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %220 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %221 : int[] = prim::ListConstruct(%183, %219, %220, %202, %218), scope: __module.model.proposal_generator
                %222 : Float(1, 3, 4, 68, 50, strides=[40800, 13600, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::view(%26, %221), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %223 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %224 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %225 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %226 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %227 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %228 : int[] = prim::ListConstruct(%223, %224, %225, %226, %227), scope: __module.model.proposal_generator
                %229 : Float(1, 68, 50, 3, 4, strides=[40800, 50, 1, 13600, 3400], requires_grad=0, device=cuda:0) = aten::permute(%222, %228), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %230 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %231 : int = prim::Constant[value=-2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %pred_anchor_deltas_i.5 : Float(1, 10200, 4, strides=[40800, 4, 1], requires_grad=0, device=cuda:0) = aten::flatten(%229, %230, %231), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %233 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %234 : int = aten::size(%27, %233), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %235 : Long(device=cpu) = prim::NumToTensor(%234), scope: __module.model.proposal_generator
                %236 : int = aten::Int(%235), scope: __module.model.proposal_generator
                %252 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %253 : int = aten::size(%27, %252), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %254 : Long(device=cpu) = prim::NumToTensor(%253), scope: __module.model.proposal_generator
                %255 : int = aten::Int(%254), scope: __module.model.proposal_generator
                %268 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %269 : int = aten::size(%27, %268), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %270 : Long(device=cpu) = prim::NumToTensor(%269), scope: __module.model.proposal_generator
                %271 : int = aten::Int(%270), scope: __module.model.proposal_generator
                %272 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %273 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %274 : int[] = prim::ListConstruct(%236, %272, %273, %255, %271), scope: __module.model.proposal_generator
                %275 : Float(1, 3, 4, 34, 25, strides=[10200, 3400, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::view(%27, %274), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %276 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %277 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %278 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %279 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %280 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %281 : int[] = prim::ListConstruct(%276, %277, %278, %279, %280), scope: __module.model.proposal_generator
                %282 : Float(1, 34, 25, 3, 4, strides=[10200, 25, 1, 3400, 850], requires_grad=0, device=cuda:0) = aten::permute(%275, %281), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %283 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %284 : int = prim::Constant[value=-2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %pred_anchor_deltas_i.7 : Float(1, 2550, 4, strides=[10200, 4, 1], requires_grad=0, device=cuda:0) = aten::flatten(%282, %283, %284), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %286 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %287 : int = aten::size(%28, %286), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %288 : Long(device=cpu) = prim::NumToTensor(%287), scope: __module.model.proposal_generator
                %289 : int = aten::Int(%288), scope: __module.model.proposal_generator
                %305 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %306 : int = aten::size(%28, %305), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %307 : Long(device=cpu) = prim::NumToTensor(%306), scope: __module.model.proposal_generator
                %308 : int = aten::Int(%307), scope: __module.model.proposal_generator
                %321 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %322 : int = aten::size(%28, %321), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %323 : Long(device=cpu) = prim::NumToTensor(%322), scope: __module.model.proposal_generator
                %324 : int = aten::Int(%323), scope: __module.model.proposal_generator
                %325 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %326 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %327 : int[] = prim::ListConstruct(%289, %325, %326, %308, %324), scope: __module.model.proposal_generator
                %328 : Float(1, 3, 4, 17, 13, strides=[2652, 884, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::view(%28, %327), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %329 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %330 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %331 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %332 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %333 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %334 : int[] = prim::ListConstruct(%329, %330, %331, %332, %333), scope: __module.model.proposal_generator
                %335 : Float(1, 17, 13, 3, 4, strides=[2652, 13, 1, 884, 221], requires_grad=0, device=cuda:0) = aten::permute(%328, %334), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %336 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %337 : int = prim::Constant[value=-2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %pred_anchor_deltas_i : Float(1, 663, 4, strides=[2652, 4, 1], requires_grad=0, device=cuda:0) = aten::flatten(%335, %336, %337), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:463:0
                %339 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:522:0
                %340 : int = aten::size(%pred_anchor_deltas_i.1, %339), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:522:0
                %N : Long(device=cpu) = prim::NumToTensor(%340), scope: __module.model.proposal_generator
                %342 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %343 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %344 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %345 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %346 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %347 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %348 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %349 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %350 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %351 : int = aten::Int(%N), scope: __module.model.proposal_generator
                %358 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %359 : int = aten::size(%12, %358), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %B.1 : Long(device=cpu) = prim::NumToTensor(%359), scope: __module.model.proposal_generator
                %361 : int = aten::Int(%B.1), scope: __module.model.proposal_generator
                %362 : int = aten::Int(%B.1), scope: __module.model.proposal_generator
                %363 : int = aten::Int(%B.1), scope: __module.model.proposal_generator
                %364 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %365 : int[] = prim::ListConstruct(%364, %363), scope: __module.model.proposal_generator
                %deltas.1 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_anchor_deltas_i.1, %365), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %367 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %368 : Float(1, 163200, 4, strides=[652800, 4, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%12, %367), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %369 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %370 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %371 : int[] = prim::ListConstruct(%351, %369, %370), scope: __module.model.proposal_generator
                %372 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %373 : Float(1, 163200, 4, strides=[652800, 4, 1], requires_grad=0, device=cuda:0) = aten::expand(%368, %371, %372), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %374 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %375 : int[] = prim::ListConstruct(%374, %362), scope: __module.model.proposal_generator
                %boxes.1 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%373, %375), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %377 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %378 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %379 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %380 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %deltas.3 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%deltas.1, %377, %378, %379, %380), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %382 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %383 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %384 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %385 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %boxes.3 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.1, %382, %383, %384, %385), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %387 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %388 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %389 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %390 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %391 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %387, %388, %389, %390), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %392 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %393 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %394 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%391, %392, %393), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %395 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %396 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %397 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %398 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %399 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %395, %396, %397, %398), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %400 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %401 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %402 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%399, %400, %401), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %403 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths.1 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%394, %402, %403), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %405 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %406 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %407 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %408 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %409 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %405, %406, %407, %408), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %410 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %411 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %412 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%409, %410, %411), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %413 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %414 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %415 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %416 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %417 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %413, %414, %415, %416), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %418 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %419 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %420 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%417, %418, %419), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %421 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights.1 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%412, %420, %421), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %423 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %424 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %425 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %426 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %427 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %423, %424, %425, %426), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %428 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %429 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %430 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%427, %428, %429), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %431 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %432 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths.1, %431), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %433 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x.1 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%430, %432, %433), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %435 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %436 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %437 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %438 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %439 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.3, %435, %436, %437, %438), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %440 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %441 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %442 : Float(163200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%439, %440, %441), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %443 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %444 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights.1, %443), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %445 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y.1 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%442, %444, %445), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %447 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %448 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %449 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %450 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %451 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.3, %447, %448, %449, %450), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %452 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %453 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %454 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %455 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %456 : Float(163200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%451, %452, %453, %454, %455), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %457 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%456, %457), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %459 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %460 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %461 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %462 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %463 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.3, %459, %460, %461, %462), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %464 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %465 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %466 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %467 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %468 : Float(163200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%463, %464, %465, %466, %467), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %469 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%468, %469), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %471 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %472 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %473 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %474 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %475 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.3, %471, %472, %473, %474), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %476 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %477 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %478 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %479 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %480 : Float(163200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%475, %476, %477, %478, %479), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %481 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%480, %481), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %483 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %484 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %485 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %486 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %487 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.3, %483, %484, %485, %486), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %488 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %489 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %490 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %491 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %492 : Float(163200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%487, %488, %489, %490, %491), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %493 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%492, %493), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %495 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %496 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw.3 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.1, %495, %496), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %498 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %499 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh.3 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.1, %498, %499), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %501 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %502 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %503 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %504 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %505 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.1, %501, %502, %503, %504), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %506 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %507 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%505, %506), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %508 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx.1, %507), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %509 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %510 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %511 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %512 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %513 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x.1, %509, %510, %511, %512), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %514 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %515 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%513, %514), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %516 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%508, %515, %516), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %518 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %519 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %520 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %521 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %522 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.1, %518, %519, %520, %521), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %523 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %524 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%522, %523), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %525 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy.1, %524), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %526 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %527 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %528 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %529 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %530 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y.1, %526, %527, %528, %529), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %531 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %532 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%530, %531), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %533 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%525, %532, %533), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %535 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw.3), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %536 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %537 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %538 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %539 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %540 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.1, %536, %537, %538, %539), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %541 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %542 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%540, %541), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%535, %542), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %544 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh.3), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %545 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %546 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %547 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %548 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %549 : Float(163200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.1, %545, %546, %547, %548), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %550 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %551 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%549, %550), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h.1 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%544, %551), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %553 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %554 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.1, %553), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %555 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %556 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x.1, %554, %555), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %557 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %558 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.1, %557), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %559 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %560 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y.1, %558, %559), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %561 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %562 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.1, %561), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %563 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %564 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x.1, %562, %563), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %565 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %566 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.1, %565), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %567 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %568 : Float(163200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y.1, %566, %567), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %569 : Tensor[] = prim::ListConstruct(%556, %560, %564, %568), scope: __module.model.proposal_generator
                %570 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %571 : Float(163200, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%569, %570), scope: __module.model.proposal_generator # export_model.py:40:0
                %572 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %573 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %574 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %575 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %576 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %577 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %578 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %pred_boxes.1 : Float(163200, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%571, %572, %573, %574, %575, %576, %577, %578), scope: __module.model.proposal_generator # export_model.py:40:0
                %580 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %581 : int = aten::size(%deltas.3, %580), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %582 : Long(device=cpu) = prim::NumToTensor(%581), scope: __module.model.proposal_generator
                %583 : int = aten::Int(%582), scope: __module.model.proposal_generator
                %584 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %585 : int = aten::size(%deltas.3, %584), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %586 : Long(device=cpu) = prim::NumToTensor(%585), scope: __module.model.proposal_generator
                %587 : int = aten::Int(%586), scope: __module.model.proposal_generator
                %588 : int[] = prim::ListConstruct(%583, %587), scope: __module.model.proposal_generator
                %proposals_i.1 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes.1, %588), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %590 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %591 : int[] = prim::ListConstruct(%350, %590, %361), scope: __module.model.proposal_generator
                %proposals_i.11 : Float(1, 163200, 4, strides=[652800, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%proposals_i.1, %591), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %593 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %594 : int = aten::size(%13, %593), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %B.3 : Long(device=cpu) = prim::NumToTensor(%594), scope: __module.model.proposal_generator
                %596 : int = aten::Int(%B.3), scope: __module.model.proposal_generator
                %597 : int = aten::Int(%B.3), scope: __module.model.proposal_generator
                %598 : int = aten::Int(%B.3), scope: __module.model.proposal_generator
                %599 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %600 : int[] = prim::ListConstruct(%599, %598), scope: __module.model.proposal_generator
                %deltas.5 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_anchor_deltas_i.3, %600), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %602 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %603 : Float(1, 40800, 4, strides=[163200, 4, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%13, %602), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %604 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %605 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %606 : int[] = prim::ListConstruct(%349, %604, %605), scope: __module.model.proposal_generator
                %607 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %608 : Float(1, 40800, 4, strides=[163200, 4, 1], requires_grad=0, device=cuda:0) = aten::expand(%603, %606, %607), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %609 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %610 : int[] = prim::ListConstruct(%609, %597), scope: __module.model.proposal_generator
                %boxes.5 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%608, %610), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %612 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %613 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %614 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %615 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %deltas.7 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%deltas.5, %612, %613, %614, %615), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %617 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %618 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %619 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %620 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %boxes.7 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.5, %617, %618, %619, %620), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %622 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %623 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %624 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %625 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %626 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %622, %623, %624, %625), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %627 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %628 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %629 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%626, %627, %628), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %630 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %631 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %632 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %633 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %634 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %630, %631, %632, %633), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %635 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %636 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %637 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%634, %635, %636), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %638 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths.3 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%629, %637, %638), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %640 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %641 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %642 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %643 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %644 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %640, %641, %642, %643), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %645 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %646 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %647 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%644, %645, %646), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %648 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %649 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %650 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %651 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %652 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %648, %649, %650, %651), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %653 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %654 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %655 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%652, %653, %654), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %656 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights.3 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%647, %655, %656), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %658 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %659 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %660 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %661 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %662 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %658, %659, %660, %661), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %663 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %664 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %665 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%662, %663, %664), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %666 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %667 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths.3, %666), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %668 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x.3 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%665, %667, %668), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %670 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %671 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %672 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %673 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %674 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.7, %670, %671, %672, %673), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %675 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %676 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %677 : Float(40800, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%674, %675, %676), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %678 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %679 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights.3, %678), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %680 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y.3 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%677, %679, %680), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %682 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %683 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %684 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %685 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %686 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.7, %682, %683, %684, %685), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %687 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %688 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %689 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %690 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %691 : Float(40800, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%686, %687, %688, %689, %690), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %692 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%691, %692), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %694 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %695 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %696 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %697 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %698 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.7, %694, %695, %696, %697), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %699 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %700 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %701 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %702 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %703 : Float(40800, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%698, %699, %700, %701, %702), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %704 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%703, %704), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %706 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %707 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %708 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %709 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %710 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.7, %706, %707, %708, %709), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %711 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %712 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %713 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %714 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %715 : Float(40800, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%710, %711, %712, %713, %714), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %716 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.5 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%715, %716), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %718 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %719 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %720 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %721 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %722 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.7, %718, %719, %720, %721), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %723 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %724 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %725 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %726 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %727 : Float(40800, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%722, %723, %724, %725, %726), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %728 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.5 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%727, %728), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %730 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %731 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw.7 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.5, %730, %731), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %733 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %734 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh.7 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.5, %733, %734), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %736 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %737 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %738 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %739 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %740 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.3, %736, %737, %738, %739), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %741 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %742 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%740, %741), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %743 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx.3, %742), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %744 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %745 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %746 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %747 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %748 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x.3, %744, %745, %746, %747), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %749 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %750 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%748, %749), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %751 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%743, %750, %751), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %753 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %754 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %755 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %756 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %757 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.3, %753, %754, %755, %756), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %758 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %759 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%757, %758), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %760 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy.3, %759), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %761 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %762 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %763 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %764 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %765 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y.3, %761, %762, %763, %764), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %766 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %767 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%765, %766), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %768 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%760, %767, %768), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %770 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw.7), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %771 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %772 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %773 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %774 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %775 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.3, %771, %772, %773, %774), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %776 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %777 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%775, %776), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%770, %777), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %779 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh.7), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %780 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %781 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %782 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %783 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %784 : Float(40800, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.3, %780, %781, %782, %783), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %785 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %786 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%784, %785), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h.3 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%779, %786), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %788 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %789 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.3, %788), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %790 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %791 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x.3, %789, %790), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %792 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %793 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.3, %792), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %794 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %795 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y.3, %793, %794), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %796 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %797 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.3, %796), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %798 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %799 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x.3, %797, %798), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %800 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %801 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.3, %800), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %802 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %803 : Float(40800, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y.3, %801, %802), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %804 : Tensor[] = prim::ListConstruct(%791, %795, %799, %803), scope: __module.model.proposal_generator
                %805 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %806 : Float(40800, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%804, %805), scope: __module.model.proposal_generator # export_model.py:40:0
                %807 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %808 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %809 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %810 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %811 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %812 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %813 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %pred_boxes.3 : Float(40800, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%806, %807, %808, %809, %810, %811, %812, %813), scope: __module.model.proposal_generator # export_model.py:40:0
                %815 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %816 : int = aten::size(%deltas.7, %815), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %817 : Long(device=cpu) = prim::NumToTensor(%816), scope: __module.model.proposal_generator
                %818 : int = aten::Int(%817), scope: __module.model.proposal_generator
                %819 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %820 : int = aten::size(%deltas.7, %819), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %821 : Long(device=cpu) = prim::NumToTensor(%820), scope: __module.model.proposal_generator
                %822 : int = aten::Int(%821), scope: __module.model.proposal_generator
                %823 : int[] = prim::ListConstruct(%818, %822), scope: __module.model.proposal_generator
                %proposals_i.3 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes.3, %823), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %825 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %826 : int[] = prim::ListConstruct(%348, %825, %596), scope: __module.model.proposal_generator
                %proposals_i.13 : Float(1, 40800, 4, strides=[163200, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%proposals_i.3, %826), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %828 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %829 : int = aten::size(%14, %828), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %B.5 : Long(device=cpu) = prim::NumToTensor(%829), scope: __module.model.proposal_generator
                %831 : int = aten::Int(%B.5), scope: __module.model.proposal_generator
                %832 : int = aten::Int(%B.5), scope: __module.model.proposal_generator
                %833 : int = aten::Int(%B.5), scope: __module.model.proposal_generator
                %834 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %835 : int[] = prim::ListConstruct(%834, %833), scope: __module.model.proposal_generator
                %deltas.9 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_anchor_deltas_i.5, %835), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %837 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %838 : Float(1, 10200, 4, strides=[40800, 4, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%14, %837), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %839 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %840 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %841 : int[] = prim::ListConstruct(%347, %839, %840), scope: __module.model.proposal_generator
                %842 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %843 : Float(1, 10200, 4, strides=[40800, 4, 1], requires_grad=0, device=cuda:0) = aten::expand(%838, %841, %842), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %844 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %845 : int[] = prim::ListConstruct(%844, %832), scope: __module.model.proposal_generator
                %boxes.9 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%843, %845), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %847 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %848 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %849 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %850 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %deltas.11 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%deltas.9, %847, %848, %849, %850), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %852 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %853 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %854 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %855 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %boxes.11 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.9, %852, %853, %854, %855), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %857 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %858 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %859 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %860 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %861 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %857, %858, %859, %860), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %862 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %863 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %864 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%861, %862, %863), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %865 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %866 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %867 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %868 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %869 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %865, %866, %867, %868), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %870 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %871 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %872 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%869, %870, %871), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %873 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths.5 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%864, %872, %873), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %875 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %876 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %877 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %878 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %879 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %875, %876, %877, %878), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %880 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %881 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %882 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%879, %880, %881), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %883 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %884 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %885 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %886 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %887 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %883, %884, %885, %886), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %888 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %889 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %890 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%887, %888, %889), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %891 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights.5 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%882, %890, %891), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %893 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %894 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %895 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %896 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %897 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %893, %894, %895, %896), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %898 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %899 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %900 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%897, %898, %899), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %901 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %902 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths.5, %901), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %903 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x.5 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%900, %902, %903), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %905 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %906 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %907 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %908 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %909 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.11, %905, %906, %907, %908), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %910 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %911 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %912 : Float(10200, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%909, %910, %911), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %913 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %914 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights.5, %913), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %915 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y.5 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%912, %914, %915), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %917 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %918 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %919 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %920 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %921 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.11, %917, %918, %919, %920), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %922 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %923 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %924 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %925 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %926 : Float(10200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%921, %922, %923, %924, %925), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %927 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%926, %927), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %929 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %930 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %931 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %932 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %933 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.11, %929, %930, %931, %932), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %934 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %935 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %936 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %937 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %938 : Float(10200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%933, %934, %935, %936, %937), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %939 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%938, %939), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %941 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %942 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %943 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %944 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %945 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.11, %941, %942, %943, %944), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %946 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %947 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %948 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %949 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %950 : Float(10200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%945, %946, %947, %948, %949), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %951 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.9 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%950, %951), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %953 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %954 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %955 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %956 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %957 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.11, %953, %954, %955, %956), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %958 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %959 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %960 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %961 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %962 : Float(10200, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%957, %958, %959, %960, %961), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %963 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.9 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%962, %963), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %965 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %966 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw.11 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.9, %965, %966), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %968 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %969 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh.11 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.9, %968, %969), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %971 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %972 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %973 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %974 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %975 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.5, %971, %972, %973, %974), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %976 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %977 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%975, %976), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %978 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx.5, %977), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %979 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %980 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %981 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %982 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %983 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x.5, %979, %980, %981, %982), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %984 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %985 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%983, %984), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %986 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%978, %985, %986), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %988 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %989 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %990 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %991 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %992 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.5, %988, %989, %990, %991), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %993 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %994 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%992, %993), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %995 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy.5, %994), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %996 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %997 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %998 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %999 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1000 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y.5, %996, %997, %998, %999), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1001 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1002 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1000, %1001), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1003 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%995, %1002, %1003), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1005 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw.11), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1006 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1007 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1008 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1009 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1010 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.5, %1006, %1007, %1008, %1009), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1011 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1012 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1010, %1011), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1005, %1012), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1014 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh.11), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1015 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1016 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1017 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1018 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1019 : Float(10200, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.5, %1015, %1016, %1017, %1018), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1020 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1021 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1019, %1020), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h.5 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1014, %1021), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1023 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1024 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.5, %1023), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1025 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1026 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x.5, %1024, %1025), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1027 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1028 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.5, %1027), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1029 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1030 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y.5, %1028, %1029), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1031 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1032 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.5, %1031), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1033 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1034 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x.5, %1032, %1033), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1035 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1036 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.5, %1035), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1037 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1038 : Float(10200, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y.5, %1036, %1037), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1039 : Tensor[] = prim::ListConstruct(%1026, %1030, %1034, %1038), scope: __module.model.proposal_generator
                %1040 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1041 : Float(10200, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%1039, %1040), scope: __module.model.proposal_generator # export_model.py:40:0
                %1042 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1043 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1044 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1045 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1046 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1047 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1048 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %pred_boxes.5 : Float(10200, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%1041, %1042, %1043, %1044, %1045, %1046, %1047, %1048), scope: __module.model.proposal_generator # export_model.py:40:0
                %1050 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1051 : int = aten::size(%deltas.11, %1050), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1052 : Long(device=cpu) = prim::NumToTensor(%1051), scope: __module.model.proposal_generator
                %1053 : int = aten::Int(%1052), scope: __module.model.proposal_generator
                %1054 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1055 : int = aten::size(%deltas.11, %1054), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1056 : Long(device=cpu) = prim::NumToTensor(%1055), scope: __module.model.proposal_generator
                %1057 : int = aten::Int(%1056), scope: __module.model.proposal_generator
                %1058 : int[] = prim::ListConstruct(%1053, %1057), scope: __module.model.proposal_generator
                %proposals_i.5 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes.5, %1058), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1060 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1061 : int[] = prim::ListConstruct(%346, %1060, %831), scope: __module.model.proposal_generator
                %proposals_i.15 : Float(1, 10200, 4, strides=[40800, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%proposals_i.5, %1061), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1063 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %1064 : int = aten::size(%15, %1063), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %B.7 : Long(device=cpu) = prim::NumToTensor(%1064), scope: __module.model.proposal_generator
                %1066 : int = aten::Int(%B.7), scope: __module.model.proposal_generator
                %1067 : int = aten::Int(%B.7), scope: __module.model.proposal_generator
                %1068 : int = aten::Int(%B.7), scope: __module.model.proposal_generator
                %1069 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %1070 : int[] = prim::ListConstruct(%1069, %1068), scope: __module.model.proposal_generator
                %deltas.13 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_anchor_deltas_i.7, %1070), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %1072 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1073 : Float(1, 2550, 4, strides=[10200, 4, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%15, %1072), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1074 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1075 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1076 : int[] = prim::ListConstruct(%345, %1074, %1075), scope: __module.model.proposal_generator
                %1077 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1078 : Float(1, 2550, 4, strides=[10200, 4, 1], requires_grad=0, device=cuda:0) = aten::expand(%1073, %1076, %1077), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1079 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1080 : int[] = prim::ListConstruct(%1079, %1067), scope: __module.model.proposal_generator
                %boxes.13 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%1078, %1080), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1082 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1083 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1084 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1085 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %deltas.15 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%deltas.13, %1082, %1083, %1084, %1085), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1087 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1088 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1089 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1090 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %boxes.15 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.13, %1087, %1088, %1089, %1090), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1092 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1093 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1094 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1095 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1096 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1092, %1093, %1094, %1095), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1097 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1098 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1099 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1096, %1097, %1098), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1100 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1101 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1102 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1103 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1104 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1100, %1101, %1102, %1103), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1105 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1106 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1107 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1104, %1105, %1106), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1108 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths.7 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1099, %1107, %1108), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1110 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1111 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1112 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1113 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1114 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1110, %1111, %1112, %1113), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1115 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1116 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1117 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1114, %1115, %1116), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1118 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1119 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1120 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1121 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1122 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1118, %1119, %1120, %1121), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1123 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1124 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1125 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1122, %1123, %1124), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1126 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights.7 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1117, %1125, %1126), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1128 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1129 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1130 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1131 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1132 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1128, %1129, %1130, %1131), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1133 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1134 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1135 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1132, %1133, %1134), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1136 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1137 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths.7, %1136), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1138 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x.7 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%1135, %1137, %1138), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1140 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1141 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1142 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1143 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1144 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.15, %1140, %1141, %1142, %1143), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1145 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1146 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1147 : Float(2550, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1144, %1145, %1146), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1148 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1149 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights.7, %1148), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1150 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y.7 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%1147, %1149, %1150), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1152 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1153 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1154 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1155 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1156 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.15, %1152, %1153, %1154, %1155), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1157 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1158 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1159 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1160 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1161 : Float(2550, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1156, %1157, %1158, %1159, %1160), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1162 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1161, %1162), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1164 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1165 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1166 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1167 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1168 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.15, %1164, %1165, %1166, %1167), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1169 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1170 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1171 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1172 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1173 : Float(2550, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1168, %1169, %1170, %1171, %1172), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1174 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1173, %1174), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1176 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1177 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1178 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1179 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1180 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.15, %1176, %1177, %1178, %1179), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1181 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1182 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1183 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1184 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1185 : Float(2550, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1180, %1181, %1182, %1183, %1184), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1186 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.13 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1185, %1186), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1188 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1189 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1190 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1191 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1192 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.15, %1188, %1189, %1190, %1191), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1193 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1194 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1195 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1196 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1197 : Float(2550, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1192, %1193, %1194, %1195, %1196), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1198 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.13 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1197, %1198), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1200 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1201 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw.15 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.13, %1200, %1201), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %1203 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1204 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh.15 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.13, %1203, %1204), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %1206 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1207 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1208 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1209 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1210 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.7, %1206, %1207, %1208, %1209), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1211 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1212 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1210, %1211), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1213 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx.7, %1212), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1214 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1215 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1216 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1217 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1218 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x.7, %1214, %1215, %1216, %1217), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1219 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1220 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1218, %1219), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1221 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%1213, %1220, %1221), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1223 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1224 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1225 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1226 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1227 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.7, %1223, %1224, %1225, %1226), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1228 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1229 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1227, %1228), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1230 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy.7, %1229), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1231 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1232 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1233 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1234 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1235 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y.7, %1231, %1232, %1233, %1234), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1236 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1237 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1235, %1236), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1238 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%1230, %1237, %1238), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1240 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw.15), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1241 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1242 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1243 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1244 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1245 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.7, %1241, %1242, %1243, %1244), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1246 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1247 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1245, %1246), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1240, %1247), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1249 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh.15), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1250 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1251 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1252 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1253 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1254 : Float(2550, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.7, %1250, %1251, %1252, %1253), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1255 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1256 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1254, %1255), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h.7 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1249, %1256), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1258 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1259 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.7, %1258), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1260 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1261 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x.7, %1259, %1260), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1262 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1263 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.7, %1262), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1264 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1265 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y.7, %1263, %1264), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1266 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1267 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.7, %1266), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1268 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1269 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x.7, %1267, %1268), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1270 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1271 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.7, %1270), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1272 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1273 : Float(2550, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y.7, %1271, %1272), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1274 : Tensor[] = prim::ListConstruct(%1261, %1265, %1269, %1273), scope: __module.model.proposal_generator
                %1275 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1276 : Float(2550, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%1274, %1275), scope: __module.model.proposal_generator # export_model.py:40:0
                %1277 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1278 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1279 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1280 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1281 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1282 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1283 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %pred_boxes.7 : Float(2550, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%1276, %1277, %1278, %1279, %1280, %1281, %1282, %1283), scope: __module.model.proposal_generator # export_model.py:40:0
                %1285 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1286 : int = aten::size(%deltas.15, %1285), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1287 : Long(device=cpu) = prim::NumToTensor(%1286), scope: __module.model.proposal_generator
                %1288 : int = aten::Int(%1287), scope: __module.model.proposal_generator
                %1289 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1290 : int = aten::size(%deltas.15, %1289), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1291 : Long(device=cpu) = prim::NumToTensor(%1290), scope: __module.model.proposal_generator
                %1292 : int = aten::Int(%1291), scope: __module.model.proposal_generator
                %1293 : int[] = prim::ListConstruct(%1288, %1292), scope: __module.model.proposal_generator
                %proposals_i.7 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes.7, %1293), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1295 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1296 : int[] = prim::ListConstruct(%344, %1295, %1066), scope: __module.model.proposal_generator
                %proposals_i.17 : Float(1, 2550, 4, strides=[10200, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%proposals_i.7, %1296), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1298 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %1299 : int = aten::size(%16, %1298), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:526:0
                %B : Long(device=cpu) = prim::NumToTensor(%1299), scope: __module.model.proposal_generator
                %1301 : int = aten::Int(%B), scope: __module.model.proposal_generator
                %1302 : int = aten::Int(%B), scope: __module.model.proposal_generator
                %1303 : int = aten::Int(%B), scope: __module.model.proposal_generator
                %1304 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %1305 : int[] = prim::ListConstruct(%1304, %1303), scope: __module.model.proposal_generator
                %deltas.17 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_anchor_deltas_i, %1305), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:527:0
                %1307 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1308 : Float(1, 663, 4, strides=[2652, 4, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%16, %1307), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1309 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1310 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1311 : int[] = prim::ListConstruct(%343, %1309, %1310), scope: __module.model.proposal_generator
                %1312 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1313 : Float(1, 663, 4, strides=[2652, 4, 1], requires_grad=0, device=cuda:0) = aten::expand(%1308, %1311, %1312), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1314 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1315 : int[] = prim::ListConstruct(%1314, %1302), scope: __module.model.proposal_generator
                %boxes.17 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%1313, %1315), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:529:0
                %1317 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1318 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1319 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1320 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %deltas.19 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%deltas.17, %1317, %1318, %1319, %1320), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %1322 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1323 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1324 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1325 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %boxes.19 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.17, %1322, %1323, %1324, %1325), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %1327 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1328 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1329 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1330 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1331 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1327, %1328, %1329, %1330), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1332 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1333 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1334 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1331, %1332, %1333), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1335 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1336 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1337 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1338 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1339 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1335, %1336, %1337, %1338), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1340 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1341 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1342 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1339, %1340, %1341), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1343 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths.9 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1334, %1342, %1343), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %1345 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1346 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1347 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1348 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1349 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1345, %1346, %1347, %1348), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1350 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1351 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1352 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1349, %1350, %1351), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1353 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1354 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1355 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1356 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1357 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1353, %1354, %1355, %1356), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1358 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1359 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1360 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1357, %1358, %1359), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1361 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights.9 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1352, %1360, %1361), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %1363 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1364 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1365 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1366 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1367 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1363, %1364, %1365, %1366), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1368 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1369 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1370 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1367, %1368, %1369), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1371 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1372 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths.9, %1371), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1373 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x.9 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%1370, %1372, %1373), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %1375 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1376 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1377 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1378 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1379 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.19, %1375, %1376, %1377, %1378), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1380 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1381 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1382 : Float(663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1379, %1380, %1381), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1383 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1384 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights.9, %1383), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1385 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y.9 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%1382, %1384, %1385), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %1387 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1388 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1389 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1390 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1391 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.19, %1387, %1388, %1389, %1390), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1392 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1393 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1394 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1395 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1396 : Float(663, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1391, %1392, %1393, %1394, %1395), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1397 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1396, %1397), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %1399 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1400 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1401 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1402 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1403 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.19, %1399, %1400, %1401, %1402), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1404 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1405 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1406 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1407 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1408 : Float(663, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1403, %1404, %1405, %1406, %1407), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1409 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1408, %1409), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %1411 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1412 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1413 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1414 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1415 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.19, %1411, %1412, %1413, %1414), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1416 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1417 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1418 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1419 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1420 : Float(663, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1415, %1416, %1417, %1418, %1419), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1421 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.17 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1420, %1421), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %1423 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1424 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1425 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1426 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1427 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas.19, %1423, %1424, %1425, %1426), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1428 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1429 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1430 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1431 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1432 : Float(663, 1, strides=[4, 4], requires_grad=0, device=cuda:0) = aten::slice(%1427, %1428, %1429, %1430, %1431), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1433 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.17 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::div(%1432, %1433), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %1435 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1436 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw.19 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.17, %1435, %1436), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %1438 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1439 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh.19 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.17, %1438, %1439), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %1441 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1442 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1443 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1444 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1445 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.9, %1441, %1442, %1443, %1444), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1446 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1447 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1445, %1446), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1448 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx.9, %1447), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1449 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1450 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1451 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1452 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1453 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x.9, %1449, %1450, %1451, %1452), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1454 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1455 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1453, %1454), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1456 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%1448, %1455, %1456), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %1458 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1459 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1460 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1461 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1462 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.9, %1458, %1459, %1460, %1461), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1463 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1464 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1462, %1463), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1465 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy.9, %1464), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1466 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1467 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1468 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1469 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1470 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y.9, %1466, %1467, %1468, %1469), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1471 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1472 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1470, %1471), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1473 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%1465, %1472, %1473), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %1475 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw.19), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1476 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1477 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1478 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1479 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1480 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths.9, %1476, %1477, %1478, %1479), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1481 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1482 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1480, %1481), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1475, %1482), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %1484 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh.19), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1485 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1486 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1487 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1488 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1489 : Float(663, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights.9, %1485, %1486, %1487, %1488), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1490 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1491 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1489, %1490), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h.9 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%1484, %1491), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %1493 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1494 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.9, %1493), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1495 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1496 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x.9, %1494, %1495), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %1497 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1498 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.9, %1497), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1499 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1500 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y.9, %1498, %1499), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %1501 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1502 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w.9, %1501), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1503 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1504 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x.9, %1502, %1503), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %1505 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1506 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h.9, %1505), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1507 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1508 : Float(663, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y.9, %1506, %1507), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %1509 : Tensor[] = prim::ListConstruct(%1496, %1500, %1504, %1508), scope: __module.model.proposal_generator
                %1510 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1511 : Float(663, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%1509, %1510), scope: __module.model.proposal_generator # export_model.py:40:0
                %1512 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1513 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1514 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1515 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1516 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1517 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1518 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %pred_boxes.9 : Float(663, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%1511, %1512, %1513, %1514, %1515, %1516, %1517, %1518), scope: __module.model.proposal_generator # export_model.py:40:0
                %1520 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1521 : int = aten::size(%deltas.19, %1520), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1522 : Long(device=cpu) = prim::NumToTensor(%1521), scope: __module.model.proposal_generator
                %1523 : int = aten::Int(%1522), scope: __module.model.proposal_generator
                %1524 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1525 : int = aten::size(%deltas.19, %1524), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1526 : Long(device=cpu) = prim::NumToTensor(%1525), scope: __module.model.proposal_generator
                %1527 : int = aten::Int(%1526), scope: __module.model.proposal_generator
                %1528 : int[] = prim::ListConstruct(%1523, %1527), scope: __module.model.proposal_generator
                %proposals_i.9 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes.9, %1528), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %1530 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1531 : int[] = prim::ListConstruct(%342, %1530, %1301), scope: __module.model.proposal_generator
                %proposals_i : Float(1, 663, 4, strides=[2652, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%proposals_i.9, %1531), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/rpn.py:532:0
                %1533 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:71:0
                %1534 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1535 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:71:0
                %1536 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:71:0
                %1537 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:71:0
                %1538 : Long(1, strides=[1], requires_grad=0, device=cpu) = aten::arange(%1533, %1534, %1535, %1536, %1537), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:71:0
                %1539 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %batch_idx : Tensor = prim::CallFunction(%1539, %1538, %proposals_i.11), scope: __module.model.proposal_generator
                %1544 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %1545 : int = aten::size(%logits_i.1, %1544), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %Hi_Wi_A.1 : Long(device=cpu) = prim::NumToTensor(%1545), scope: __module.model.proposal_generator
                %1547 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1548 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %num_proposals_i.1 : Long(requires_grad=0, device=cpu) = aten::clamp(%Hi_Wi_A.1, %1547, %1548), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %1550 : int = aten::Int(%num_proposals_i.1), scope: __module.model.proposal_generator
                %1551 : int = aten::Int(%num_proposals_i.1), scope: __module.model.proposal_generator
                %1552 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1553 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1554 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1555 : Float(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0), %topk_idx.1 : Long(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0) = aten::topk(%logits_i.1, %1551, %1552, %1553, %1554), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1557 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1558 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1559 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1560 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1561 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%batch_idx, %1557, %1558, %1559, %1560), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1562 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1563 : Long(1, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1561, %1562), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1564 : Tensor?[] = prim::ListConstruct(%1563, %topk_idx.1), scope: __module.model.proposal_generator
                %1565 : Float(1, 1000, 4, strides=[4000, 4, 1], requires_grad=0, device=cuda:0) = aten::index(%proposals_i.11, %1564), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1566 : int[] = prim::ListConstruct(%1550), scope: __module.model.proposal_generator
                %1567 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1568 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1569 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1570 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1571 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1572 : Long(1000, strides=[1], requires_grad=0, device=cpu) = aten::full(%1566, %1567, %1568, %1569, %1570, %1571), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1573 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %1574 : Tensor = prim::CallFunction(%1573, %1572, %proposals_i.11), scope: __module.model.proposal_generator
                %1578 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %1579 : int = aten::size(%logits_i.3, %1578), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %Hi_Wi_A.3 : Long(device=cpu) = prim::NumToTensor(%1579), scope: __module.model.proposal_generator
                %1581 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1582 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %num_proposals_i.3 : Long(requires_grad=0, device=cpu) = aten::clamp(%Hi_Wi_A.3, %1581, %1582), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %1584 : int = aten::Int(%num_proposals_i.3), scope: __module.model.proposal_generator
                %1585 : int = aten::Int(%num_proposals_i.3), scope: __module.model.proposal_generator
                %1586 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1587 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1588 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1589 : Float(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0), %topk_idx.3 : Long(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0) = aten::topk(%logits_i.3, %1585, %1586, %1587, %1588), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1591 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1592 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1593 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1594 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1595 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%batch_idx, %1591, %1592, %1593, %1594), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1596 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1597 : Long(1, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1595, %1596), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1598 : Tensor?[] = prim::ListConstruct(%1597, %topk_idx.3), scope: __module.model.proposal_generator
                %1599 : Float(1, 1000, 4, strides=[4000, 4, 1], requires_grad=0, device=cuda:0) = aten::index(%proposals_i.13, %1598), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1600 : int[] = prim::ListConstruct(%1584), scope: __module.model.proposal_generator
                %1601 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1602 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1603 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1604 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1605 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1606 : Long(1000, strides=[1], requires_grad=0, device=cpu) = aten::full(%1600, %1601, %1602, %1603, %1604, %1605), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1607 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %1608 : Tensor = prim::CallFunction(%1607, %1606, %proposals_i.11), scope: __module.model.proposal_generator
                %1612 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %1613 : int = aten::size(%logits_i.5, %1612), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %Hi_Wi_A.5 : Long(device=cpu) = prim::NumToTensor(%1613), scope: __module.model.proposal_generator
                %1615 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1616 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %num_proposals_i.5 : Long(requires_grad=0, device=cpu) = aten::clamp(%Hi_Wi_A.5, %1615, %1616), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %1618 : int = aten::Int(%num_proposals_i.5), scope: __module.model.proposal_generator
                %1619 : int = aten::Int(%num_proposals_i.5), scope: __module.model.proposal_generator
                %1620 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1621 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1622 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1623 : Float(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0), %topk_idx.5 : Long(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0) = aten::topk(%logits_i.5, %1619, %1620, %1621, %1622), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1625 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1626 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1627 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1628 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1629 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%batch_idx, %1625, %1626, %1627, %1628), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1630 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1631 : Long(1, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1629, %1630), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1632 : Tensor?[] = prim::ListConstruct(%1631, %topk_idx.5), scope: __module.model.proposal_generator
                %1633 : Float(1, 1000, 4, strides=[4000, 4, 1], requires_grad=0, device=cuda:0) = aten::index(%proposals_i.15, %1632), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1634 : int[] = prim::ListConstruct(%1618), scope: __module.model.proposal_generator
                %1635 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1636 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1637 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1638 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1639 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1640 : Long(1000, strides=[1], requires_grad=0, device=cpu) = aten::full(%1634, %1635, %1636, %1637, %1638, %1639), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1641 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %1642 : Tensor = prim::CallFunction(%1641, %1640, %proposals_i.11), scope: __module.model.proposal_generator
                %1646 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %1647 : int = aten::size(%logits_i.7, %1646), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %Hi_Wi_A.7 : Long(device=cpu) = prim::NumToTensor(%1647), scope: __module.model.proposal_generator
                %1649 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1650 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %num_proposals_i.7 : Long(requires_grad=0, device=cpu) = aten::clamp(%Hi_Wi_A.7, %1649, %1650), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %1652 : int = aten::Int(%num_proposals_i.7), scope: __module.model.proposal_generator
                %1653 : int = aten::Int(%num_proposals_i.7), scope: __module.model.proposal_generator
                %1654 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1655 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1656 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1657 : Float(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0), %topk_idx.7 : Long(1, 1000, strides=[1000, 1], requires_grad=0, device=cuda:0) = aten::topk(%logits_i.7, %1653, %1654, %1655, %1656), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1659 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1660 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1661 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1662 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1663 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%batch_idx, %1659, %1660, %1661, %1662), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1664 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1665 : Long(1, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1663, %1664), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1666 : Tensor?[] = prim::ListConstruct(%1665, %topk_idx.7), scope: __module.model.proposal_generator
                %1667 : Float(1, 1000, 4, strides=[4000, 4, 1], requires_grad=0, device=cuda:0) = aten::index(%proposals_i.17, %1666), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1668 : int[] = prim::ListConstruct(%1652), scope: __module.model.proposal_generator
                %1669 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1670 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1671 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1672 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1673 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1674 : Long(1000, strides=[1], requires_grad=0, device=cpu) = aten::full(%1668, %1669, %1670, %1671, %1672, %1673), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1675 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %1676 : Tensor = prim::CallFunction(%1675, %1674, %proposals_i.11), scope: __module.model.proposal_generator
                %1680 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %1681 : int = aten::size(%logits_i, %1680), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:73:0
                %Hi_Wi_A : Long(device=cpu) = prim::NumToTensor(%1681), scope: __module.model.proposal_generator
                %1683 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1684 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %num_proposals_i : Long(requires_grad=0, device=cpu) = aten::clamp(%Hi_Wi_A, %1683, %1684), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:75:0
                %1686 : int = aten::Int(%num_proposals_i), scope: __module.model.proposal_generator
                %1687 : int = aten::Int(%num_proposals_i), scope: __module.model.proposal_generator
                %1688 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1689 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1690 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1691 : Float(1, 663, strides=[663, 1], requires_grad=0, device=cuda:0), %topk_idx : Long(1, 663, strides=[663, 1], requires_grad=0, device=cuda:0) = aten::topk(%logits_i, %1687, %1688, %1689, %1690), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:79:0
                %1693 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1694 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1695 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1696 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1697 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%batch_idx, %1693, %1694, %1695, %1696), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1698 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1699 : Long(1, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%1697, %1698), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1700 : Tensor?[] = prim::ListConstruct(%1699, %topk_idx), scope: __module.model.proposal_generator
                %1701 : Float(1, 663, 4, strides=[2652, 4, 1], requires_grad=0, device=cuda:0) = aten::index(%proposals_i, %1700), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:82:0
                %1702 : int[] = prim::ListConstruct(%1686), scope: __module.model.proposal_generator
                %1703 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1704 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1705 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1706 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1707 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1708 : Long(663, strides=[1], requires_grad=0, device=cpu) = aten::full(%1702, %1703, %1704, %1705, %1706, %1707), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:88:0
                %1709 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator
                %1710 : Tensor = prim::CallFunction(%1709, %1708, %proposals_i.11), scope: __module.model.proposal_generator
                %1711 : Tensor[] = prim::ListConstruct(%1555, %1589, %1623, %1657, %1691), scope: __module.model.proposal_generator
                %1712 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %topk_scores : Float(1, 4663, strides=[4663, 1], requires_grad=0, device=cuda:0) = aten::cat(%1711, %1712), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %1714 : Tensor[] = prim::ListConstruct(%1565, %1599, %1633, %1667, %1701), scope: __module.model.proposal_generator
                %1715 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %topk_proposals : Float(1, 4663, 4, strides=[18652, 4, 1], requires_grad=0, device=cuda:0) = aten::cat(%1714, %1715), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %1717 : Tensor[] = prim::ListConstruct(%1574, %1608, %1642, %1676, %1710), scope: __module.model.proposal_generator
                %1718 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %level_ids : Long(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::cat(%1717, %1718), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:46:0
                %1720 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:101:0
                %1721 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:101:0
                %tensor.21 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::select(%topk_proposals, %1720, %1721), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:101:0
                %1723 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1724 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1725 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1726 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %tensor.23 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.21, %1723, %1724, %1725, %1726), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1733 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:102:0
                %1734 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:102:0
                %scores_per_img.1 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::select(%topk_scores, %1733, %1734), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:102:0
                %1745 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:704:0
                %1746 : Tensor[] = aten::unbind(%image_size, %1745), scope: __module.model.proposal_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:704:0
                %h.1 : Long(requires_grad=0, device=cuda:0), %w.1 : Long(requires_grad=0, device=cuda:0) = prim::ListUnpack(%1746), scope: __module.model.proposal_generator
                %1750 : Scalar = aten::ScalarImplicit(%h.1), scope: __module.model.proposal_generator
                %1751 : Scalar = aten::ScalarImplicit(%w.1), scope: __module.model.proposal_generator
                %1752 : Scalar = aten::ScalarImplicit(%h.1), scope: __module.model.proposal_generator
                %1753 : Scalar = aten::ScalarImplicit(%w.1), scope: __module.model.proposal_generator
                %1754 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1755 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1756 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1757 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1758 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.23, %1754, %1755, %1756, %1757), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1759 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1760 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1761 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1758, %1759, %1760), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1762 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1763 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%1761, %1762, %1753), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %1764 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1765 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1766 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1767 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1768 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.23, %1764, %1765, %1766, %1767), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1769 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1770 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1771 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1768, %1769, %1770), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1772 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1773 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%1771, %1772, %1752), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %1774 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1775 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1776 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1777 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1778 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.23, %1774, %1775, %1776, %1777), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1779 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1780 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1781 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1778, %1779, %1780), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1782 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1783 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%1781, %1782, %1751), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %1784 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1785 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1786 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1787 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1788 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.23, %1784, %1785, %1786, %1787), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1789 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1790 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1791 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1788, %1789, %1790), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1792 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1793 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%1791, %1792, %1750), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %1794 : Tensor[] = prim::ListConstruct(%1763, %1773, %1783, %1793), scope: __module.model.proposal_generator
                %1795 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1796 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%1794, %1795), scope: __module.model.proposal_generator # export_model.py:40:0
                %1797 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1798 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1799 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1800 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1801 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1802 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # export_model.py:40:0
                %1803 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %box : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%1796, %1797, %1798, %1799, %1800, %1801, %1802, %1803), scope: __module.model.proposal_generator # export_model.py:40:0
                %1805 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1806 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1807 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1808 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1809 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%box, %1805, %1806, %1807, %1808), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1810 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1811 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1812 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1809, %1810, %1811), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1813 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1814 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1815 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1816 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1817 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%box, %1813, %1814, %1815, %1816), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1818 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1819 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1820 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1817, %1818, %1819), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1821 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %widths.11 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1812, %1820, %1821), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:210:0
                %1823 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1824 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1825 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1826 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1827 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%box, %1823, %1824, %1825, %1826), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1828 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1829 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1830 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1827, %1828, %1829), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1831 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1832 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1833 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1834 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1835 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%box, %1831, %1832, %1833, %1834), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1836 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1837 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1838 : Float(4663, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%1835, %1836, %1837), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1839 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %heights.11 : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%1830, %1838, %1839), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:211:0
                %1841 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:212:0
                %1842 : Bool(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::gt(%widths.11, %1841), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:212:0
                %1843 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:212:0
                %1844 : Bool(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::gt(%heights.11, %1843), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:212:0
                %item.1 : Bool(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::__and__(%1842, %1844), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:212:0
                %1846 : Tensor?[] = prim::ListConstruct(%item.1), scope: __module.model.proposal_generator
                %tensor.25 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::index(%box, %1846), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:235:0
                %1848 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1849 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1850 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1851 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %tensor.27 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.25, %1848, %1849, %1850, %1851), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1858 : Tensor?[] = prim::ListConstruct(%item.1), scope: __module.model.proposal_generator
                %scores_per_img : Float(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::index(%scores_per_img.1, %1858), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:119:0
                %1860 : Tensor?[] = prim::ListConstruct(%item.1), scope: __module.model.proposal_generator
                %1861 : Long(4663, strides=[1], requires_grad=0, device=cuda:0) = aten::index(%level_ids, %1860), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:119:0
                %1870 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %1871 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %1872 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %1873 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %1874 : Float(4663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.27, %1870, %1871, %1872, %1873), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %1875 : float = prim::Constant[value=0.69999999999999996](), scope: __module.model.proposal_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                %1876 : Function = prim::Constant[name="_batched_nms_coordinate_trick"](), scope: __module.model.proposal_generator
                %keep.1 : Tensor = prim::CallFunction(%1876, %1874, %scores_per_img, %1861, %1875), scope: __module.model.proposal_generator
                %1878 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:129:0
                %1879 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:129:0
                %1880 : int = prim::Constant[value=1000](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:129:0
                %1881 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:129:0
                %item : Long(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%keep.1, %1878, %1879, %1880, %1881), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py:129:0
                %1883 : Tensor?[] = prim::ListConstruct(%item), scope: __module.model.proposal_generator
                %tensor.29 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::index(%1874, %1883), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:235:0
                %1885 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1886 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1887 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %1888 : NoneType = prim::Constant(), scope: __module.model.proposal_generator
                %tensor.31 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.29, %1885, %1886, %1887, %1888), scope: __module.model.proposal_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                return (%tensor.31)
          
            }
          }
          submodules {
            module __torch__.detectron2.modeling.proposal_generator.rpn.StandardRPNHead {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                conv = <__torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d object at 0x5619079d5ee0>
                objectness_logits = <__torch__.torch.nn.modules.conv.Conv2d object at 0x5619079d6080>
                anchor_deltas = <__torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d object at 0x5619079d6100>
              }
              methods {
                method forward {
                  graph(%self.283 : __torch__.detectron2.modeling.proposal_generator.rpn.StandardRPNHead,
                        %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                        %2 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                        %3 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                        %4 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                        %5 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                    %anchor_deltas : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d = prim::GetAttr[name="anchor_deltas"](%self.283)
                    %objectness_logits : __torch__.torch.nn.modules.conv.Conv2d = prim::GetAttr[name="objectness_logits"](%self.283)
                    %conv : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d = prim::GetAttr[name="conv"](%self.283)
                    %25 : Tensor = prim::CallMethod[name="forward"](%conv, %1)
                    %26 : Tensor = prim::CallMethod[name="forward"](%objectness_logits, %25)
                    %27 : Tensor = prim::CallMethod[name="forward"](%anchor_deltas, %25)
                    %28 : Tensor = prim::CallMethod[name="forward1"](%conv, %2)
                    %29 : Tensor = prim::CallMethod[name="forward1"](%objectness_logits, %28)
                    %30 : Tensor = prim::CallMethod[name="forward1"](%anchor_deltas, %28)
                    %31 : Tensor = prim::CallMethod[name="forward2"](%conv, %3)
                    %32 : Tensor = prim::CallMethod[name="forward2"](%objectness_logits, %31)
                    %33 : Tensor = prim::CallMethod[name="forward2"](%anchor_deltas, %31)
                    %34 : Tensor = prim::CallMethod[name="forward3"](%conv, %4)
                    %35 : Tensor = prim::CallMethod[name="forward3"](%objectness_logits, %34)
                    %36 : Tensor = prim::CallMethod[name="forward3"](%anchor_deltas, %34)
                    %37 : Tensor = prim::CallMethod[name="forward4"](%conv, %5)
                    %38 : Tensor = prim::CallMethod[name="forward4"](%objectness_logits, %37)
                    %39 : Tensor = prim::CallMethod[name="forward4"](%anchor_deltas, %37)
                    %24 : (Float(1, 3, 272, 200, strides=[163200, 54400, 200, 1], requires_grad=0, device=cuda:0), Float(1, 3, 136, 100, strides=[40800, 13600, 100, 1], requires_grad=0, device=cuda:0), Float(1, 3, 68, 50, strides=[10200, 3400, 50, 1], requires_grad=0, device=cuda:0), Float(1, 3, 34, 25, strides=[2550, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 3, 17, 13, strides=[663, 221, 13, 1], requires_grad=0, device=cuda:0), Float(1, 12, 272, 200, strides=[652800, 54400, 200, 1], requires_grad=0, device=cuda:0), Float(1, 12, 136, 100, strides=[163200, 13600, 100, 1], requires_grad=0, device=cuda:0), Float(1, 12, 68, 50, strides=[40800, 3400, 50, 1], requires_grad=0, device=cuda:0), Float(1, 12, 34, 25, strides=[10200, 850, 25, 1], requires_grad=0, device=cuda:0), Float(1, 12, 17, 13, strides=[2652, 221, 13, 1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%26, %29, %32, %35, %38, %27, %30, %33, %36, %39)
                    return (%24)
              
                }
              }
              submodules {
                module __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                    activation = <__torch__.torch.nn.modules.activation.ReLU object at 0x5619079d4730>
                  }
                  methods {
                    method forward {
                      graph(%self.285 : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d,
                            %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                        %activation.1 : __torch__.torch.nn.modules.activation.ReLU = prim::GetAttr[name="activation"](%self.285)
                        %bias.233 : Tensor = prim::GetAttr[name="bias"](%self.285)
                        %weight.339 : Tensor = prim::GetAttr[name="weight"](%self.285)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %8 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %18 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.111 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.339, %bias.233, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward"](%activation.1, %input.111)
                        return (%25)
                  
                    }
                    method forward1 {
                      graph(%self.293 : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d,
                            %1 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                        %activation.3 : __torch__.torch.nn.modules.activation.ReLU = prim::GetAttr[name="activation"](%self.293)
                        %bias.239 : Tensor = prim::GetAttr[name="bias"](%self.293)
                        %weight.345 : Tensor = prim::GetAttr[name="weight"](%self.293)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %8 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %18 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.115 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.345, %bias.239, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward1"](%activation.3, %input.115)
                        return (%25)
                  
                    }
                    method forward2 {
                      graph(%self.301 : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d,
                            %1 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                        %activation.5 : __torch__.torch.nn.modules.activation.ReLU = prim::GetAttr[name="activation"](%self.301)
                        %bias.245 : Tensor = prim::GetAttr[name="bias"](%self.301)
                        %weight.351 : Tensor = prim::GetAttr[name="weight"](%self.301)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %8 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %18 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.119 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.351, %bias.245, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward2"](%activation.5, %input.119)
                        return (%25)
                  
                    }
                    method forward3 {
                      graph(%self.309 : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d,
                            %1 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                        %activation.7 : __torch__.torch.nn.modules.activation.ReLU = prim::GetAttr[name="activation"](%self.309)
                        %bias.251 : Tensor = prim::GetAttr[name="bias"](%self.309)
                        %weight.357 : Tensor = prim::GetAttr[name="weight"](%self.309)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %8 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %18 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.123 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.357, %bias.251, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward3"](%activation.7, %input.123)
                        return (%25)
                  
                    }
                    method forward4 {
                      graph(%self.317 : __torch__.detectron2.layers.wrappers.___torch_mangle_130.Conv2d,
                            %1 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                        %activation.9 : __torch__.torch.nn.modules.activation.ReLU = prim::GetAttr[name="activation"](%self.317)
                        %bias.257 : Tensor = prim::GetAttr[name="bias"](%self.317)
                        %weight.363 : Tensor = prim::GetAttr[name="weight"](%self.317)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %8 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv
                        %18 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.127 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.363, %bias.257, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward4"](%activation.9, %input.127)
                        return (%25)
                  
                    }
                  }
                  submodules {
                    module __torch__.torch.nn.modules.activation.ReLU {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.287 : __torch__.torch.nn.modules.activation.ReLU,
                                %input.111 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %input.113 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.111), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv/__module.model.proposal_generator.rpn_head.conv.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.113)
                      
                        }
                        method forward1 {
                          graph(%self.295 : __torch__.torch.nn.modules.activation.ReLU,
                                %input.115 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %input.117 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.115), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv/__module.model.proposal_generator.rpn_head.conv.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.117)
                      
                        }
                        method forward2 {
                          graph(%self.303 : __torch__.torch.nn.modules.activation.ReLU,
                                %input.119 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %input.121 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.119), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv/__module.model.proposal_generator.rpn_head.conv.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.121)
                      
                        }
                        method forward3 {
                          graph(%self.311 : __torch__.torch.nn.modules.activation.ReLU,
                                %input.123 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                            %input.125 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.123), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv/__module.model.proposal_generator.rpn_head.conv.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.125)
                      
                        }
                        method forward4 {
                          graph(%self.319 : __torch__.torch.nn.modules.activation.ReLU,
                                %input.127 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                            %input.129 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.127), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.conv/__module.model.proposal_generator.rpn_head.conv.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.129)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.conv.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.289 : __torch__.torch.nn.modules.conv.Conv2d,
                            %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                        %bias.235 : Tensor = prim::GetAttr[name="bias"](%self.289)
                        %weight.341 : Tensor = prim::GetAttr[name="weight"](%self.289)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %score.1 : Float(1, 3, 272, 200, strides=[163200, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.341, %bias.235, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%score.1)
                  
                    }
                    method forward1 {
                      graph(%self.297 : __torch__.torch.nn.modules.conv.Conv2d,
                            %1 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                        %bias.241 : Tensor = prim::GetAttr[name="bias"](%self.297)
                        %weight.347 : Tensor = prim::GetAttr[name="weight"](%self.297)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %score.3 : Float(1, 3, 136, 100, strides=[40800, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.347, %bias.241, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%score.3)
                  
                    }
                    method forward2 {
                      graph(%self.305 : __torch__.torch.nn.modules.conv.Conv2d,
                            %1 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                        %bias.247 : Tensor = prim::GetAttr[name="bias"](%self.305)
                        %weight.353 : Tensor = prim::GetAttr[name="weight"](%self.305)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %score.5 : Float(1, 3, 68, 50, strides=[10200, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.353, %bias.247, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%score.5)
                  
                    }
                    method forward3 {
                      graph(%self.313 : __torch__.torch.nn.modules.conv.Conv2d,
                            %1 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                        %bias.253 : Tensor = prim::GetAttr[name="bias"](%self.313)
                        %weight.359 : Tensor = prim::GetAttr[name="weight"](%self.313)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %score.7 : Float(1, 3, 34, 25, strides=[2550, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.359, %bias.253, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%score.7)
                  
                    }
                    method forward4 {
                      graph(%self.321 : __torch__.torch.nn.modules.conv.Conv2d,
                            %1 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                        %bias.259 : Tensor = prim::GetAttr[name="bias"](%self.321)
                        %weight.365 : Tensor = prim::GetAttr[name="weight"](%self.321)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %score : Float(1, 3, 17, 13, strides=[663, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.365, %bias.259, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.objectness_logits # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%score)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.291 : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d,
                            %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                        %bias.237 : Tensor = prim::GetAttr[name="bias"](%self.291)
                        %weight.343 : Tensor = prim::GetAttr[name="weight"](%self.291)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %x.113 : Float(1, 12, 272, 200, strides=[652800, 54400, 200, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.343, %bias.237, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%x.113)
                  
                    }
                    method forward1 {
                      graph(%self.299 : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d,
                            %1 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                        %bias.243 : Tensor = prim::GetAttr[name="bias"](%self.299)
                        %weight.349 : Tensor = prim::GetAttr[name="weight"](%self.299)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %x.115 : Float(1, 12, 136, 100, strides=[163200, 13600, 100, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.349, %bias.243, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%x.115)
                  
                    }
                    method forward2 {
                      graph(%self.307 : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d,
                            %1 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                        %bias.249 : Tensor = prim::GetAttr[name="bias"](%self.307)
                        %weight.355 : Tensor = prim::GetAttr[name="weight"](%self.307)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %x.117 : Float(1, 12, 68, 50, strides=[40800, 3400, 50, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.355, %bias.249, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%x.117)
                  
                    }
                    method forward3 {
                      graph(%self.315 : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d,
                            %1 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                        %bias.255 : Tensor = prim::GetAttr[name="bias"](%self.315)
                        %weight.361 : Tensor = prim::GetAttr[name="weight"](%self.315)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %x.119 : Float(1, 12, 34, 25, strides=[10200, 850, 25, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.361, %bias.255, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%x.119)
                  
                    }
                    method forward4 {
                      graph(%self.323 : __torch__.torch.nn.modules.conv.___torch_mangle_131.Conv2d,
                            %1 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                        %bias.261 : Tensor = prim::GetAttr[name="bias"](%self.323)
                        %weight.367 : Tensor = prim::GetAttr[name="weight"](%self.323)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %7 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %10 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas
                        %17 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        %x.121 : Float(1, 12, 17, 13, strides=[2652, 221, 13, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.367, %bias.261, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.proposal_generator/__module.model.proposal_generator.rpn_head/__module.model.proposal_generator.rpn_head.anchor_deltas # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:443:0
                        return (%x.121)
                  
                    }
                  }
                  submodules {
                  }
                }
              }
            }
            module __torch__.detectron2.modeling.anchor_generator.DefaultAnchorGenerator {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                cell_anchors = <__torch__.detectron2.modeling.anchor_generator.BufferList object at 0x5619079d8c90>
              }
              methods {
                method forward {
                  graph(%self.281 : __torch__.detectron2.modeling.anchor_generator.DefaultAnchorGenerator,
                        %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                        %2 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                        %3 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                        %4 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                        %5 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                        %6 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                        %7 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                        %8 : Float(1, 256, 17, 13, strides=[56576, 221, 13, 1], requires_grad=0, device=cuda:0)):
                    %cell_anchors : __torch__.detectron2.modeling.anchor_generator.BufferList = prim::GetAttr[name="cell_anchors"](%self.281)
                    %_4 : Tensor = prim::GetAttr[name="4"](%cell_anchors)
                    %cell_anchors.7 : __torch__.detectron2.modeling.anchor_generator.BufferList = prim::GetAttr[name="cell_anchors"](%self.281)
                    %_3.5 : Tensor = prim::GetAttr[name="3"](%cell_anchors.7)
                    %cell_anchors.5 : __torch__.detectron2.modeling.anchor_generator.BufferList = prim::GetAttr[name="cell_anchors"](%self.281)
                    %_2.9 : Tensor = prim::GetAttr[name="2"](%cell_anchors.5)
                    %cell_anchors.3 : __torch__.detectron2.modeling.anchor_generator.BufferList = prim::GetAttr[name="cell_anchors"](%self.281)
                    %_1.9 : Tensor = prim::GetAttr[name="1"](%cell_anchors.3)
                    %cell_anchors.1 : __torch__.detectron2.modeling.anchor_generator.BufferList = prim::GetAttr[name="cell_anchors"](%self.281)
                    %_0.9 : Tensor = prim::GetAttr[name="0"](%cell_anchors.1)
                    %25 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %26 : int = aten::size(%1, %25), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_height.1 : Long(device=cpu) = prim::NumToTensor(%26), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %28 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %29 : int = aten::size(%1, %28), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_width.1 : Long(device=cpu) = prim::NumToTensor(%29), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %37 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %38 : int = aten::size(%2, %37), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_height.3 : Long(device=cpu) = prim::NumToTensor(%38), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %40 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %41 : int = aten::size(%2, %40), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_width.3 : Long(device=cpu) = prim::NumToTensor(%41), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %49 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %50 : int = aten::size(%3, %49), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_height.5 : Long(device=cpu) = prim::NumToTensor(%50), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %52 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %53 : int = aten::size(%3, %52), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_width.5 : Long(device=cpu) = prim::NumToTensor(%53), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %61 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %62 : int = aten::size(%6, %61), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_height.7 : Long(device=cpu) = prim::NumToTensor(%62), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %64 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %65 : int = aten::size(%7, %64), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_width.7 : Long(device=cpu) = prim::NumToTensor(%65), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %73 : int = prim::Constant[value=2](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %74 : int = aten::size(%8, %73), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_height : Long(device=cpu) = prim::NumToTensor(%74), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %76 : int = prim::Constant[value=3](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %77 : int = aten::size(%8, %76), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:229:0
                    %grid_width : Long(device=cpu) = prim::NumToTensor(%77), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %79 : Long(requires_grad=0, device=cpu) = prim::Constant[value={4}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %80 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_width.1, %79), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %81 : Scalar = aten::ScalarImplicit(%80), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %82 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %83 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %84 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %85 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %86 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %87 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %88 : Float(200, strides=[1], requires_grad=0, device=cpu) = aten::arange(%82, %81, %83, %84, %85, %86, %87), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %89 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %90 : Tensor = prim::CallFunction(%89, %88, %_0.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %91 : Long(requires_grad=0, device=cpu) = prim::Constant[value={4}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %92 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_height.1, %91), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %93 : Scalar = aten::ScalarImplicit(%92), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %94 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %95 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %96 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %97 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %98 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %99 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %100 : Float(272, strides=[1], requires_grad=0, device=cpu) = aten::arange(%94, %93, %95, %96, %97, %98, %99), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %101 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %102 : Tensor = prim::CallFunction(%101, %100, %_0.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %103 : Tensor[] = prim::ListConstruct(%102, %90), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %104 : Tensor[] = aten::meshgrid(%103), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/functional.py:568:0
                    %shift_y.1 : Float(272, 200, strides=[1, 0], requires_grad=0, device=cuda:0), %shift_x.1 : Float(272, 200, strides=[0, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%104), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %107 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %108 : int[] = prim::ListConstruct(%107), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %109 : Float(54400, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_x.1, %108), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %110 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %111 : int[] = prim::ListConstruct(%110), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %112 : Float(54400, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_y.1, %111), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %113 : Tensor[] = prim::ListConstruct(%109, %112, %109, %112), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %114 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %115 : Float(54400, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%113, %114), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %116 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %117 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %118 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %119 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %120 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %121 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %122 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %shifts.1 : Float(54400, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%115, %116, %117, %118, %119, %120, %121, %122), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %124 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %125 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %126 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %127 : int[] = prim::ListConstruct(%124, %125, %126), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %128 : Float(54400, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%shifts.1, %127), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %129 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %130 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %131 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %132 : int[] = prim::ListConstruct(%129, %130, %131), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %133 : Float(1, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%_0.9, %132), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %134 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %135 : Float(54400, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::add(%128, %133, %134), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %136 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %137 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %138 : int[] = prim::ListConstruct(%136, %137), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.1 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%135, %138), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %140 : Long(requires_grad=0, device=cpu) = prim::Constant[value={8}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %141 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_width.3, %140), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %142 : Scalar = aten::ScalarImplicit(%141), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %143 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %144 : int = prim::Constant[value=8](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %145 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %146 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %147 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %148 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %149 : Float(100, strides=[1], requires_grad=0, device=cpu) = aten::arange(%143, %142, %144, %145, %146, %147, %148), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %150 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %151 : Tensor = prim::CallFunction(%150, %149, %_1.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %152 : Long(requires_grad=0, device=cpu) = prim::Constant[value={8}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %153 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_height.3, %152), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %154 : Scalar = aten::ScalarImplicit(%153), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %155 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %156 : int = prim::Constant[value=8](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %157 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %158 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %159 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %160 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %161 : Float(136, strides=[1], requires_grad=0, device=cpu) = aten::arange(%155, %154, %156, %157, %158, %159, %160), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %162 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %163 : Tensor = prim::CallFunction(%162, %161, %_1.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %164 : Tensor[] = prim::ListConstruct(%163, %151), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %165 : Tensor[] = aten::meshgrid(%164), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/functional.py:568:0
                    %shift_y.3 : Float(136, 100, strides=[1, 0], requires_grad=0, device=cuda:0), %shift_x.3 : Float(136, 100, strides=[0, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%165), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %168 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %169 : int[] = prim::ListConstruct(%168), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %170 : Float(13600, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_x.3, %169), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %171 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %172 : int[] = prim::ListConstruct(%171), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %173 : Float(13600, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_y.3, %172), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %174 : Tensor[] = prim::ListConstruct(%170, %173, %170, %173), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %175 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %176 : Float(13600, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%174, %175), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %177 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %178 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %179 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %180 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %181 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %182 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %183 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %shifts.3 : Float(13600, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%176, %177, %178, %179, %180, %181, %182, %183), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %185 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %186 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %187 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %188 : int[] = prim::ListConstruct(%185, %186, %187), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %189 : Float(13600, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%shifts.3, %188), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %190 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %191 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %192 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %193 : int[] = prim::ListConstruct(%190, %191, %192), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %194 : Float(1, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%_1.9, %193), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %195 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %196 : Float(13600, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::add(%189, %194, %195), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %197 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %198 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %199 : int[] = prim::ListConstruct(%197, %198), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.5 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%196, %199), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %201 : Long(requires_grad=0, device=cpu) = prim::Constant[value={16}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %202 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_width.5, %201), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %203 : Scalar = aten::ScalarImplicit(%202), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %204 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %205 : int = prim::Constant[value=16](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %206 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %207 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %208 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %209 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %210 : Float(50, strides=[1], requires_grad=0, device=cpu) = aten::arange(%204, %203, %205, %206, %207, %208, %209), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %211 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %212 : Tensor = prim::CallFunction(%211, %210, %_2.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %213 : Long(requires_grad=0, device=cpu) = prim::Constant[value={16}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %214 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_height.5, %213), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %215 : Scalar = aten::ScalarImplicit(%214), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %216 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %217 : int = prim::Constant[value=16](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %218 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %219 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %220 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %221 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %222 : Float(68, strides=[1], requires_grad=0, device=cpu) = aten::arange(%216, %215, %217, %218, %219, %220, %221), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %223 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %224 : Tensor = prim::CallFunction(%223, %222, %_2.9), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %225 : Tensor[] = prim::ListConstruct(%224, %212), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %226 : Tensor[] = aten::meshgrid(%225), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/functional.py:568:0
                    %shift_y.5 : Float(68, 50, strides=[1, 0], requires_grad=0, device=cuda:0), %shift_x.5 : Float(68, 50, strides=[0, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%226), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %229 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %230 : int[] = prim::ListConstruct(%229), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %231 : Float(3400, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_x.5, %230), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %232 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %233 : int[] = prim::ListConstruct(%232), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %234 : Float(3400, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_y.5, %233), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %235 : Tensor[] = prim::ListConstruct(%231, %234, %231, %234), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %236 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %237 : Float(3400, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%235, %236), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %238 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %239 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %240 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %241 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %242 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %243 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %244 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %shifts.5 : Float(3400, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%237, %238, %239, %240, %241, %242, %243, %244), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %246 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %247 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %248 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %249 : int[] = prim::ListConstruct(%246, %247, %248), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %250 : Float(3400, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%shifts.5, %249), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %251 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %252 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %253 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %254 : int[] = prim::ListConstruct(%251, %252, %253), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %255 : Float(1, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%_2.9, %254), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %256 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %257 : Float(3400, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::add(%250, %255, %256), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %258 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %259 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %260 : int[] = prim::ListConstruct(%258, %259), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.9 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%257, %260), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %262 : Long(requires_grad=0, device=cpu) = prim::Constant[value={32}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %263 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_width.7, %262), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %264 : Scalar = aten::ScalarImplicit(%263), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %265 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %266 : int = prim::Constant[value=32](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %267 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %268 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %269 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %270 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %271 : Float(25, strides=[1], requires_grad=0, device=cpu) = aten::arange(%265, %264, %266, %267, %268, %269, %270), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %272 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %273 : Tensor = prim::CallFunction(%272, %271, %_3.5), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %274 : Long(requires_grad=0, device=cpu) = prim::Constant[value={32}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %275 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_height.7, %274), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %276 : Scalar = aten::ScalarImplicit(%275), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %277 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %278 : int = prim::Constant[value=32](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %279 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %280 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %281 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %282 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %283 : Float(34, strides=[1], requires_grad=0, device=cpu) = aten::arange(%277, %276, %278, %279, %280, %281, %282), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %284 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %285 : Tensor = prim::CallFunction(%284, %283, %_3.5), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %286 : Tensor[] = prim::ListConstruct(%285, %273), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %287 : Tensor[] = aten::meshgrid(%286), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/functional.py:568:0
                    %shift_y.7 : Float(34, 25, strides=[1, 0], requires_grad=0, device=cuda:0), %shift_x.7 : Float(34, 25, strides=[0, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%287), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %290 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %291 : int[] = prim::ListConstruct(%290), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %292 : Float(850, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_x.7, %291), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %293 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %294 : int[] = prim::ListConstruct(%293), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %295 : Float(850, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_y.7, %294), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %296 : Tensor[] = prim::ListConstruct(%292, %295, %292, %295), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %297 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %298 : Float(850, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%296, %297), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %299 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %300 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %301 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %302 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %303 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %304 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %305 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %shifts.7 : Float(850, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%298, %299, %300, %301, %302, %303, %304, %305), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %307 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %308 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %309 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %310 : int[] = prim::ListConstruct(%307, %308, %309), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %311 : Float(850, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%shifts.7, %310), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %312 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %313 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %314 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %315 : int[] = prim::ListConstruct(%312, %313, %314), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %316 : Float(1, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%_3.5, %315), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %317 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %318 : Float(850, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::add(%311, %316, %317), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %319 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %320 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %321 : int[] = prim::ListConstruct(%319, %320), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.13 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%318, %321), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %323 : Long(requires_grad=0, device=cpu) = prim::Constant[value={64}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %324 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_width, %323), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %325 : Scalar = aten::ScalarImplicit(%324), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %326 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %327 : int = prim::Constant[value=64](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %328 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %329 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %330 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %331 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %332 : Float(13, strides=[1], requires_grad=0, device=cpu) = aten::arange(%326, %325, %327, %328, %329, %330, %331), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:44:0
                    %333 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %334 : Tensor = prim::CallFunction(%333, %332, %_4), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %335 : Long(requires_grad=0, device=cpu) = prim::Constant[value={64}](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %336 : Long(requires_grad=0, device=cpu) = aten::mul(%grid_height, %335), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %337 : Scalar = aten::ScalarImplicit(%336), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %338 : float = prim::Constant[value=0.](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %339 : int = prim::Constant[value=64](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %340 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %341 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %342 : Device = prim::Constant[value="cpu"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %343 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %344 : Float(17, strides=[1], requires_grad=0, device=cpu) = aten::arange(%338, %337, %339, %340, %341, %342, %343), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:48:0
                    %345 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %346 : Tensor = prim::CallFunction(%345, %344, %_4), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %347 : Tensor[] = prim::ListConstruct(%346, %334), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %348 : Tensor[] = aten::meshgrid(%347), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/functional.py:568:0
                    %shift_y : Float(17, 13, strides=[1, 0], requires_grad=0, device=cuda:0), %shift_x : Float(17, 13, strides=[0, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%348), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %351 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %352 : int[] = prim::ListConstruct(%351), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %353 : Float(221, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_x, %352), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:53:0
                    %354 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %355 : int[] = prim::ListConstruct(%354), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %356 : Float(221, strides=[1], requires_grad=0, device=cuda:0) = aten::reshape(%shift_y, %355), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:54:0
                    %357 : Tensor[] = prim::ListConstruct(%353, %356, %353, %356), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %358 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %359 : Float(221, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%357, %358), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %360 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %361 : int = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %362 : Device = prim::Constant[value="cuda"](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %363 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %364 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %365 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %366 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %shifts : Float(221, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%359, %360, %361, %362, %363, %364, %365, %366), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # export_model.py:40:0
                    %368 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %369 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %370 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %371 : int[] = prim::ListConstruct(%368, %369, %370), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %372 : Float(221, 1, 4, strides=[4, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%shifts, %371), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %373 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %374 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %375 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %376 : int[] = prim::ListConstruct(%373, %374, %375), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %377 : Float(1, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%_4, %376), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %378 : int = prim::Constant[value=1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %379 : Float(221, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cuda:0) = aten::add(%372, %377, %378), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %380 : int = prim::Constant[value=-1](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %381 : int = prim::Constant[value=4](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %382 : int[] = prim::ListConstruct(%380, %381), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.17 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%379, %382), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/anchor_generator.py:177:0
                    %384 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %385 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %386 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %387 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.3 : Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.1, %384, %385, %386, %387), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %394 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %395 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %396 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %397 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.7 : Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.5, %394, %395, %396, %397), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %404 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %405 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %406 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %407 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.11 : Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.9, %404, %405, %406, %407), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %414 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %415 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %416 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %417 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.15 : Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.13, %414, %415, %416, %417), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %424 : int = prim::Constant[value=6](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %425 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %426 : bool = prim::Constant[value=0](), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %427 : NoneType = prim::Constant(), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator
                    %tensor.19 : Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.17, %424, %425, %426, %427), scope: __module.model.proposal_generator/__module.model.proposal_generator.anchor_generator # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                    %434 : (Float(163200, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Float(40800, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Float(10200, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Float(2550, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Float(663, 4, strides=[4, 1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%tensor.3, %tensor.7, %tensor.11, %tensor.15, %tensor.19)
                    return (%434)
              
                }
              }
              submodules {
                module __torch__.detectron2.modeling.anchor_generator.BufferList {
                  parameters {
                  }
                  attributes {
                    0 = ...
                    1 = ...
                    2 = ...
                    3 = ...
                    4 = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                  }
                  submodules {
                  }
                }
              }
            }
          }
        }
        module __torch__.detectron2.modeling.roi_heads.roi_heads.StandardROIHeads {
          parameters {
          }
          attributes {
            training = False
            _is_full_backward_hook = None
            box_pooler = <__torch__.detectron2.modeling.poolers.ROIPooler object at 0x5619079e8cc0>
            box_head = <__torch__.detectron2.modeling.roi_heads.box_head.FastRCNNConvFCHead object at 0x5619079f27c0>
            box_predictor = <__torch__.detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputLayers object at 0x5619079f49b0>
            mask_pooler = <__torch__.detectron2.modeling.poolers.___torch_mangle_145.ROIPooler object at 0x561907952cc0>
            mask_head = <__torch__.detectron2.modeling.roi_heads.mask_head.MaskRCNNConvUpsampleHead object at 0x561907965000>
          }
          methods {
            method forward {
              graph(%self.325 : __torch__.detectron2.modeling.roi_heads.roi_heads.StandardROIHeads,
                    %7 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                    %8 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0),
                    %9 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                    %10 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                    %11 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0),
                    %image_size : Long(2, strides=[1], requires_grad=0, device=cuda:0),
                    %459 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                %mask_head : __torch__.detectron2.modeling.roi_heads.mask_head.MaskRCNNConvUpsampleHead = prim::GetAttr[name="mask_head"](%self.325)
                %mask_pooler : __torch__.detectron2.modeling.poolers.___torch_mangle_145.ROIPooler = prim::GetAttr[name="mask_pooler"](%self.325)
                %box_predictor : __torch__.detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputLayers = prim::GetAttr[name="box_predictor"](%self.325)
                %box_head : __torch__.detectron2.modeling.roi_heads.box_head.FastRCNNConvFCHead = prim::GetAttr[name="box_head"](%self.325)
                %box_pooler : __torch__.detectron2.modeling.poolers.ROIPooler = prim::GetAttr[name="box_pooler"](%self.325)
                %462 : Tensor = prim::CallMethod[name="forward"](%box_pooler, %7, %8, %9, %10, %11)
                %463 : Tensor = prim::CallMethod[name="forward"](%box_head, %462)
                %464 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%box_predictor, %463)
                %14 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0), %15 : Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%464)
                %16 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                %17 : int = aten::size(%8, %16), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                %18 : Long(device=cpu) = prim::NumToTensor(%17), scope: __module.model.roi_heads
                %19 : int = aten::Int(%18), scope: __module.model.roi_heads
                %23 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %24 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %25 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %26 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %deltas : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::to(%14, %23, %24, %25, %26), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:88:0
                %28 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %29 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %30 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %31 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %boxes.29 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%8, %28, %29, %30, %31), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:89:0
                %33 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %34 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %35 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %36 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %37 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %33, %34, %35, %36), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %38 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %39 : int = prim::Constant[value=2](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %40 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%37, %38, %39), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %41 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %42 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %43 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %44 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %45 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %41, %42, %43, %44), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %46 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %47 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %48 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%45, %46, %47), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %49 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %widths : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%40, %48, %49), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:91:0
                %51 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %52 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %53 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %54 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %55 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %51, %52, %53, %54), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %56 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %57 : int = prim::Constant[value=3](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %58 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%55, %56, %57), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %59 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %60 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %61 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %62 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %63 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %59, %60, %61, %62), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %64 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %65 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %66 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%63, %64, %65), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %67 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %heights : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%58, %66, %67), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:92:0
                %69 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %70 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %71 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %72 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %73 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %69, %70, %71, %72), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %74 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %75 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %76 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%73, %74, %75), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %77 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %78 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%widths, %77), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %79 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %ctr_x : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%76, %78, %79), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:93:0
                %81 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %82 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %83 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %84 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %85 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%boxes.29, %81, %82, %83, %84), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %86 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %87 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %88 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%85, %86, %87), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %89 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %90 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%heights, %89), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %91 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %ctr_y : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%88, %90, %91), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:94:0
                %93 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %94 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %95 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %96 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %97 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas, %93, %94, %95, %96), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %98 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %99 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %100 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %101 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %102 : Float(1000, 80, strides=[320, 4], requires_grad=0, device=cuda:0) = aten::slice(%97, %98, %99, %100, %101), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %103 : Double(requires_grad=0, device=cpu) = prim::Constant[value={10}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %dx : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::div(%102, %103), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:97:0
                %105 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %106 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %107 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %108 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %109 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas, %105, %106, %107, %108), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %110 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %111 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %112 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %113 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %114 : Float(1000, 80, strides=[320, 4], requires_grad=0, device=cuda:0) = aten::slice(%109, %110, %111, %112, %113), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %115 : Double(requires_grad=0, device=cpu) = prim::Constant[value={10}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %dy : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::div(%114, %115), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:98:0
                %117 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %118 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %119 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %120 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %121 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas, %117, %118, %119, %120), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %122 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %123 : int = prim::Constant[value=2](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %124 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %125 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %126 : Float(1000, 80, strides=[320, 4], requires_grad=0, device=cuda:0) = aten::slice(%121, %122, %123, %124, %125), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %127 : Double(requires_grad=0, device=cpu) = prim::Constant[value={5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %dw.21 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::div(%126, %127), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:99:0
                %129 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %130 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %131 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %132 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %133 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::slice(%deltas, %129, %130, %131, %132), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %134 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %135 : int = prim::Constant[value=3](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %136 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %137 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %138 : Float(1000, 80, strides=[320, 4], requires_grad=0, device=cuda:0) = aten::slice(%133, %134, %135, %136, %137), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %139 : Double(requires_grad=0, device=cpu) = prim::Constant[value={5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %dh.21 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::div(%138, %139), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:100:0
                %141 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %142 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %dw : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dw.21, %141, %142), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:103:0
                %144 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %145 : float = prim::Constant[value=4.1351665567423561](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %dh : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::clamp(%dh.21, %144, %145), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:104:0
                %147 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %148 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %149 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %150 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %151 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths, %147, %148, %149, %150), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %152 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %153 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%151, %152), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %154 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%dx, %153), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %155 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %156 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %157 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %158 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %159 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_x, %155, %156, %157, %158), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %160 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %161 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%159, %160), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %162 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %pred_ctr_x : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::add(%154, %161, %162), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:106:0
                %164 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %165 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %166 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %167 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %168 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights, %164, %165, %166, %167), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %169 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %170 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%168, %169), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %171 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%dy, %170), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %172 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %173 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %174 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %175 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %176 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%ctr_y, %172, %173, %174, %175), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %177 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %178 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%176, %177), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %179 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %pred_ctr_y : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::add(%171, %178, %179), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:107:0
                %181 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::exp(%dw), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %182 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %183 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %184 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %185 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %186 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%widths, %182, %183, %184, %185), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %187 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %188 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%186, %187), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %pred_w : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%181, %188), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:108:0
                %190 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::exp(%dh), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %191 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %192 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %193 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %194 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %195 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%heights, %191, %192, %193, %194), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %196 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %197 : Float(1000, 1, strides=[1, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%195, %196), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %pred_h : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%190, %197), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:109:0
                %199 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %200 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w, %199), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %201 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %202 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_x, %200, %201), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:111:0
                %203 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %204 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h, %203), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %205 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %206 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::sub(%pred_ctr_y, %204, %205), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:112:0
                %207 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %208 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_w, %207), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %209 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %210 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_x, %208, %209), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:113:0
                %211 : Double(requires_grad=0, device=cpu) = prim::Constant[value={0.5}](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %212 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::mul(%pred_h, %211), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %213 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %214 : Float(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::add(%pred_ctr_y, %212, %213), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:114:0
                %215 : Tensor[] = prim::ListConstruct(%202, %206, %210, %214), scope: __module.model.roi_heads
                %216 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # export_model.py:40:0
                %217 : Float(1000, 80, 4, strides=[320, 4, 1], requires_grad=0, device=cuda:0) = aten::stack(%215, %216), scope: __module.model.roi_heads # export_model.py:40:0
                %218 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # export_model.py:40:0
                %219 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %220 : Device = prim::Constant[value="cuda"](), scope: __module.model.roi_heads # export_model.py:40:0
                %221 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %222 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %223 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %224 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %pred_boxes : Float(1000, 80, 4, strides=[320, 4, 1], requires_grad=0, device=cuda:0) = aten::to(%217, %218, %219, %220, %221, %222, %223, %224), scope: __module.model.roi_heads # export_model.py:40:0
                %226 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %227 : int = aten::size(%deltas, %226), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %228 : Long(device=cpu) = prim::NumToTensor(%227), scope: __module.model.roi_heads
                %229 : int = aten::Int(%228), scope: __module.model.roi_heads
                %230 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %231 : int = aten::size(%deltas, %230), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %232 : Long(device=cpu) = prim::NumToTensor(%231), scope: __module.model.roi_heads
                %233 : int = aten::Int(%232), scope: __module.model.roi_heads
                %234 : int[] = prim::ListConstruct(%229, %233), scope: __module.model.roi_heads
                %235 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::reshape(%pred_boxes, %234), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/box_regression.py:116:0
                %236 : int[] = prim::ListConstruct(%19), scope: __module.model.roi_heads
                %237 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                %238 : Tensor[] = aten::split_with_sizes(%235, %236, %237), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                %boxes.31 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%238), scope: __module.model.roi_heads
                %240 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                %241 : int = aten::size(%boxes.29, %240), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                %242 : Long(device=cpu) = prim::NumToTensor(%241), scope: __module.model.roi_heads
                %243 : int = aten::Int(%242), scope: __module.model.roi_heads
                %247 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1818:0
                %248 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %249 : Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0) = aten::softmax(%15, %247, %248), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1818:0
                %250 : int[] = prim::ListConstruct(%243), scope: __module.model.roi_heads
                %251 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                %252 : Tensor[] = aten::split_with_sizes(%249, %250, %251), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                %scores.1 : Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%252), scope: __module.model.roi_heads
                %264 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %265 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %266 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %267 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %268 : Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0) = aten::slice(%scores.1, %264, %265, %266, %267), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %269 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %270 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %271 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %272 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %scores.3 : Float(1000, 80, strides=[81, 1], requires_grad=0, device=cuda:0) = aten::slice(%268, %269, %270, %271, %272), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:142:0
                %277 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:143:0
                %278 : int = aten::size(%boxes.31, %277), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:143:0
                %279 : Long(device=cpu) = prim::NumToTensor(%278), scope: __module.model.roi_heads
                %280 : Long(requires_grad=0, device=cpu) = prim::Constant[value={4}](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:647:0
                %281 : str = prim::Constant[value="trunc"](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:647:0
                %num_bbox_reg_classes : Long(requires_grad=0, device=cpu) = aten::div(%279, %280, %281), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:647:0
                %283 : int = aten::Int(%num_bbox_reg_classes), scope: __module.model.roi_heads
                %284 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:145:0
                %285 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:145:0
                %286 : int[] = prim::ListConstruct(%284, %285), scope: __module.model.roi_heads
                %tensor.33 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::reshape(%boxes.31, %286), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:145:0
                %288 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %289 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %290 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %291 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %tensor.35 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.33, %288, %289, %290, %291), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %300 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:704:0
                %301 : Tensor[] = aten::unbind(%image_size, %300), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:704:0
                %h : Long(requires_grad=0, device=cuda:0), %w : Long(requires_grad=0, device=cuda:0) = prim::ListUnpack(%301), scope: __module.model.roi_heads
                %305 : Scalar = aten::ScalarImplicit(%h), scope: __module.model.roi_heads
                %306 : Scalar = aten::ScalarImplicit(%w), scope: __module.model.roi_heads
                %307 : Scalar = aten::ScalarImplicit(%h), scope: __module.model.roi_heads
                %308 : Scalar = aten::ScalarImplicit(%w), scope: __module.model.roi_heads
                %309 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %310 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %311 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %312 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %313 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.35, %309, %310, %311, %312), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %314 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %315 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %316 : Float(80000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%313, %314, %315), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %317 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %318 : Float(80000, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%316, %317, %308), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:193:0
                %319 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %320 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %321 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %322 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %323 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.35, %319, %320, %321, %322), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %324 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %325 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %326 : Float(80000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%323, %324, %325), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %327 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %328 : Float(80000, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%326, %327, %307), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:194:0
                %329 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %330 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %331 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %332 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %333 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.35, %329, %330, %331, %332), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %334 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %335 : int = prim::Constant[value=2](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %336 : Float(80000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%333, %334, %335), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %337 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %338 : Float(80000, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%336, %337, %306), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:195:0
                %339 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %340 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %341 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %342 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %343 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor.35, %339, %340, %341, %342), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %344 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %345 : int = prim::Constant[value=3](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %346 : Float(80000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%343, %344, %345), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %347 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %348 : Float(80000, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%346, %347, %305), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:196:0
                %349 : Tensor[] = prim::ListConstruct(%318, %328, %338, %348), scope: __module.model.roi_heads
                %350 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # export_model.py:40:0
                %351 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::stack(%349, %350), scope: __module.model.roi_heads # export_model.py:40:0
                %352 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # export_model.py:40:0
                %353 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %354 : Device = prim::Constant[value="cuda"](), scope: __module.model.roi_heads # export_model.py:40:0
                %355 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %356 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %357 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # export_model.py:40:0
                %358 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %359 : Float(80000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%351, %352, %353, %354, %355, %356, %357, %358), scope: __module.model.roi_heads # export_model.py:40:0
                %360 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:147:0
                %361 : int = prim::Constant[value=4](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:147:0
                %362 : int[] = prim::ListConstruct(%360, %283, %361), scope: __module.model.roi_heads
                %boxes.33 : Float(1000, 80, 4, strides=[320, 4, 1], requires_grad=0, device=cuda:0) = aten::view(%359, %362), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:147:0
                %364 : float = prim::Constant[value=0.050000000000000003](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:151:0
                %filter_mask : Bool(1000, 80, strides=[80, 1], requires_grad=0, device=cuda:0) = aten::gt(%scores.3, %364), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:151:0
                %filter_inds.1 : Long(425, 2, strides=[1, 425], requires_grad=0, device=cuda:0) = aten::nonzero(%filter_mask), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:154:0
                %369 : Tensor?[] = prim::ListConstruct(%filter_mask), scope: __module.model.roi_heads
                %boxes.35 : Float(425, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::index(%boxes.33, %369), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:158:0
                %371 : Tensor?[] = prim::ListConstruct(%filter_mask), scope: __module.model.roi_heads
                %scores : Float(425, strides=[1], requires_grad=0, device=cuda:0) = aten::index(%scores.3, %371), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:159:0
                %373 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %374 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %375 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %376 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %377 : Long(425, 2, strides=[1, 425], requires_grad=0, device=cuda:0) = aten::slice(%filter_inds.1, %373, %374, %375, %376), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %378 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %379 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %380 : Long(425, strides=[1], requires_grad=0, device=cuda:0) = aten::select(%377, %378, %379), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:162:0
                %389 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %390 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %391 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %392 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %boxes.37 : Float(425, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%boxes.35, %389, %390, %391, %392), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/nms.py:20:0
                %394 : float = prim::Constant[value=0.5](), scope: __module.model.roi_heads # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                %395 : Function = prim::Constant[name="_batched_nms_coordinate_trick"](), scope: __module.model.roi_heads
                %keep.3 : Tensor = prim::CallFunction(%395, %boxes.37, %scores, %380, %394), scope: __module.model.roi_heads
                %397 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:164:0
                %398 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:164:0
                %399 : int = prim::Constant[value=100](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:164:0
                %400 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:164:0
                %keep : Long(52, strides=[1], requires_grad=0, device=cuda:0) = aten::slice(%keep.3, %397, %398, %399, %400), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:164:0
                %402 : Tensor?[] = prim::ListConstruct(%keep), scope: __module.model.roi_heads
                %tensor.37 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::index(%boxes.37, %402), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:165:0
                %404 : Tensor?[] = prim::ListConstruct(%keep), scope: __module.model.roi_heads
                %405 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::index(%scores, %404), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:165:0
                %406 : Tensor?[] = prim::ListConstruct(%keep), scope: __module.model.roi_heads
                %filter_inds : Long(52, 2, strides=[2, 1], requires_grad=0, device=cuda:0) = aten::index(%filter_inds.1, %406), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:165:0
                %408 : int = prim::Constant[value=6](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %409 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %410 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %411 : NoneType = prim::Constant(), scope: __module.model.roi_heads
                %tensor : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::to(%tensor.37, %408, %409, %410, %411), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:150:0
                %433 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %434 : int = prim::Constant[value=0](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %435 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %436 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %437 : Long(52, 2, strides=[2, 1], requires_grad=0, device=cuda:0) = aten::slice(%filter_inds, %433, %434, %435, %436), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %438 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %439 : int = prim::Constant[value=1](), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %class_pred : Long(52, strides=[2], requires_grad=0, device=cuda:0) = aten::select(%437, %438, %439), scope: __module.model.roi_heads # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:170:0
                %465 : Tensor = prim::CallMethod[name="forward"](%mask_pooler, %7, %tensor, %9, %10, %459)
                %466 : Tensor = prim::CallMethod[name="forward"](%mask_head, %465, %class_pred, %tensor)
                %461 : (Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0), Long(52, strides=[2], requires_grad=0, device=cuda:0), Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0), Float(52, strides=[1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%tensor, %class_pred, %466, %405)
                return (%461)
          
            }
          }
          submodules {
            module __torch__.detectron2.modeling.poolers.ROIPooler {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                level_poolers = <__torch__.torch.nn.modules.container.ModuleList object at 0x5619079e7ca0>
              }
              methods {
                method forward {
                  graph(%self.327 : __torch__.detectron2.modeling.poolers.ROIPooler,
                        %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                        %2 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0),
                        %3 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                        %4 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                        %5 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                    %level_poolers.7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="level_poolers"](%self.327)
                    %_3.7 : __torch__.detectron2.layers.roi_align.___torch_mangle_134.ROIAlign = prim::GetAttr[name="3"](%level_poolers.7)
                    %level_poolers.5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="level_poolers"](%self.327)
                    %_2.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_133.ROIAlign = prim::GetAttr[name="2"](%level_poolers.5)
                    %level_poolers.3 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="level_poolers"](%self.327)
                    %_1.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_132.ROIAlign = prim::GetAttr[name="1"](%level_poolers.3)
                    %level_poolers.1 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="level_poolers"](%self.327)
                    %_0.11 : __torch__.detectron2.layers.roi_align.ROIAlign = prim::GetAttr[name="0"](%level_poolers.1)
                    %36 : Tensor[] = prim::ListConstruct(%2), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %37 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:95:0
                    %38 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::cat(%36, %37), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:95:0
                    %39 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %40 : int = aten::size(%2, %39), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %41 : Long(device=cpu) = prim::NumToTensor(%40), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %45 : Tensor[] = prim::ListConstruct(%41), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %46 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %47 : Long(1, strides=[1], requires_grad=0, device=cpu) = aten::stack(%45, %46), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %48 : int = prim::Constant[value=4](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %49 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %50 : Device = prim::Constant[value="cuda"](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %51 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %52 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %53 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %54 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %55 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::to(%47, %48, %49, %50, %51, %52, %53, %54), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # export_model.py:40:0
                    %56 : Function = prim::Constant[name="_convert_boxes_to_pooler_format"](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %pooler_fmt_boxes.1 : Tensor = prim::CallFunction(%56, %38, %55), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %58 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %59 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %60 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %61 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %62 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%2, %58, %59, %60, %61), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %63 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %64 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %65 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%62, %63, %64), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %66 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %67 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %68 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %69 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %70 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%2, %66, %67, %68, %69), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %71 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %72 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %73 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%70, %71, %72), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %74 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %75 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%65, %73, %74), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %76 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %77 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %78 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %79 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %80 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%2, %76, %77, %78, %79), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %81 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %82 : int = prim::Constant[value=3](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %83 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%80, %81, %82), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %84 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %85 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %86 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %87 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %88 : Float(1000, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%2, %84, %85, %86, %87), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %89 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %90 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %91 : Float(1000, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%88, %89, %90), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %92 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %93 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%83, %91, %92), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %94 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%75, %93), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %box_sizes.1 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sqrt(%94), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:51:0
                    %96 : Long(requires_grad=0, device=cpu) = prim::Constant[value={224}](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %97 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::div(%box_sizes.1, %96), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %98 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1e-08}](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %99 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %100 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%97, %98, %99), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %101 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::log2(%100), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %102 : Long(requires_grad=0, device=cpu) = prim::Constant[value={4}](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %103 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %104 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%101, %102, %103), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %level_assignments.1 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::floor(%104), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:53:0
                    %106 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %107 : int = prim::Constant[value=5](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %level_assignments.3 : Float(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%level_assignments.1, %106, %107), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %109 : int = prim::Constant[value=4](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %110 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %111 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %112 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %113 : Long(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::to(%level_assignments.3, %109, %110, %111, %112), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %114 : Long(requires_grad=0, device=cpu) = prim::Constant[value={2}](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %115 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %level_assignments.5 : Long(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%113, %114, %115), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %129 : int = prim::Constant[value=256](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %130 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %131 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %132 : Function = prim::Constant[name="_create_zeros"](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %output.1 : Tensor = prim::CallFunction(%132, %pooler_fmt_boxes.1, %129, %130, %131, %1), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %134 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.123 : Bool(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments.5, %134), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %136 : Tensor[] = aten::nonzero_numpy(%x.123), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.1 : Long(701, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%136), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %138 : Tensor?[] = prim::ListConstruct(%inds.1), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %rois.1 : Float(701, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes.1, %138), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %174 : Tensor = prim::CallMethod[name="forward"](%_0.11, %rois.1, %1)
                    %141 : Tensor?[] = prim::ListConstruct(%inds.1), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %142 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output.3 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.1, %141, %174, %142), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %144 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.125 : Bool(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments.5, %144), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %146 : Tensor[] = aten::nonzero_numpy(%x.125), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.3 : Long(170, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%146), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %148 : Tensor?[] = prim::ListConstruct(%inds.3), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %rois.3 : Float(170, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes.1, %148), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %175 : Tensor = prim::CallMethod[name="forward"](%_1.11, %rois.3, %3)
                    %151 : Tensor?[] = prim::ListConstruct(%inds.3), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %152 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output.5 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.3, %151, %175, %152), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %154 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.127 : Bool(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments.5, %154), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %156 : Tensor[] = aten::nonzero_numpy(%x.127), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.5 : Long(96, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%156), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %158 : Tensor?[] = prim::ListConstruct(%inds.5), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %rois.5 : Float(96, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes.1, %158), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %176 : Tensor = prim::CallMethod[name="forward"](%_2.11, %rois.5, %4)
                    %161 : Tensor?[] = prim::ListConstruct(%inds.5), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %162 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output.7 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.5, %161, %176, %162), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %164 : int = prim::Constant[value=3](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.129 : Bool(1000, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments.5, %164), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %166 : Tensor[] = aten::nonzero_numpy(%x.129), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.7 : Long(33, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%166), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %168 : Tensor?[] = prim::ListConstruct(%inds.7), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %rois.7 : Float(33, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes.1, %168), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %177 : Tensor = prim::CallMethod[name="forward"](%_3.7, %rois.7, %5)
                    %171 : Tensor?[] = prim::ListConstruct(%inds.7), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler
                    %172 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %input.131 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.7, %171, %177, %172), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    return (%input.131)
              
                }
              }
              submodules {
                module __torch__.torch.nn.modules.container.ModuleList {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.layers.roi_align.ROIAlign object at 0x5619079e1ce0>
                    1 = <__torch__.detectron2.layers.roi_align.___torch_mangle_132.ROIAlign object at 0x5619079e3940>
                    2 = <__torch__.detectron2.layers.roi_align.___torch_mangle_133.ROIAlign object at 0x5619079e5090>
                    3 = <__torch__.detectron2.layers.roi_align.___torch_mangle_134.ROIAlign object at 0x5619079e68c0>
                  }
                  methods {
                  }
                  submodules {
                    module __torch__.detectron2.layers.roi_align.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.329 : __torch__.detectron2.layers.roi_align.ROIAlign,
                                %rois.1 : Float(701, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0
                            %boxes.21 : Float(701, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.1, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.25](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(701, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.21, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_132.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.331 : __torch__.detectron2.layers.roi_align.___torch_mangle_132.ROIAlign,
                                %rois.3 : Float(170, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1
                            %boxes.23 : Float(170, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.3, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.125](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(170, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.23, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_133.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.333 : __torch__.detectron2.layers.roi_align.___torch_mangle_133.ROIAlign,
                                %rois.5 : Float(96, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2
                            %boxes.25 : Float(96, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.5, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.0625](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(96, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.25, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_134.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.335 : __torch__.detectron2.layers.roi_align.___torch_mangle_134.ROIAlign,
                                %rois.7 : Float(33, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3
                            %boxes.27 : Float(33, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.7, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.03125](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=7](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(33, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.27, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.box_pooler/__module.model.roi_heads.box_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
              }
            }
            module __torch__.detectron2.modeling.roi_heads.box_head.FastRCNNConvFCHead {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                flatten = <__torch__.torch.nn.modules.flatten.Flatten object at 0x5619079e95f0>
                fc1 = <__torch__.torch.nn.modules.linear.Linear object at 0x5619079ec770>
                fc_relu1 = <__torch__.torch.nn.modules.activation.___torch_mangle_135.ReLU object at 0x5619079ec980>
                fc2 = <__torch__.torch.nn.modules.linear.___torch_mangle_136.Linear object at 0x5619079eca70>
                fc_relu2 = <__torch__.torch.nn.modules.activation.___torch_mangle_137.ReLU object at 0x5619079efc80>
              }
              methods {
                method forward {
                  graph(%self.337 : __torch__.detectron2.modeling.roi_heads.box_head.FastRCNNConvFCHead,
                        %1 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0)):
                    %fc_relu2 : __torch__.torch.nn.modules.activation.___torch_mangle_137.ReLU = prim::GetAttr[name="fc_relu2"](%self.337)
                    %fc2 : __torch__.torch.nn.modules.linear.___torch_mangle_136.Linear = prim::GetAttr[name="fc2"](%self.337)
                    %fc_relu1 : __torch__.torch.nn.modules.activation.___torch_mangle_135.ReLU = prim::GetAttr[name="fc_relu1"](%self.337)
                    %fc1 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="fc1"](%self.337)
                    %flatten : __torch__.torch.nn.modules.flatten.Flatten = prim::GetAttr[name="flatten"](%self.337)
                    %12 : Tensor = prim::CallMethod[name="forward"](%flatten, %1)
                    %13 : Tensor = prim::CallMethod[name="forward"](%fc1, %12)
                    %14 : Tensor = prim::CallMethod[name="forward"](%fc_relu1, %13)
                    %15 : Tensor = prim::CallMethod[name="forward"](%fc2, %14)
                    %16 : Tensor = prim::CallMethod[name="forward"](%fc_relu2, %15)
                    return (%16)
              
                }
              }
              submodules {
                module __torch__.torch.nn.modules.flatten.Flatten {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.339 : __torch__.torch.nn.modules.flatten.Flatten,
                            %1 : Float(1000, 256, 7, 7, strides=[12544, 49, 7, 1], requires_grad=0, device=cuda:0)):
                        %2 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.flatten # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/flatten.py:45:0
                        %3 : int = prim::Constant[value=-1](), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.flatten # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/flatten.py:45:0
                        %input.133 : Float(1000, 12544, strides=[12544, 1], requires_grad=0, device=cuda:0) = aten::flatten(%1, %2, %3), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.flatten # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/flatten.py:45:0
                        return (%input.133)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.linear.Linear {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.341 : __torch__.torch.nn.modules.linear.Linear,
                            %1 : Float(1000, 12544, strides=[12544, 1], requires_grad=0, device=cuda:0)):
                        %bias.263 : Tensor = prim::GetAttr[name="bias"](%self.341)
                        %weight.369 : Tensor = prim::GetAttr[name="weight"](%self.341)
                        %input.135 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0) = aten::linear(%1, %weight.369, %bias.263), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.fc1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/linear.py:103:0
                        return (%input.135)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.activation.___torch_mangle_135.ReLU {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.343 : __torch__.torch.nn.modules.activation.___torch_mangle_135.ReLU,
                            %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                        %input.137 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0) = aten::relu(%1), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.fc_relu1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                        return (%input.137)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.linear.___torch_mangle_136.Linear {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.345 : __torch__.torch.nn.modules.linear.___torch_mangle_136.Linear,
                            %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                        %bias.265 : Tensor = prim::GetAttr[name="bias"](%self.345)
                        %weight.371 : Tensor = prim::GetAttr[name="weight"](%self.345)
                        %input.139 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0) = aten::linear(%1, %weight.371, %bias.265), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.fc2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/linear.py:103:0
                        return (%input.139)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.activation.___torch_mangle_137.ReLU {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.347 : __torch__.torch.nn.modules.activation.___torch_mangle_137.ReLU,
                            %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                        %input.141 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0) = aten::relu(%1), scope: __module.model.roi_heads/__module.model.roi_heads.box_head/__module.model.roi_heads.box_head.fc_relu2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                        return (%input.141)
                  
                    }
                  }
                  submodules {
                  }
                }
              }
            }
            module __torch__.detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputLayers {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                cls_score = <__torch__.torch.nn.modules.linear.___torch_mangle_138.Linear object at 0x5619079f4700>
                bbox_pred = <__torch__.torch.nn.modules.linear.___torch_mangle_139.Linear object at 0x5619079f48c0>
              }
              methods {
                method forward {
                  graph(%self.349 : __torch__.detectron2.modeling.roi_heads.fast_rcnn.FastRCNNOutputLayers,
                        %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                    %bbox_pred : __torch__.torch.nn.modules.linear.___torch_mangle_139.Linear = prim::GetAttr[name="bbox_pred"](%self.349)
                    %cls_score : __torch__.torch.nn.modules.linear.___torch_mangle_138.Linear = prim::GetAttr[name="cls_score"](%self.349)
                    %7 : Tensor = prim::CallMethod[name="forward"](%cls_score, %1)
                    %8 : Tensor = prim::CallMethod[name="forward"](%bbox_pred, %1)
                    %6 : (Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0), Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0)) = prim::TupleConstruct(%8, %7)
                    return (%6)
              
                }
              }
              submodules {
                module __torch__.torch.nn.modules.linear.___torch_mangle_138.Linear {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.351 : __torch__.torch.nn.modules.linear.___torch_mangle_138.Linear,
                            %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                        %bias.267 : Tensor = prim::GetAttr[name="bias"](%self.351)
                        %weight.373 : Tensor = prim::GetAttr[name="weight"](%self.351)
                        %input.143 : Float(1000, 81, strides=[81, 1], requires_grad=0, device=cuda:0) = aten::linear(%1, %weight.373, %bias.267), scope: __module.model.roi_heads/__module.model.roi_heads.box_predictor/__module.model.roi_heads.box_predictor.cls_score # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/linear.py:103:0
                        return (%input.143)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.linear.___torch_mangle_139.Linear {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.353 : __torch__.torch.nn.modules.linear.___torch_mangle_139.Linear,
                            %1 : Float(1000, 1024, strides=[1024, 1], requires_grad=0, device=cuda:0)):
                        %bias.269 : Tensor = prim::GetAttr[name="bias"](%self.353)
                        %weight.375 : Tensor = prim::GetAttr[name="weight"](%self.353)
                        %deltas.21 : Float(1000, 320, strides=[320, 1], requires_grad=0, device=cuda:0) = aten::linear(%1, %weight.375, %bias.269), scope: __module.model.roi_heads/__module.model.roi_heads.box_predictor/__module.model.roi_heads.box_predictor.bbox_pred # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/linear.py:103:0
                        return (%deltas.21)
                  
                    }
                  }
                  submodules {
                  }
                }
              }
            }
            module __torch__.detectron2.modeling.poolers.___torch_mangle_145.ROIPooler {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                level_poolers = <__torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList object at 0x561907951c90>
              }
              methods {
                method forward {
                  graph(%self.355 : __torch__.detectron2.modeling.poolers.___torch_mangle_145.ROIPooler,
                        %1 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0),
                        %tensor : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0),
                        %3 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0),
                        %4 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0),
                        %5 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                    %level_poolers : __torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList = prim::GetAttr[name="level_poolers"](%self.355)
                    %_3 : __torch__.detectron2.layers.roi_align.___torch_mangle_143.ROIAlign = prim::GetAttr[name="3"](%level_poolers)
                    %level_poolers.13 : __torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList = prim::GetAttr[name="level_poolers"](%self.355)
                    %_2 : __torch__.detectron2.layers.roi_align.___torch_mangle_142.ROIAlign = prim::GetAttr[name="2"](%level_poolers.13)
                    %level_poolers.11 : __torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList = prim::GetAttr[name="level_poolers"](%self.355)
                    %_1 : __torch__.detectron2.layers.roi_align.___torch_mangle_141.ROIAlign = prim::GetAttr[name="1"](%level_poolers.11)
                    %level_poolers.9 : __torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList = prim::GetAttr[name="level_poolers"](%self.355)
                    %_0 : __torch__.detectron2.layers.roi_align.___torch_mangle_140.ROIAlign = prim::GetAttr[name="0"](%level_poolers.9)
                    %36 : Tensor[] = prim::ListConstruct(%tensor), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %37 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:95:0
                    %38 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::cat(%36, %37), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:95:0
                    %39 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %40 : int = aten::size(%tensor, %39), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %41 : Long(device=cpu) = prim::NumToTensor(%40), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %45 : Tensor[] = prim::ListConstruct(%41), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %46 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %47 : Long(1, strides=[1], requires_grad=0, device=cpu) = aten::stack(%45, %46), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %48 : int = prim::Constant[value=4](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %49 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %50 : Device = prim::Constant[value="cuda"](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %51 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %52 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %53 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %54 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %55 : Long(1, strides=[1], requires_grad=0, device=cuda:0) = aten::to(%47, %48, %49, %50, %51, %52, %53, %54), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # export_model.py:40:0
                    %56 : Function = prim::Constant[name="_convert_boxes_to_pooler_format"](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %pooler_fmt_boxes : Tensor = prim::CallFunction(%56, %38, %55), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %58 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %59 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %60 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %61 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %62 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor, %58, %59, %60, %61), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %63 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %64 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %65 : Float(52, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%62, %63, %64), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %66 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %67 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %68 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %69 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %70 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor, %66, %67, %68, %69), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %71 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %72 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %73 : Float(52, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%70, %71, %72), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %74 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %75 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%65, %73, %74), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %76 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %77 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %78 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %79 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %80 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor, %76, %77, %78, %79), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %81 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %82 : int = prim::Constant[value=3](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %83 : Float(52, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%80, %81, %82), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %84 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %85 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %86 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %87 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %88 : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0) = aten::slice(%tensor, %84, %85, %86, %87), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %89 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %90 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %91 : Float(52, strides=[4], requires_grad=0, device=cuda:0) = aten::select(%88, %89, %90), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %92 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %93 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%83, %91, %92), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %94 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::mul(%75, %93), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:180:0
                    %box_sizes : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::sqrt(%94), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:51:0
                    %96 : Long(requires_grad=0, device=cpu) = prim::Constant[value={224}](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %97 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::div(%box_sizes, %96), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %98 : Double(requires_grad=0, device=cpu) = prim::Constant[value={1e-08}](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %99 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %100 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%97, %98, %99), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %101 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::log2(%100), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %102 : Long(requires_grad=0, device=cpu) = prim::Constant[value={4}](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %103 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %104 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::add(%101, %102, %103), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:54:0
                    %level_assignments.7 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::floor(%104), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:53:0
                    %106 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %107 : int = prim::Constant[value=5](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %level_assignments.9 : Float(52, strides=[1], requires_grad=0, device=cuda:0) = aten::clamp(%level_assignments.7, %106, %107), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:58:0
                    %109 : int = prim::Constant[value=4](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %110 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %111 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %112 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %113 : Long(52, strides=[1], requires_grad=0, device=cuda:0) = aten::to(%level_assignments.9, %109, %110, %111, %112), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %114 : Long(requires_grad=0, device=cpu) = prim::Constant[value={2}](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %115 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %level_assignments : Long(52, strides=[1], requires_grad=0, device=cuda:0) = aten::sub(%113, %114, %115), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:59:0
                    %129 : int = prim::Constant[value=256](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %130 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %131 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/jit/_trace.py:1121:0
                    %132 : Function = prim::Constant[name="_create_zeros"](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %output.9 : Tensor = prim::CallFunction(%132, %pooler_fmt_boxes, %129, %130, %131, %1), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %134 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.131 : Bool(52, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments, %134), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %136 : Tensor[] = aten::nonzero_numpy(%x.131), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.9 : Long(48, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%136), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %138 : Tensor?[] = prim::ListConstruct(%inds.9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %rois.9 : Float(48, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes, %138), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %174 : Tensor = prim::CallMethod[name="forward"](%_0, %rois.9, %1)
                    %141 : Tensor?[] = prim::ListConstruct(%inds.9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %142 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output.11 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.9, %141, %174, %142), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %144 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.133 : Bool(52, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments, %144), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %146 : Tensor[] = aten::nonzero_numpy(%x.133), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.11 : Long(4, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%146), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %148 : Tensor?[] = prim::ListConstruct(%inds.11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %rois.11 : Float(4, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes, %148), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %175 : Tensor = prim::CallMethod[name="forward"](%_1, %rois.11, %3)
                    %151 : Tensor?[] = prim::ListConstruct(%inds.11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %152 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output.13 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.11, %151, %175, %152), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %154 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.135 : Bool(52, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments, %154), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %156 : Tensor[] = aten::nonzero_numpy(%x.135), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds.13 : Long(0, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%156), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %158 : Tensor?[] = prim::ListConstruct(%inds.13), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %rois.13 : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes, %158), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %176 : Tensor = prim::CallMethod[name="forward"](%_2, %rois.13, %4)
                    %161 : Tensor?[] = prim::ListConstruct(%inds.13), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %162 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %output : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output.13, %161, %176, %162), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %164 : int = prim::Constant[value=3](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %x.137 : Bool(52, strides=[1], requires_grad=0, device=cuda:0) = aten::eq(%level_assignments, %164), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:258:0
                    %166 : Tensor[] = aten::nonzero_numpy(%x.137), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:139:0
                    %inds : Long(0, strides=[1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%166), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %168 : Tensor?[] = prim::ListConstruct(%inds), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %rois : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::index(%pooler_fmt_boxes, %168), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:259:0
                    %177 : Tensor = prim::CallMethod[name="forward"](%_3, %rois, %5)
                    %171 : Tensor?[] = prim::ListConstruct(%inds), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler
                    %172 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    %x.139 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::index_put_(%output, %171, %177, %172), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/poolers.py:261:0
                    return (%x.139)
              
                }
              }
              submodules {
                module __torch__.torch.nn.modules.container.___torch_mangle_144.ModuleList {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                    0 = <__torch__.detectron2.layers.roi_align.___torch_mangle_140.ROIAlign object at 0x5619079f63a0>
                    1 = <__torch__.detectron2.layers.roi_align.___torch_mangle_141.ROIAlign object at 0x56190794b6e0>
                    2 = <__torch__.detectron2.layers.roi_align.___torch_mangle_142.ROIAlign object at 0x561907a8e480>
                    3 = <__torch__.detectron2.layers.roi_align.___torch_mangle_143.ROIAlign object at 0x561907a8e790>
                  }
                  methods {
                  }
                  submodules {
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_140.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.357 : __torch__.detectron2.layers.roi_align.___torch_mangle_140.ROIAlign,
                                %rois.9 : Float(48, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 272, 200, strides=[13926400, 54400, 200, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0
                            %boxes.39 : Float(48, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.9, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.25](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(48, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.39, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.0 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_141.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.359 : __torch__.detectron2.layers.roi_align.___torch_mangle_141.ROIAlign,
                                %rois.11 : Float(4, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 136, 100, strides=[3481600, 13600, 100, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1
                            %boxes.41 : Float(4, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.11, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.125](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(4, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.41, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.1 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_142.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.361 : __torch__.detectron2.layers.roi_align.___torch_mangle_142.ROIAlign,
                                %rois.13 : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 68, 50, strides=[870400, 3400, 50, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2
                            %boxes.43 : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois.13, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.0625](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(0, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes.43, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.2 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                    module __torch__.detectron2.layers.roi_align.___torch_mangle_143.ROIAlign {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.363 : __torch__.detectron2.layers.roi_align.___torch_mangle_143.ROIAlign,
                                %rois : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0),
                                %2 : Float(1, 256, 34, 25, strides=[217600, 850, 25, 1], requires_grad=0, device=cuda:0)):
                            %8 : int = prim::Constant[value=6](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %9 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %10 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %11 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3
                            %boxes : Float(0, 5, strides=[5, 1], requires_grad=0, device=cuda:0) = aten::to(%rois, %8, %9, %10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/roi_align.py:60:0
                            %18 : float = prim::Constant[value=0.03125](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %19 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %20 : int = prim::Constant[value=14](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %21 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            %23 : Float(0, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = torchvision::roi_align(%2, %boxes, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_pooler/__module.model.roi_heads.mask_pooler.level_poolers.3 # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torchvision/ops/roi_align.py:61:0
                            return (%23)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
              }
            }
            module __torch__.detectron2.modeling.roi_heads.mask_head.MaskRCNNConvUpsampleHead {
              parameters {
              }
              attributes {
                training = False
                _is_full_backward_hook = None
                mask_fcn1 = <__torch__.detectron2.layers.wrappers.___torch_mangle_147.Conv2d object at 0x561907956cf0>
                mask_fcn2 = <__torch__.detectron2.layers.wrappers.___torch_mangle_149.Conv2d object at 0x561907956ed0>
                mask_fcn3 = <__torch__.detectron2.layers.wrappers.___torch_mangle_151.Conv2d object at 0x56190795a250>
                mask_fcn4 = <__torch__.detectron2.layers.wrappers.___torch_mangle_153.Conv2d object at 0x56190795d590>
                deconv = <__torch__.torch.nn.modules.conv.ConvTranspose2d object at 0x561907960850>
                deconv_relu = <__torch__.torch.nn.modules.activation.___torch_mangle_154.ReLU object at 0x5619079608d0>
                predictor = <__torch__.detectron2.layers.wrappers.___torch_mangle_155.Conv2d object at 0x561907961ea0>
              }
              methods {
                method forward {
                  graph(%self.365 : __torch__.detectron2.modeling.roi_heads.mask_head.MaskRCNNConvUpsampleHead,
                        %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0),
                        %class_pred : Long(52, strides=[2], requires_grad=0, device=cuda:0),
                        %tensor : Float(52, 4, strides=[4, 1], requires_grad=0, device=cuda:0)):
                    %predictor : __torch__.detectron2.layers.wrappers.___torch_mangle_155.Conv2d = prim::GetAttr[name="predictor"](%self.365)
                    %deconv_relu : __torch__.torch.nn.modules.activation.___torch_mangle_154.ReLU = prim::GetAttr[name="deconv_relu"](%self.365)
                    %deconv : __torch__.torch.nn.modules.conv.ConvTranspose2d = prim::GetAttr[name="deconv"](%self.365)
                    %mask_fcn4 : __torch__.detectron2.layers.wrappers.___torch_mangle_153.Conv2d = prim::GetAttr[name="mask_fcn4"](%self.365)
                    %mask_fcn3 : __torch__.detectron2.layers.wrappers.___torch_mangle_151.Conv2d = prim::GetAttr[name="mask_fcn3"](%self.365)
                    %mask_fcn2 : __torch__.detectron2.layers.wrappers.___torch_mangle_149.Conv2d = prim::GetAttr[name="mask_fcn2"](%self.365)
                    %mask_fcn1 : __torch__.detectron2.layers.wrappers.___torch_mangle_147.Conv2d = prim::GetAttr[name="mask_fcn1"](%self.365)
                    %82 : Tensor = prim::CallMethod[name="forward"](%mask_fcn1, %1)
                    %83 : Tensor = prim::CallMethod[name="forward"](%mask_fcn2, %82)
                    %84 : Tensor = prim::CallMethod[name="forward"](%mask_fcn3, %83)
                    %85 : Tensor = prim::CallMethod[name="forward"](%mask_fcn4, %84)
                    %86 : Tensor = prim::CallMethod[name="forward"](%deconv, %85)
                    %87 : Tensor = prim::CallMethod[name="forward"](%deconv_relu, %86)
                    %88 : Tensor = prim::CallMethod[name="forward"](%predictor, %87)
                    %23 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:143:0
                    %24 : int = aten::size(%88, %23), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:143:0
                    %num_masks : Long(device=cpu) = prim::NumToTensor(%24), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %26 : Scalar = aten::ScalarImplicit(%num_masks), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %36 : NoneType = prim::Constant(), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %37 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:150:0
                    %38 : Device = prim::Constant[value="cpu"](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:150:0
                    %39 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:150:0
                    %40 : Long(52, strides=[1], requires_grad=0, device=cpu) = aten::arange(%26, %36, %37, %38, %39), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:150:0
                    %41 : Function = prim::Constant[name="move_device_like"](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %indices : Tensor = prim::CallFunction(%41, %40, %class_pred), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %43 : Tensor?[] = prim::ListConstruct(%indices, %class_pred), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %44 : Float(52, 28, 28, strides=[784, 28, 1], requires_grad=0, device=cuda:0) = aten::index(%88, %43), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %45 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %46 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %47 : int = prim::Constant[value=9223372036854775807](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %48 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %49 : Float(52, 28, 28, strides=[784, 28, 1], requires_grad=0, device=cuda:0) = aten::slice(%44, %45, %46, %47, %48), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %50 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %51 : Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0) = aten::unsqueeze(%49, %50), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %52 : Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0) = aten::sigmoid(%51), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/modeling/roi_heads/mask_head.py:151:0
                    %53 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %54 : int = aten::size(%tensor, %53), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/workspace/detectron2/detectron2/detectron2/structures/boxes.py:240:0
                    %55 : Long(device=cpu) = prim::NumToTensor(%54), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %56 : int = aten::Int(%55), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %60 : int[] = prim::ListConstruct(%56), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    %61 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                    %62 : Tensor[] = aten::split_with_sizes(%52, %60, %61), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/_tensor.py:574:0
                    %63 : Float(52, 1, 28, 28, strides=[784, 784, 28, 1], requires_grad=0, device=cuda:0) = prim::ListUnpack(%62), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head
                    return (%63)
              
                }
              }
              submodules {
                module __torch__.detectron2.layers.wrappers.___torch_mangle_147.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                    activation = <__torch__.torch.nn.modules.activation.___torch_mangle_146.ReLU object at 0x561907955640>
                  }
                  methods {
                    method forward {
                      graph(%self.367 : __torch__.detectron2.layers.wrappers.___torch_mangle_147.Conv2d,
                            %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                        %activation.11 : __torch__.torch.nn.modules.activation.___torch_mangle_146.ReLU = prim::GetAttr[name="activation"](%self.367)
                        %bias.271 : Tensor = prim::GetAttr[name="bias"](%self.367)
                        %weight.377 : Tensor = prim::GetAttr[name="weight"](%self.367)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1
                        %8 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1
                        %18 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.145 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.377, %bias.271, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward"](%activation.11, %input.145)
                        return (%25)
                  
                    }
                  }
                  submodules {
                    module __torch__.torch.nn.modules.activation.___torch_mangle_146.ReLU {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.369 : __torch__.torch.nn.modules.activation.___torch_mangle_146.ReLU,
                                %input.145 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                            %x.141 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.145), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn1/__module.model.roi_heads.mask_head.mask_fcn1.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%x.141)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
                module __torch__.detectron2.layers.wrappers.___torch_mangle_149.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                    activation = <__torch__.torch.nn.modules.activation.___torch_mangle_148.ReLU object at 0x561907956e50>
                  }
                  methods {
                    method forward {
                      graph(%self.371 : __torch__.detectron2.layers.wrappers.___torch_mangle_149.Conv2d,
                            %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                        %activation.13 : __torch__.torch.nn.modules.activation.___torch_mangle_148.ReLU = prim::GetAttr[name="activation"](%self.371)
                        %bias.273 : Tensor = prim::GetAttr[name="bias"](%self.371)
                        %weight.379 : Tensor = prim::GetAttr[name="weight"](%self.371)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2
                        %8 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2
                        %18 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.147 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.379, %bias.273, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward"](%activation.13, %input.147)
                        return (%25)
                  
                    }
                  }
                  submodules {
                    module __torch__.torch.nn.modules.activation.___torch_mangle_148.ReLU {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.373 : __torch__.torch.nn.modules.activation.___torch_mangle_148.ReLU,
                                %input.147 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                            %x.143 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.147), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn2/__module.model.roi_heads.mask_head.mask_fcn2.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%x.143)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
                module __torch__.detectron2.layers.wrappers.___torch_mangle_151.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                    activation = <__torch__.torch.nn.modules.activation.___torch_mangle_150.ReLU object at 0x56190795a1d0>
                  }
                  methods {
                    method forward {
                      graph(%self.375 : __torch__.detectron2.layers.wrappers.___torch_mangle_151.Conv2d,
                            %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                        %activation.15 : __torch__.torch.nn.modules.activation.___torch_mangle_150.ReLU = prim::GetAttr[name="activation"](%self.375)
                        %bias.275 : Tensor = prim::GetAttr[name="bias"](%self.375)
                        %weight.381 : Tensor = prim::GetAttr[name="weight"](%self.375)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3
                        %8 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3
                        %18 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.149 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.381, %bias.275, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward"](%activation.15, %input.149)
                        return (%25)
                  
                    }
                  }
                  submodules {
                    module __torch__.torch.nn.modules.activation.___torch_mangle_150.ReLU {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.377 : __torch__.torch.nn.modules.activation.___torch_mangle_150.ReLU,
                                %input.149 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                            %x.145 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.149), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn3/__module.model.roi_heads.mask_head.mask_fcn3.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%x.145)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
                module __torch__.detectron2.layers.wrappers.___torch_mangle_153.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                    activation = <__torch__.torch.nn.modules.activation.___torch_mangle_152.ReLU object at 0x56190795d510>
                  }
                  methods {
                    method forward {
                      graph(%self.379 : __torch__.detectron2.layers.wrappers.___torch_mangle_153.Conv2d,
                            %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                        %activation : __torch__.torch.nn.modules.activation.___torch_mangle_152.ReLU = prim::GetAttr[name="activation"](%self.379)
                        %bias.277 : Tensor = prim::GetAttr[name="bias"](%self.379)
                        %weight.383 : Tensor = prim::GetAttr[name="weight"](%self.379)
                        %5 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %7 : int[] = prim::ListConstruct(%5, %6), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4
                        %8 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %10 : int[] = prim::ListConstruct(%8, %9), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %13 : int[] = prim::ListConstruct(%11, %12), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4
                        %14 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %17 : int[] = prim::ListConstruct(%15, %16), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4
                        %18 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %22 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %input.151 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.383, %bias.277, %7, %10, %13, %14, %17, %18, %19, %20, %21, %22), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4 # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %25 : Tensor = prim::CallMethod[name="forward"](%activation, %input.151)
                        return (%25)
                  
                    }
                  }
                  submodules {
                    module __torch__.torch.nn.modules.activation.___torch_mangle_152.ReLU {
                      parameters {
                      }
                      attributes {
                        training = False
                        _is_full_backward_hook = None
                      }
                      methods {
                        method forward {
                          graph(%self.381 : __torch__.torch.nn.modules.activation.___torch_mangle_152.ReLU,
                                %input.151 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                            %input.153 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0) = aten::relu(%input.151), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.mask_fcn4/__module.model.roi_heads.mask_head.mask_fcn4.activation # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                            return (%input.153)
                      
                        }
                      }
                      submodules {
                      }
                    }
                  }
                }
                module __torch__.torch.nn.modules.conv.ConvTranspose2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.383 : __torch__.torch.nn.modules.conv.ConvTranspose2d,
                            %1 : Float(52, 256, 14, 14, strides=[50176, 196, 14, 1], requires_grad=0, device=cuda:0)):
                        %bias.279 : Tensor = prim::GetAttr[name="bias"](%self.383)
                        %weight.385 : Tensor = prim::GetAttr[name="weight"](%self.383)
                        %4 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %5 : int = prim::Constant[value=2](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv
                        %7 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv
                        %10 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv
                        %13 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv
                        %17 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        %input : Float(52, 256, 28, 28, strides=[200704, 784, 28, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight.385, %bias.279, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/modules/conv.py:925:0
                        return (%input)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.torch.nn.modules.activation.___torch_mangle_154.ReLU {
                  parameters {
                  }
                  attributes {
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self.385 : __torch__.torch.nn.modules.activation.___torch_mangle_154.ReLU,
                            %1 : Float(52, 256, 28, 28, strides=[200704, 784, 28, 1], requires_grad=0, device=cuda:0)):
                        %x : Float(52, 256, 28, 28, strides=[200704, 784, 28, 1], requires_grad=0, device=cuda:0) = aten::relu(%1), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.deconv_relu # /home/tbelldev/anaconda3/envs/autolabeling/lib/python3.8/site-packages/torch/nn/functional.py:1442:0
                        return (%x)
                  
                    }
                  }
                  submodules {
                  }
                }
                module __torch__.detectron2.layers.wrappers.___torch_mangle_155.Conv2d {
                  parameters {
                    weight = ...
                    bias = ...
                  }
                  attributes {
                    weight = ...
                    bias = ...
                    training = False
                    _is_full_backward_hook = None
                  }
                  methods {
                    method forward {
                      graph(%self : __torch__.detectron2.layers.wrappers.___torch_mangle_155.Conv2d,
                            %1 : Float(52, 256, 28, 28, strides=[200704, 784, 28, 1], requires_grad=0, device=cuda:0)):
                        %bias : Tensor = prim::GetAttr[name="bias"](%self)
                        %weight : Tensor = prim::GetAttr[name="weight"](%self)
                        %4 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %5 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %6 : int[] = prim::ListConstruct(%4, %5), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor
                        %7 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %8 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %9 : int[] = prim::ListConstruct(%7, %8), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor
                        %10 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %11 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %12 : int[] = prim::ListConstruct(%10, %11), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor
                        %13 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %14 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %15 : int = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %16 : int[] = prim::ListConstruct(%14, %15), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor
                        %17 : int = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %18 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %19 : bool = prim::Constant[value=0](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %20 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %21 : bool = prim::Constant[value=1](), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        %pred_mask_logits : Float(52, 80, 28, 28, strides=[62720, 784, 28, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1, %weight, %bias, %6, %9, %12, %13, %16, %17, %18, %19, %20, %21), scope: __module.model.roi_heads/__module.model.roi_heads.mask_head/__module.model.roi_heads.mask_head.predictor # /home/tbelldev/workspace/detectron2/detectron2/detectron2/layers/wrappers.py:113:0
                        return (%pred_mask_logits)
                  
                    }
                  }
                  submodules {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
